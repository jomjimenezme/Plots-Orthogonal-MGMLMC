lun oct  9 09:44:29 CEST 2023
sed -f double.sed src/operator_generic.c > build/gsrc/operator_double.c
cp src/dirac.h build/gsrc/dirac.h
cp src/sse_float_intrinsic.h build/gsrc/sse_float_intrinsic.h
cp src/sse_double_intrinsic.h build/gsrc/sse_double_intrinsic.h
cp src/blas_vectorized.h build/gsrc/blas_vectorized.h
cp src/DDalphaAMG.h build/gsrc/DDalphaAMG.h
cp src/io.h build/gsrc/io.h
cp src/sse_complex_float_intrinsic.h build/gsrc/sse_complex_float_intrinsic.h
cp src/top_level.h build/gsrc/top_level.h
cp src/sse_complex_double_intrinsic.h build/gsrc/sse_complex_double_intrinsic.h
cp src/sse_blas_vectorized.h build/gsrc/sse_blas_vectorized.h
cp src/main.h build/gsrc/main.h
cp src/sse_linalg.h build/gsrc/sse_linalg.h
cp src/init.h build/gsrc/init.h
cp src/solver_analysis.h build/gsrc/solver_analysis.h
cp src/var_table.h build/gsrc/var_table.h
cp src/data_layout.h build/gsrc/data_layout.h
cp src/sse_coarse_operator.h build/gsrc/sse_coarse_operator.h
cp src/vectorization_control.h build/gsrc/vectorization_control.h
cp src/linalg.h build/gsrc/linalg.h
cp src/sse_dirac_su3local.h build/gsrc/sse_dirac_su3local.h
cp src/linsolve.h build/gsrc/linsolve.h
cp src/ghost.h build/gsrc/ghost.h
cp src/sse_dirac.h build/gsrc/sse_dirac.h
cp src/threading.h build/gsrc/threading.h
cp src/lime_io.h build/gsrc/lime_io.h
cp src/preconditioner.h build/gsrc/preconditioner.h
cp src/clifford.h build/gsrc/clifford.h
sed -f float.sed src/sse_interpolation_generic.h > build/gsrc/sse_interpolation_float.h
sed -f float.sed src/main_post_def_generic.h > build/gsrc/main_post_def_float.h
sed -f float.sed src/block_jacobi_generic.h > build/gsrc/block_jacobi_float.h
sed -f float.sed src/coarse_operator_generic.h > build/gsrc/coarse_operator_float.h
sed -f float.sed src/coarse_oddeven_generic.h > build/gsrc/coarse_oddeven_float.h
sed -f float.sed src/vcycle_generic.h > build/gsrc/vcycle_float.h
sed -f float.sed src/gathering_generic.h > build/gsrc/gathering_float.h
sed -f float.sed src/main_pre_def_generic.h > build/gsrc/main_pre_def_float.h
sed -f float.sed src/vectorization_dirac_generic.h > build/gsrc/vectorization_dirac_float.h
sed -f float.sed src/oddeven_generic.h > build/gsrc/oddeven_float.h
sed -f float.sed src/powerit_generic.h > build/gsrc/powerit_float.h
sed -f float.sed src/hutchinson_generic.h > build/gsrc/hutchinson_float.h
sed -f float.sed src/dirac_generic.h > build/gsrc/dirac_float.h
sed -f float.sed src/linalg_generic.h > build/gsrc/linalg_float.h
sed -f float.sed src/sse_linalg_generic.h > build/gsrc/sse_linalg_float.h
sed -f float.sed src/coarsening_generic.h > build/gsrc/coarsening_float.h
sed -f float.sed src/interpolation_generic.h > build/gsrc/interpolation_float.h
sed -f float.sed src/gcrodr_generic.h > build/gsrc/gcrodr_float.h
sed -f float.sed src/lapackwrap_generic.h > build/gsrc/lapackwrap_float.h
sed -f float.sed src/data_generic.h > build/gsrc/data_float.h
sed -f float.sed src/local_polyprec_generic.h > build/gsrc/local_polyprec_float.h
sed -f float.sed src/sse_coarse_operator_generic.h > build/gsrc/sse_coarse_operator_float.h
sed -f float.sed src/schwarz_generic.h > build/gsrc/schwarz_float.h
sed -f float.sed src/init_generic.h > build/gsrc/init_float.h
sed -f float.sed src/linsolve_generic.h > build/gsrc/linsolve_float.h
sed -f float.sed src/operator_generic.h > build/gsrc/operator_float.h
sed -f float.sed src/ghost_generic.h > build/gsrc/ghost_float.h
sed -f float.sed src/setup_generic.h > build/gsrc/setup_float.h
sed -f float.sed src/polyprec_generic.h > build/gsrc/polyprec_float.h
sed -f double.sed src/sse_interpolation_generic.h > build/gsrc/sse_interpolation_double.h
sed -f double.sed src/main_post_def_generic.h > build/gsrc/main_post_def_double.h
sed -f double.sed src/block_jacobi_generic.h > build/gsrc/block_jacobi_double.h
sed -f double.sed src/coarse_operator_generic.h > build/gsrc/coarse_operator_double.h
sed -f double.sed src/coarse_oddeven_generic.h > build/gsrc/coarse_oddeven_double.h
sed -f double.sed src/vcycle_generic.h > build/gsrc/vcycle_double.h
sed -f double.sed src/gathering_generic.h > build/gsrc/gathering_double.h
sed -f double.sed src/main_pre_def_generic.h > build/gsrc/main_pre_def_double.h
sed -f double.sed src/vectorization_dirac_generic.h > build/gsrc/vectorization_dirac_double.h
sed -f double.sed src/oddeven_generic.h > build/gsrc/oddeven_double.h
sed -f double.sed src/powerit_generic.h > build/gsrc/powerit_double.h
sed -f double.sed src/hutchinson_generic.h > build/gsrc/hutchinson_double.h
sed -f double.sed src/dirac_generic.h > build/gsrc/dirac_double.h
sed -f double.sed src/linalg_generic.h > build/gsrc/linalg_double.h
sed -f double.sed src/sse_linalg_generic.h > build/gsrc/sse_linalg_double.h
sed -f double.sed src/coarsening_generic.h > build/gsrc/coarsening_double.h
sed -f double.sed src/interpolation_generic.h > build/gsrc/interpolation_double.h
sed -f double.sed src/gcrodr_generic.h > build/gsrc/gcrodr_double.h
sed -f double.sed src/lapackwrap_generic.h > build/gsrc/lapackwrap_double.h
sed -f double.sed src/data_generic.h > build/gsrc/data_double.h
sed -f double.sed src/local_polyprec_generic.h > build/gsrc/local_polyprec_double.h
sed -f double.sed src/sse_coarse_operator_generic.h > build/gsrc/sse_coarse_operator_double.h
sed -f double.sed src/schwarz_generic.h > build/gsrc/schwarz_double.h
sed -f double.sed src/init_generic.h > build/gsrc/init_double.h
sed -f double.sed src/linsolve_generic.h > build/gsrc/linsolve_double.h
sed -f double.sed src/operator_generic.h > build/gsrc/operator_double.h
sed -f double.sed src/ghost_generic.h > build/gsrc/ghost_double.h
sed -f double.sed src/setup_generic.h > build/gsrc/setup_double.h
sed -f double.sed src/polyprec_generic.h > build/gsrc/polyprec_double.h
cpp -MM build/gsrc/operator_double.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/operator_double.dep : ,g' > build/gsrc/operator_double.dep
cpp -MM build/gsrc/operator_double.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/operator_double.dep : ,g' >> build/gsrc/operator_double.dep
sed -f double.sed src/local_polyprec_generic.c > build/gsrc/local_polyprec_double.c
cpp -MM build/gsrc/local_polyprec_double.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/local_polyprec_double.dep : ,g' > build/gsrc/local_polyprec_double.dep
cpp -MM build/gsrc/local_polyprec_double.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/local_polyprec_double.dep : ,g' >> build/gsrc/local_polyprec_double.dep
sed -f double.sed src/data_generic.c > build/gsrc/data_double.c
cpp -MM build/gsrc/data_double.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/data_double.dep : ,g' > build/gsrc/data_double.dep
cpp -MM build/gsrc/data_double.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/data_double.dep : ,g' >> build/gsrc/data_double.dep
sed -f double.sed src/lapackwrap_generic.c > build/gsrc/lapackwrap_double.c
cpp -MM build/gsrc/lapackwrap_double.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/lapackwrap_double.dep : ,g' > build/gsrc/lapackwrap_double.dep
cpp -MM build/gsrc/lapackwrap_double.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/lapackwrap_double.dep : ,g' >> build/gsrc/lapackwrap_double.dep
sed -f double.sed src/gcrodr_generic.c > build/gsrc/gcrodr_double.c
cpp -MM build/gsrc/gcrodr_double.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/gcrodr_double.dep : ,g' > build/gsrc/gcrodr_double.dep
cpp -MM build/gsrc/gcrodr_double.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/gcrodr_double.dep : ,g' >> build/gsrc/gcrodr_double.dep
sed -f double.sed src/sse_interpolation_generic.c > build/gsrc/sse_interpolation_double.c
cpp -MM build/gsrc/sse_interpolation_double.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/sse_interpolation_double.dep : ,g' > build/gsrc/sse_interpolation_double.dep
cpp -MM build/gsrc/sse_interpolation_double.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/sse_interpolation_double.dep : ,g' >> build/gsrc/sse_interpolation_double.dep
sed -f double.sed src/interpolation_generic.c > build/gsrc/interpolation_double.c
cpp -MM build/gsrc/interpolation_double.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/interpolation_double.dep : ,g' > build/gsrc/interpolation_double.dep
cpp -MM build/gsrc/interpolation_double.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/interpolation_double.dep : ,g' >> build/gsrc/interpolation_double.dep
sed -f double.sed src/coarsening_generic.c > build/gsrc/coarsening_double.c
cpp -MM build/gsrc/coarsening_double.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/coarsening_double.dep : ,g' > build/gsrc/coarsening_double.dep
cpp -MM build/gsrc/coarsening_double.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/coarsening_double.dep : ,g' >> build/gsrc/coarsening_double.dep
sed -f double.sed src/sse_linalg_generic.c > build/gsrc/sse_linalg_double.c
cpp -MM build/gsrc/sse_linalg_double.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/sse_linalg_double.dep : ,g' > build/gsrc/sse_linalg_double.dep
cpp -MM build/gsrc/sse_linalg_double.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/sse_linalg_double.dep : ,g' >> build/gsrc/sse_linalg_double.dep
sed -f double.sed src/linalg_generic.c > build/gsrc/linalg_double.c
cpp -MM build/gsrc/linalg_double.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/linalg_double.dep : ,g' > build/gsrc/linalg_double.dep
cpp -MM build/gsrc/linalg_double.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/linalg_double.dep : ,g' >> build/gsrc/linalg_double.dep
sed -f double.sed src/hutchinson_generic.c > build/gsrc/hutchinson_double.c
cpp -MM build/gsrc/hutchinson_double.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/hutchinson_double.dep : ,g' > build/gsrc/hutchinson_double.dep
cpp -MM build/gsrc/hutchinson_double.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/hutchinson_double.dep : ,g' >> build/gsrc/hutchinson_double.dep
sed -f double.sed src/vectorization_dirac_generic.c > build/gsrc/vectorization_dirac_double.c
cpp -MM build/gsrc/vectorization_dirac_double.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/vectorization_dirac_double.dep : ,g' > build/gsrc/vectorization_dirac_double.dep
cpp -MM build/gsrc/vectorization_dirac_double.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/vectorization_dirac_double.dep : ,g' >> build/gsrc/vectorization_dirac_double.dep
sed -f double.sed src/init_generic.c > build/gsrc/init_double.c
cpp -MM build/gsrc/init_double.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/init_double.dep : ,g' > build/gsrc/init_double.dep
cpp -MM build/gsrc/init_double.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/init_double.dep : ,g' >> build/gsrc/init_double.dep
sed -f double.sed src/oddeven_generic.c > build/gsrc/oddeven_double.c
cpp -MM build/gsrc/oddeven_double.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/oddeven_double.dep : ,g' > build/gsrc/oddeven_double.dep
cpp -MM build/gsrc/oddeven_double.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/oddeven_double.dep : ,g' >> build/gsrc/oddeven_double.dep
sed -f double.sed src/vcycle_generic.c > build/gsrc/vcycle_double.c
cpp -MM build/gsrc/vcycle_double.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/vcycle_double.dep : ,g' > build/gsrc/vcycle_double.dep
cpp -MM build/gsrc/vcycle_double.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/vcycle_double.dep : ,g' >> build/gsrc/vcycle_double.dep
sed -f double.sed src/coarse_oddeven_generic.c > build/gsrc/coarse_oddeven_double.c
cpp -MM build/gsrc/coarse_oddeven_double.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/coarse_oddeven_double.dep : ,g' > build/gsrc/coarse_oddeven_double.dep
cpp -MM build/gsrc/coarse_oddeven_double.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/coarse_oddeven_double.dep : ,g' >> build/gsrc/coarse_oddeven_double.dep
sed -f double.sed src/coarse_operator_generic.c > build/gsrc/coarse_operator_double.c
cpp -MM build/gsrc/coarse_operator_double.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/coarse_operator_double.dep : ,g' > build/gsrc/coarse_operator_double.dep
cpp -MM build/gsrc/coarse_operator_double.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/coarse_operator_double.dep : ,g' >> build/gsrc/coarse_operator_double.dep
sed -f double.sed src/setup_generic.c > build/gsrc/setup_double.c
cpp -MM build/gsrc/setup_double.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/setup_double.dep : ,g' > build/gsrc/setup_double.dep
cpp -MM build/gsrc/setup_double.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/setup_double.dep : ,g' >> build/gsrc/setup_double.dep
sed -f double.sed src/schwarz_generic.c > build/gsrc/schwarz_double.c
cpp -MM build/gsrc/schwarz_double.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/schwarz_double.dep : ,g' > build/gsrc/schwarz_double.dep
cpp -MM build/gsrc/schwarz_double.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/schwarz_double.dep : ,g' >> build/gsrc/schwarz_double.dep
sed -f double.sed src/block_jacobi_generic.c > build/gsrc/block_jacobi_double.c
cpp -MM build/gsrc/block_jacobi_double.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/block_jacobi_double.dep : ,g' > build/gsrc/block_jacobi_double.dep
cpp -MM build/gsrc/block_jacobi_double.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/block_jacobi_double.dep : ,g' >> build/gsrc/block_jacobi_double.dep
sed -f double.sed src/dirac_generic.c > build/gsrc/dirac_double.c
cpp -MM build/gsrc/dirac_double.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/dirac_double.dep : ,g' > build/gsrc/dirac_double.dep
cpp -MM build/gsrc/dirac_double.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/dirac_double.dep : ,g' >> build/gsrc/dirac_double.dep
sed -f double.sed src/sse_coarse_operator_generic.c > build/gsrc/sse_coarse_operator_double.c
cpp -MM build/gsrc/sse_coarse_operator_double.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/sse_coarse_operator_double.dep : ,g' > build/gsrc/sse_coarse_operator_double.dep
cpp -MM build/gsrc/sse_coarse_operator_double.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/sse_coarse_operator_double.dep : ,g' >> build/gsrc/sse_coarse_operator_double.dep
sed -f double.sed src/powerit_generic.c > build/gsrc/powerit_double.c
cpp -MM build/gsrc/powerit_double.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/powerit_double.dep : ,g' > build/gsrc/powerit_double.dep
cpp -MM build/gsrc/powerit_double.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/powerit_double.dep : ,g' >> build/gsrc/powerit_double.dep
sed -f double.sed src/polyprec_generic.c > build/gsrc/polyprec_double.c
cpp -MM build/gsrc/polyprec_double.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/polyprec_double.dep : ,g' > build/gsrc/polyprec_double.dep
cpp -MM build/gsrc/polyprec_double.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/polyprec_double.dep : ,g' >> build/gsrc/polyprec_double.dep
sed -f double.sed src/ghost_generic.c > build/gsrc/ghost_double.c
cpp -MM build/gsrc/ghost_double.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/ghost_double.dep : ,g' > build/gsrc/ghost_double.dep
cpp -MM build/gsrc/ghost_double.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/ghost_double.dep : ,g' >> build/gsrc/ghost_double.dep
sed -f double.sed src/gathering_generic.c > build/gsrc/gathering_double.c
cpp -MM build/gsrc/gathering_double.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/gathering_double.dep : ,g' > build/gsrc/gathering_double.dep
cpp -MM build/gsrc/gathering_double.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/gathering_double.dep : ,g' >> build/gsrc/gathering_double.dep
sed -f double.sed src/linsolve_generic.c > build/gsrc/linsolve_double.c
cpp -MM build/gsrc/linsolve_double.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/linsolve_double.dep : ,g' > build/gsrc/linsolve_double.dep
cpp -MM build/gsrc/linsolve_double.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/linsolve_double.dep : ,g' >> build/gsrc/linsolve_double.dep
sed -f float.sed src/operator_generic.c > build/gsrc/operator_float.c
cpp -MM build/gsrc/operator_float.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/operator_float.dep : ,g' > build/gsrc/operator_float.dep
cpp -MM build/gsrc/operator_float.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/operator_float.dep : ,g' >> build/gsrc/operator_float.dep
sed -f float.sed src/local_polyprec_generic.c > build/gsrc/local_polyprec_float.c
cpp -MM build/gsrc/local_polyprec_float.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/local_polyprec_float.dep : ,g' > build/gsrc/local_polyprec_float.dep
cpp -MM build/gsrc/local_polyprec_float.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/local_polyprec_float.dep : ,g' >> build/gsrc/local_polyprec_float.dep
sed -f float.sed src/data_generic.c > build/gsrc/data_float.c
cpp -MM build/gsrc/data_float.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/data_float.dep : ,g' > build/gsrc/data_float.dep
cpp -MM build/gsrc/data_float.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/data_float.dep : ,g' >> build/gsrc/data_float.dep
sed -f float.sed src/lapackwrap_generic.c > build/gsrc/lapackwrap_float.c
cpp -MM build/gsrc/lapackwrap_float.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/lapackwrap_float.dep : ,g' > build/gsrc/lapackwrap_float.dep
cpp -MM build/gsrc/lapackwrap_float.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/lapackwrap_float.dep : ,g' >> build/gsrc/lapackwrap_float.dep
sed -f float.sed src/gcrodr_generic.c > build/gsrc/gcrodr_float.c
cpp -MM build/gsrc/gcrodr_float.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/gcrodr_float.dep : ,g' > build/gsrc/gcrodr_float.dep
cpp -MM build/gsrc/gcrodr_float.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/gcrodr_float.dep : ,g' >> build/gsrc/gcrodr_float.dep
sed -f float.sed src/sse_interpolation_generic.c > build/gsrc/sse_interpolation_float.c
cpp -MM build/gsrc/sse_interpolation_float.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/sse_interpolation_float.dep : ,g' > build/gsrc/sse_interpolation_float.dep
cpp -MM build/gsrc/sse_interpolation_float.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/sse_interpolation_float.dep : ,g' >> build/gsrc/sse_interpolation_float.dep
sed -f float.sed src/interpolation_generic.c > build/gsrc/interpolation_float.c
cpp -MM build/gsrc/interpolation_float.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/interpolation_float.dep : ,g' > build/gsrc/interpolation_float.dep
cpp -MM build/gsrc/interpolation_float.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/interpolation_float.dep : ,g' >> build/gsrc/interpolation_float.dep
sed -f float.sed src/coarsening_generic.c > build/gsrc/coarsening_float.c
cpp -MM build/gsrc/coarsening_float.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/coarsening_float.dep : ,g' > build/gsrc/coarsening_float.dep
cpp -MM build/gsrc/coarsening_float.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/coarsening_float.dep : ,g' >> build/gsrc/coarsening_float.dep
sed -f float.sed src/sse_linalg_generic.c > build/gsrc/sse_linalg_float.c
cpp -MM build/gsrc/sse_linalg_float.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/sse_linalg_float.dep : ,g' > build/gsrc/sse_linalg_float.dep
cpp -MM build/gsrc/sse_linalg_float.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/sse_linalg_float.dep : ,g' >> build/gsrc/sse_linalg_float.dep
sed -f float.sed src/linalg_generic.c > build/gsrc/linalg_float.c
cpp -MM build/gsrc/linalg_float.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/linalg_float.dep : ,g' > build/gsrc/linalg_float.dep
cpp -MM build/gsrc/linalg_float.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/linalg_float.dep : ,g' >> build/gsrc/linalg_float.dep
sed -f float.sed src/hutchinson_generic.c > build/gsrc/hutchinson_float.c
cpp -MM build/gsrc/hutchinson_float.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/hutchinson_float.dep : ,g' > build/gsrc/hutchinson_float.dep
cpp -MM build/gsrc/hutchinson_float.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/hutchinson_float.dep : ,g' >> build/gsrc/hutchinson_float.dep
sed -f float.sed src/vectorization_dirac_generic.c > build/gsrc/vectorization_dirac_float.c
cpp -MM build/gsrc/vectorization_dirac_float.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/vectorization_dirac_float.dep : ,g' > build/gsrc/vectorization_dirac_float.dep
cpp -MM build/gsrc/vectorization_dirac_float.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/vectorization_dirac_float.dep : ,g' >> build/gsrc/vectorization_dirac_float.dep
sed -f float.sed src/init_generic.c > build/gsrc/init_float.c
cpp -MM build/gsrc/init_float.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/init_float.dep : ,g' > build/gsrc/init_float.dep
cpp -MM build/gsrc/init_float.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/init_float.dep : ,g' >> build/gsrc/init_float.dep
sed -f float.sed src/oddeven_generic.c > build/gsrc/oddeven_float.c
cpp -MM build/gsrc/oddeven_float.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/oddeven_float.dep : ,g' > build/gsrc/oddeven_float.dep
cpp -MM build/gsrc/oddeven_float.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/oddeven_float.dep : ,g' >> build/gsrc/oddeven_float.dep
sed -f float.sed src/vcycle_generic.c > build/gsrc/vcycle_float.c
cpp -MM build/gsrc/vcycle_float.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/vcycle_float.dep : ,g' > build/gsrc/vcycle_float.dep
cpp -MM build/gsrc/vcycle_float.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/vcycle_float.dep : ,g' >> build/gsrc/vcycle_float.dep
sed -f float.sed src/coarse_oddeven_generic.c > build/gsrc/coarse_oddeven_float.c
cpp -MM build/gsrc/coarse_oddeven_float.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/coarse_oddeven_float.dep : ,g' > build/gsrc/coarse_oddeven_float.dep
cpp -MM build/gsrc/coarse_oddeven_float.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/coarse_oddeven_float.dep : ,g' >> build/gsrc/coarse_oddeven_float.dep
sed -f float.sed src/coarse_operator_generic.c > build/gsrc/coarse_operator_float.c
cpp -MM build/gsrc/coarse_operator_float.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/coarse_operator_float.dep : ,g' > build/gsrc/coarse_operator_float.dep
cpp -MM build/gsrc/coarse_operator_float.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/coarse_operator_float.dep : ,g' >> build/gsrc/coarse_operator_float.dep
sed -f float.sed src/setup_generic.c > build/gsrc/setup_float.c
cpp -MM build/gsrc/setup_float.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/setup_float.dep : ,g' > build/gsrc/setup_float.dep
cpp -MM build/gsrc/setup_float.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/setup_float.dep : ,g' >> build/gsrc/setup_float.dep
sed -f float.sed src/schwarz_generic.c > build/gsrc/schwarz_float.c
cpp -MM build/gsrc/schwarz_float.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/schwarz_float.dep : ,g' > build/gsrc/schwarz_float.dep
cpp -MM build/gsrc/schwarz_float.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/schwarz_float.dep : ,g' >> build/gsrc/schwarz_float.dep
sed -f float.sed src/block_jacobi_generic.c > build/gsrc/block_jacobi_float.c
cpp -MM build/gsrc/block_jacobi_float.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/block_jacobi_float.dep : ,g' > build/gsrc/block_jacobi_float.dep
cpp -MM build/gsrc/block_jacobi_float.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/block_jacobi_float.dep : ,g' >> build/gsrc/block_jacobi_float.dep
sed -f float.sed src/dirac_generic.c > build/gsrc/dirac_float.c
cpp -MM build/gsrc/dirac_float.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/dirac_float.dep : ,g' > build/gsrc/dirac_float.dep
cpp -MM build/gsrc/dirac_float.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/dirac_float.dep : ,g' >> build/gsrc/dirac_float.dep
sed -f float.sed src/sse_coarse_operator_generic.c > build/gsrc/sse_coarse_operator_float.c
cpp -MM build/gsrc/sse_coarse_operator_float.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/sse_coarse_operator_float.dep : ,g' > build/gsrc/sse_coarse_operator_float.dep
cpp -MM build/gsrc/sse_coarse_operator_float.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/sse_coarse_operator_float.dep : ,g' >> build/gsrc/sse_coarse_operator_float.dep
sed -f float.sed src/powerit_generic.c > build/gsrc/powerit_float.c
cpp -MM build/gsrc/powerit_float.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/powerit_float.dep : ,g' > build/gsrc/powerit_float.dep
cpp -MM build/gsrc/powerit_float.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/powerit_float.dep : ,g' >> build/gsrc/powerit_float.dep
sed -f float.sed src/polyprec_generic.c > build/gsrc/polyprec_float.c
cpp -MM build/gsrc/polyprec_float.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/polyprec_float.dep : ,g' > build/gsrc/polyprec_float.dep
cpp -MM build/gsrc/polyprec_float.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/polyprec_float.dep : ,g' >> build/gsrc/polyprec_float.dep
sed -f float.sed src/ghost_generic.c > build/gsrc/ghost_float.c
cpp -MM build/gsrc/ghost_float.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/ghost_float.dep : ,g' > build/gsrc/ghost_float.dep
cpp -MM build/gsrc/ghost_float.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/ghost_float.dep : ,g' >> build/gsrc/ghost_float.dep
sed -f float.sed src/gathering_generic.c > build/gsrc/gathering_float.c
cpp -MM build/gsrc/gathering_float.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/gathering_float.dep : ,g' > build/gsrc/gathering_float.dep
cpp -MM build/gsrc/gathering_float.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/gathering_float.dep : ,g' >> build/gsrc/gathering_float.dep
sed -f float.sed src/linsolve_generic.c > build/gsrc/linsolve_float.c
cpp -MM build/gsrc/linsolve_float.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/linsolve_float.dep : ,g' > build/gsrc/linsolve_float.dep
cpp -MM build/gsrc/linsolve_float.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/linsolve_float.dep : ,g' >> build/gsrc/linsolve_float.dep
cp src/linsolve.c build/gsrc/linsolve.c
cpp -MM build/gsrc/linsolve.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/linsolve.dep : ,g' > build/gsrc/linsolve.dep
cpp -MM build/gsrc/linsolve.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/linsolve.dep : ,g' >> build/gsrc/linsolve.dep
cp src/data_layout.c build/gsrc/data_layout.c
cpp -MM build/gsrc/data_layout.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/data_layout.dep : ,g' > build/gsrc/data_layout.dep
cpp -MM build/gsrc/data_layout.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/data_layout.dep : ,g' >> build/gsrc/data_layout.dep
cp src/var_table.c build/gsrc/var_table.c
cpp -MM build/gsrc/var_table.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/var_table.dep : ,g' > build/gsrc/var_table.dep
cpp -MM build/gsrc/var_table.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/var_table.dep : ,g' >> build/gsrc/var_table.dep
cp src/sse_linalg.c build/gsrc/sse_linalg.c
cpp -MM build/gsrc/sse_linalg.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/sse_linalg.dep : ,g' > build/gsrc/sse_linalg.dep
cpp -MM build/gsrc/sse_linalg.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/sse_linalg.dep : ,g' >> build/gsrc/sse_linalg.dep
cp src/main.c build/gsrc/main.c
cpp -MM build/gsrc/main.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/main.dep : ,g' > build/gsrc/main.dep
cpp -MM build/gsrc/main.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/main.dep : ,g' >> build/gsrc/main.dep
cp src/threading.c build/gsrc/threading.c
cpp -MM build/gsrc/threading.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/threading.dep : ,g' > build/gsrc/threading.dep
cpp -MM build/gsrc/threading.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/threading.dep : ,g' >> build/gsrc/threading.dep
cp src/preconditioner.c build/gsrc/preconditioner.c
cpp -MM build/gsrc/preconditioner.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/preconditioner.dep : ,g' > build/gsrc/preconditioner.dep
cpp -MM build/gsrc/preconditioner.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/preconditioner.dep : ,g' >> build/gsrc/preconditioner.dep
cp src/DDalphaAMG_interface.c build/gsrc/DDalphaAMG_interface.c
cpp -MM build/gsrc/DDalphaAMG_interface.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/DDalphaAMG_interface.dep : ,g' > build/gsrc/DDalphaAMG_interface.dep
cpp -MM build/gsrc/DDalphaAMG_interface.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/DDalphaAMG_interface.dep : ,g' >> build/gsrc/DDalphaAMG_interface.dep
cp src/linalg.c build/gsrc/linalg.c
cpp -MM build/gsrc/linalg.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/linalg.dep : ,g' > build/gsrc/linalg.dep
cpp -MM build/gsrc/linalg.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/linalg.dep : ,g' >> build/gsrc/linalg.dep
cp src/top_level.c build/gsrc/top_level.c
cpp -MM build/gsrc/top_level.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/top_level.dep : ,g' > build/gsrc/top_level.dep
cpp -MM build/gsrc/top_level.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/top_level.dep : ,g' >> build/gsrc/top_level.dep
cp src/sse_dirac.c build/gsrc/sse_dirac.c
cpp -MM build/gsrc/sse_dirac.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/sse_dirac.dep : ,g' > build/gsrc/sse_dirac.dep
cpp -MM build/gsrc/sse_dirac.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/sse_dirac.dep : ,g' >> build/gsrc/sse_dirac.dep
cp src/io.c build/gsrc/io.c
cpp -MM build/gsrc/io.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/io.dep : ,g' > build/gsrc/io.dep
cpp -MM build/gsrc/io.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/io.dep : ,g' >> build/gsrc/io.dep
cp src/solver_analysis.c build/gsrc/solver_analysis.c
cpp -MM build/gsrc/solver_analysis.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/solver_analysis.dep : ,g' > build/gsrc/solver_analysis.dep
cpp -MM build/gsrc/solver_analysis.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/solver_analysis.dep : ,g' >> build/gsrc/solver_analysis.dep
cp src/init.c build/gsrc/init.c
cpp -MM build/gsrc/init.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/init.dep : ,g' > build/gsrc/init.dep
cpp -MM build/gsrc/init.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/init.dep : ,g' >> build/gsrc/init.dep
cp src/dirac.c build/gsrc/dirac.c
cpp -MM build/gsrc/dirac.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/dirac.dep : ,g' > build/gsrc/dirac.dep
cpp -MM build/gsrc/dirac.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/dirac.dep : ,g' >> build/gsrc/dirac.dep
cp src/lime_io.c build/gsrc/lime_io.c
cpp -MM build/gsrc/lime_io.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/lime_io.dep : ,g' > build/gsrc/lime_io.dep
cpp -MM build/gsrc/lime_io.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/lime_io.dep : ,g' >> build/gsrc/lime_io.dep
cp src/ghost.c build/gsrc/ghost.c
cpp -MM build/gsrc/ghost.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/ghost.dep : ,g' > build/gsrc/ghost.dep
cpp -MM build/gsrc/ghost.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/ghost.dep : ,g' >> build/gsrc/ghost.dep
rm -f build/*.o
rm -f build/gsrc/*
sed -f double.sed src/operator_generic.c > build/gsrc/operator_double.c
cp src/dirac.h build/gsrc/dirac.h
cp src/sse_float_intrinsic.h build/gsrc/sse_float_intrinsic.h
cp src/sse_double_intrinsic.h build/gsrc/sse_double_intrinsic.h
cp src/blas_vectorized.h build/gsrc/blas_vectorized.h
cp src/DDalphaAMG.h build/gsrc/DDalphaAMG.h
cp src/io.h build/gsrc/io.h
cp src/sse_complex_float_intrinsic.h build/gsrc/sse_complex_float_intrinsic.h
cp src/top_level.h build/gsrc/top_level.h
cp src/sse_complex_double_intrinsic.h build/gsrc/sse_complex_double_intrinsic.h
cp src/sse_blas_vectorized.h build/gsrc/sse_blas_vectorized.h
cp src/main.h build/gsrc/main.h
cp src/sse_linalg.h build/gsrc/sse_linalg.h
cp src/init.h build/gsrc/init.h
cp src/solver_analysis.h build/gsrc/solver_analysis.h
cp src/var_table.h build/gsrc/var_table.h
cp src/data_layout.h build/gsrc/data_layout.h
cp src/sse_coarse_operator.h build/gsrc/sse_coarse_operator.h
cp src/vectorization_control.h build/gsrc/vectorization_control.h
cp src/linalg.h build/gsrc/linalg.h
cp src/sse_dirac_su3local.h build/gsrc/sse_dirac_su3local.h
cp src/linsolve.h build/gsrc/linsolve.h
cp src/ghost.h build/gsrc/ghost.h
cp src/sse_dirac.h build/gsrc/sse_dirac.h
cp src/threading.h build/gsrc/threading.h
cp src/lime_io.h build/gsrc/lime_io.h
cp src/preconditioner.h build/gsrc/preconditioner.h
cp src/clifford.h build/gsrc/clifford.h
sed -f float.sed src/sse_interpolation_generic.h > build/gsrc/sse_interpolation_float.h
sed -f float.sed src/main_post_def_generic.h > build/gsrc/main_post_def_float.h
sed -f float.sed src/block_jacobi_generic.h > build/gsrc/block_jacobi_float.h
sed -f float.sed src/coarse_operator_generic.h > build/gsrc/coarse_operator_float.h
sed -f float.sed src/coarse_oddeven_generic.h > build/gsrc/coarse_oddeven_float.h
sed -f float.sed src/vcycle_generic.h > build/gsrc/vcycle_float.h
sed -f float.sed src/gathering_generic.h > build/gsrc/gathering_float.h
sed -f float.sed src/main_pre_def_generic.h > build/gsrc/main_pre_def_float.h
sed -f float.sed src/vectorization_dirac_generic.h > build/gsrc/vectorization_dirac_float.h
sed -f float.sed src/oddeven_generic.h > build/gsrc/oddeven_float.h
sed -f float.sed src/powerit_generic.h > build/gsrc/powerit_float.h
sed -f float.sed src/hutchinson_generic.h > build/gsrc/hutchinson_float.h
sed -f float.sed src/dirac_generic.h > build/gsrc/dirac_float.h
sed -f float.sed src/linalg_generic.h > build/gsrc/linalg_float.h
sed -f float.sed src/sse_linalg_generic.h > build/gsrc/sse_linalg_float.h
sed -f float.sed src/coarsening_generic.h > build/gsrc/coarsening_float.h
sed -f float.sed src/interpolation_generic.h > build/gsrc/interpolation_float.h
sed -f float.sed src/gcrodr_generic.h > build/gsrc/gcrodr_float.h
sed -f float.sed src/lapackwrap_generic.h > build/gsrc/lapackwrap_float.h
sed -f float.sed src/data_generic.h > build/gsrc/data_float.h
sed -f float.sed src/local_polyprec_generic.h > build/gsrc/local_polyprec_float.h
sed -f float.sed src/sse_coarse_operator_generic.h > build/gsrc/sse_coarse_operator_float.h
sed -f float.sed src/schwarz_generic.h > build/gsrc/schwarz_float.h
sed -f float.sed src/init_generic.h > build/gsrc/init_float.h
sed -f float.sed src/linsolve_generic.h > build/gsrc/linsolve_float.h
sed -f float.sed src/operator_generic.h > build/gsrc/operator_float.h
sed -f float.sed src/ghost_generic.h > build/gsrc/ghost_float.h
sed -f float.sed src/setup_generic.h > build/gsrc/setup_float.h
sed -f float.sed src/polyprec_generic.h > build/gsrc/polyprec_float.h
sed -f double.sed src/sse_interpolation_generic.h > build/gsrc/sse_interpolation_double.h
sed -f double.sed src/main_post_def_generic.h > build/gsrc/main_post_def_double.h
sed -f double.sed src/block_jacobi_generic.h > build/gsrc/block_jacobi_double.h
sed -f double.sed src/coarse_operator_generic.h > build/gsrc/coarse_operator_double.h
sed -f double.sed src/coarse_oddeven_generic.h > build/gsrc/coarse_oddeven_double.h
sed -f double.sed src/vcycle_generic.h > build/gsrc/vcycle_double.h
sed -f double.sed src/gathering_generic.h > build/gsrc/gathering_double.h
sed -f double.sed src/main_pre_def_generic.h > build/gsrc/main_pre_def_double.h
sed -f double.sed src/vectorization_dirac_generic.h > build/gsrc/vectorization_dirac_double.h
sed -f double.sed src/oddeven_generic.h > build/gsrc/oddeven_double.h
sed -f double.sed src/powerit_generic.h > build/gsrc/powerit_double.h
sed -f double.sed src/hutchinson_generic.h > build/gsrc/hutchinson_double.h
sed -f double.sed src/dirac_generic.h > build/gsrc/dirac_double.h
sed -f double.sed src/linalg_generic.h > build/gsrc/linalg_double.h
sed -f double.sed src/sse_linalg_generic.h > build/gsrc/sse_linalg_double.h
sed -f double.sed src/coarsening_generic.h > build/gsrc/coarsening_double.h
sed -f double.sed src/interpolation_generic.h > build/gsrc/interpolation_double.h
sed -f double.sed src/gcrodr_generic.h > build/gsrc/gcrodr_double.h
sed -f double.sed src/lapackwrap_generic.h > build/gsrc/lapackwrap_double.h
sed -f double.sed src/data_generic.h > build/gsrc/data_double.h
sed -f double.sed src/local_polyprec_generic.h > build/gsrc/local_polyprec_double.h
sed -f double.sed src/sse_coarse_operator_generic.h > build/gsrc/sse_coarse_operator_double.h
sed -f double.sed src/schwarz_generic.h > build/gsrc/schwarz_double.h
sed -f double.sed src/init_generic.h > build/gsrc/init_double.h
sed -f double.sed src/linsolve_generic.h > build/gsrc/linsolve_double.h
sed -f double.sed src/operator_generic.h > build/gsrc/operator_double.h
sed -f double.sed src/ghost_generic.h > build/gsrc/ghost_double.h
sed -f double.sed src/setup_generic.h > build/gsrc/setup_double.h
sed -f double.sed src/polyprec_generic.h > build/gsrc/polyprec_double.h
sed -f double.sed src/local_polyprec_generic.c > build/gsrc/local_polyprec_double.c
sed -f double.sed src/data_generic.c > build/gsrc/data_double.c
sed -f double.sed src/lapackwrap_generic.c > build/gsrc/lapackwrap_double.c
sed -f double.sed src/gcrodr_generic.c > build/gsrc/gcrodr_double.c
sed -f double.sed src/sse_interpolation_generic.c > build/gsrc/sse_interpolation_double.c
sed -f double.sed src/interpolation_generic.c > build/gsrc/interpolation_double.c
sed -f double.sed src/coarsening_generic.c > build/gsrc/coarsening_double.c
sed -f double.sed src/sse_linalg_generic.c > build/gsrc/sse_linalg_double.c
sed -f double.sed src/linalg_generic.c > build/gsrc/linalg_double.c
sed -f double.sed src/hutchinson_generic.c > build/gsrc/hutchinson_double.c
sed -f double.sed src/vectorization_dirac_generic.c > build/gsrc/vectorization_dirac_double.c
sed -f double.sed src/init_generic.c > build/gsrc/init_double.c
sed -f double.sed src/oddeven_generic.c > build/gsrc/oddeven_double.c
sed -f double.sed src/vcycle_generic.c > build/gsrc/vcycle_double.c
sed -f double.sed src/coarse_oddeven_generic.c > build/gsrc/coarse_oddeven_double.c
sed -f double.sed src/coarse_operator_generic.c > build/gsrc/coarse_operator_double.c
sed -f double.sed src/setup_generic.c > build/gsrc/setup_double.c
sed -f double.sed src/schwarz_generic.c > build/gsrc/schwarz_double.c
sed -f double.sed src/block_jacobi_generic.c > build/gsrc/block_jacobi_double.c
sed -f double.sed src/dirac_generic.c > build/gsrc/dirac_double.c
sed -f double.sed src/sse_coarse_operator_generic.c > build/gsrc/sse_coarse_operator_double.c
sed -f double.sed src/powerit_generic.c > build/gsrc/powerit_double.c
sed -f double.sed src/polyprec_generic.c > build/gsrc/polyprec_double.c
sed -f double.sed src/ghost_generic.c > build/gsrc/ghost_double.c
sed -f double.sed src/gathering_generic.c > build/gsrc/gathering_double.c
sed -f double.sed src/linsolve_generic.c > build/gsrc/linsolve_double.c
sed -f float.sed src/operator_generic.c > build/gsrc/operator_float.c
sed -f float.sed src/local_polyprec_generic.c > build/gsrc/local_polyprec_float.c
sed -f float.sed src/data_generic.c > build/gsrc/data_float.c
sed -f float.sed src/lapackwrap_generic.c > build/gsrc/lapackwrap_float.c
sed -f float.sed src/gcrodr_generic.c > build/gsrc/gcrodr_float.c
sed -f float.sed src/sse_interpolation_generic.c > build/gsrc/sse_interpolation_float.c
sed -f float.sed src/interpolation_generic.c > build/gsrc/interpolation_float.c
sed -f float.sed src/coarsening_generic.c > build/gsrc/coarsening_float.c
sed -f float.sed src/sse_linalg_generic.c > build/gsrc/sse_linalg_float.c
sed -f float.sed src/linalg_generic.c > build/gsrc/linalg_float.c
sed -f float.sed src/hutchinson_generic.c > build/gsrc/hutchinson_float.c
sed -f float.sed src/vectorization_dirac_generic.c > build/gsrc/vectorization_dirac_float.c
sed -f float.sed src/init_generic.c > build/gsrc/init_float.c
sed -f float.sed src/oddeven_generic.c > build/gsrc/oddeven_float.c
sed -f float.sed src/vcycle_generic.c > build/gsrc/vcycle_float.c
sed -f float.sed src/coarse_oddeven_generic.c > build/gsrc/coarse_oddeven_float.c
sed -f float.sed src/coarse_operator_generic.c > build/gsrc/coarse_operator_float.c
sed -f float.sed src/setup_generic.c > build/gsrc/setup_float.c
sed -f float.sed src/schwarz_generic.c > build/gsrc/schwarz_float.c
sed -f float.sed src/block_jacobi_generic.c > build/gsrc/block_jacobi_float.c
sed -f float.sed src/dirac_generic.c > build/gsrc/dirac_float.c
sed -f float.sed src/sse_coarse_operator_generic.c > build/gsrc/sse_coarse_operator_float.c
sed -f float.sed src/powerit_generic.c > build/gsrc/powerit_float.c
sed -f float.sed src/polyprec_generic.c > build/gsrc/polyprec_float.c
sed -f float.sed src/ghost_generic.c > build/gsrc/ghost_float.c
sed -f float.sed src/gathering_generic.c > build/gsrc/gathering_float.c
sed -f float.sed src/linsolve_generic.c > build/gsrc/linsolve_float.c
cp src/linsolve.c build/gsrc/linsolve.c
cp src/data_layout.c build/gsrc/data_layout.c
cp src/var_table.c build/gsrc/var_table.c
cp src/sse_linalg.c build/gsrc/sse_linalg.c
cp src/main.c build/gsrc/main.c
cp src/threading.c build/gsrc/threading.c
cp src/preconditioner.c build/gsrc/preconditioner.c
cp src/DDalphaAMG_interface.c build/gsrc/DDalphaAMG_interface.c
cp src/linalg.c build/gsrc/linalg.c
cp src/top_level.c build/gsrc/top_level.c
cp src/sse_dirac.c build/gsrc/sse_dirac.c
cp src/io.c build/gsrc/io.c
cp src/solver_analysis.c build/gsrc/solver_analysis.c
cp src/init.c build/gsrc/init.c
cp src/dirac.c build/gsrc/dirac.c
cp src/lime_io.c build/gsrc/lime_io.c
cp src/ghost.c build/gsrc/ghost.c
cpp -MM build/gsrc/operator_double.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/operator_double.dep : ,g' > build/gsrc/operator_double.dep
cpp -MM build/gsrc/local_polyprec_double.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/local_polyprec_double.dep : ,g' > build/gsrc/local_polyprec_double.dep
cpp -MM build/gsrc/data_double.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/data_double.dep : ,g' > build/gsrc/data_double.dep
cpp -MM build/gsrc/lapackwrap_double.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/lapackwrap_double.dep : ,g' > build/gsrc/lapackwrap_double.dep
cpp -MM build/gsrc/gcrodr_double.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/gcrodr_double.dep : ,g' > build/gsrc/gcrodr_double.dep
cpp -MM build/gsrc/sse_interpolation_double.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/sse_interpolation_double.dep : ,g' > build/gsrc/sse_interpolation_double.dep
cpp -MM build/gsrc/interpolation_double.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/interpolation_double.dep : ,g' > build/gsrc/interpolation_double.dep
cpp -MM build/gsrc/coarsening_double.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/coarsening_double.dep : ,g' > build/gsrc/coarsening_double.dep
cpp -MM build/gsrc/sse_linalg_double.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/sse_linalg_double.dep : ,g' > build/gsrc/sse_linalg_double.dep
cpp -MM build/gsrc/linalg_double.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/linalg_double.dep : ,g' > build/gsrc/linalg_double.dep
cpp -MM build/gsrc/hutchinson_double.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/hutchinson_double.dep : ,g' > build/gsrc/hutchinson_double.dep
cpp -MM build/gsrc/vectorization_dirac_double.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/vectorization_dirac_double.dep : ,g' > build/gsrc/vectorization_dirac_double.dep
cpp -MM build/gsrc/init_double.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/init_double.dep : ,g' > build/gsrc/init_double.dep
cpp -MM build/gsrc/oddeven_double.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/oddeven_double.dep : ,g' > build/gsrc/oddeven_double.dep
cpp -MM build/gsrc/vcycle_double.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/vcycle_double.dep : ,g' > build/gsrc/vcycle_double.dep
cpp -MM build/gsrc/coarse_oddeven_double.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/coarse_oddeven_double.dep : ,g' > build/gsrc/coarse_oddeven_double.dep
cpp -MM build/gsrc/coarse_operator_double.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/coarse_operator_double.dep : ,g' > build/gsrc/coarse_operator_double.dep
cpp -MM build/gsrc/setup_double.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/setup_double.dep : ,g' > build/gsrc/setup_double.dep
cpp -MM build/gsrc/schwarz_double.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/schwarz_double.dep : ,g' > build/gsrc/schwarz_double.dep
cpp -MM build/gsrc/block_jacobi_double.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/block_jacobi_double.dep : ,g' > build/gsrc/block_jacobi_double.dep
cpp -MM build/gsrc/dirac_double.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/dirac_double.dep : ,g' > build/gsrc/dirac_double.dep
cpp -MM build/gsrc/sse_coarse_operator_double.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/sse_coarse_operator_double.dep : ,g' > build/gsrc/sse_coarse_operator_double.dep
cpp -MM build/gsrc/powerit_double.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/powerit_double.dep : ,g' > build/gsrc/powerit_double.dep
cpp -MM build/gsrc/polyprec_double.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/polyprec_double.dep : ,g' > build/gsrc/polyprec_double.dep
cpp -MM build/gsrc/ghost_double.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/ghost_double.dep : ,g' > build/gsrc/ghost_double.dep
cpp -MM build/gsrc/gathering_double.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/gathering_double.dep : ,g' > build/gsrc/gathering_double.dep
cpp -MM build/gsrc/linsolve_double.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/linsolve_double.dep : ,g' > build/gsrc/linsolve_double.dep
cpp -MM build/gsrc/operator_float.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/operator_float.dep : ,g' > build/gsrc/operator_float.dep
cpp -MM build/gsrc/local_polyprec_float.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/local_polyprec_float.dep : ,g' > build/gsrc/local_polyprec_float.dep
cpp -MM build/gsrc/data_float.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/data_float.dep : ,g' > build/gsrc/data_float.dep
cpp -MM build/gsrc/lapackwrap_float.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/lapackwrap_float.dep : ,g' > build/gsrc/lapackwrap_float.dep
cpp -MM build/gsrc/gcrodr_float.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/gcrodr_float.dep : ,g' > build/gsrc/gcrodr_float.dep
cpp -MM build/gsrc/sse_interpolation_float.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/sse_interpolation_float.dep : ,g' > build/gsrc/sse_interpolation_float.dep
cpp -MM build/gsrc/interpolation_float.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/interpolation_float.dep : ,g' > build/gsrc/interpolation_float.dep
cpp -MM build/gsrc/coarsening_float.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/coarsening_float.dep : ,g' > build/gsrc/coarsening_float.dep
cpp -MM build/gsrc/sse_linalg_float.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/sse_linalg_float.dep : ,g' > build/gsrc/sse_linalg_float.dep
cpp -MM build/gsrc/linalg_float.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/linalg_float.dep : ,g' > build/gsrc/linalg_float.dep
cpp -MM build/gsrc/hutchinson_float.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/hutchinson_float.dep : ,g' > build/gsrc/hutchinson_float.dep
cpp -MM build/gsrc/vectorization_dirac_float.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/vectorization_dirac_float.dep : ,g' > build/gsrc/vectorization_dirac_float.dep
cpp -MM build/gsrc/init_float.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/init_float.dep : ,g' > build/gsrc/init_float.dep
cpp -MM build/gsrc/oddeven_float.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/oddeven_float.dep : ,g' > build/gsrc/oddeven_float.dep
cpp -MM build/gsrc/vcycle_float.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/vcycle_float.dep : ,g' > build/gsrc/vcycle_float.dep
cpp -MM build/gsrc/coarse_oddeven_float.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/coarse_oddeven_float.dep : ,g' > build/gsrc/coarse_oddeven_float.dep
cpp -MM build/gsrc/coarse_operator_float.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/coarse_operator_float.dep : ,g' > build/gsrc/coarse_operator_float.dep
cpp -MM build/gsrc/setup_float.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/setup_float.dep : ,g' > build/gsrc/setup_float.dep
cpp -MM build/gsrc/schwarz_float.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/schwarz_float.dep : ,g' > build/gsrc/schwarz_float.dep
cpp -MM build/gsrc/block_jacobi_float.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/block_jacobi_float.dep : ,g' > build/gsrc/block_jacobi_float.dep
cpp -MM build/gsrc/dirac_float.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/dirac_float.dep : ,g' > build/gsrc/dirac_float.dep
cpp -MM build/gsrc/sse_coarse_operator_float.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/sse_coarse_operator_float.dep : ,g' > build/gsrc/sse_coarse_operator_float.dep
cpp -MM build/gsrc/powerit_float.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/powerit_float.dep : ,g' > build/gsrc/powerit_float.dep
cpp -MM build/gsrc/polyprec_float.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/polyprec_float.dep : ,g' > build/gsrc/polyprec_float.dep
cpp -MM build/gsrc/ghost_float.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/ghost_float.dep : ,g' > build/gsrc/ghost_float.dep
cpp -MM build/gsrc/gathering_float.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/gathering_float.dep : ,g' > build/gsrc/gathering_float.dep
cpp -MM build/gsrc/linsolve_float.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/linsolve_float.dep : ,g' > build/gsrc/linsolve_float.dep
cpp -MM build/gsrc/linsolve.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/linsolve.dep : ,g' > build/gsrc/linsolve.dep
cpp -MM build/gsrc/data_layout.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/data_layout.dep : ,g' > build/gsrc/data_layout.dep
cpp -MM build/gsrc/var_table.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/var_table.dep : ,g' > build/gsrc/var_table.dep
cpp -MM build/gsrc/sse_linalg.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/sse_linalg.dep : ,g' > build/gsrc/sse_linalg.dep
cpp -MM build/gsrc/main.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/main.dep : ,g' > build/gsrc/main.dep
cpp -MM build/gsrc/threading.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/threading.dep : ,g' > build/gsrc/threading.dep
cpp -MM build/gsrc/preconditioner.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/preconditioner.dep : ,g' > build/gsrc/preconditioner.dep
cpp -MM build/gsrc/DDalphaAMG_interface.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/DDalphaAMG_interface.dep : ,g' > build/gsrc/DDalphaAMG_interface.dep
cpp -MM build/gsrc/linalg.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/linalg.dep : ,g' > build/gsrc/linalg.dep
cpp -MM build/gsrc/top_level.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/top_level.dep : ,g' > build/gsrc/top_level.dep
cpp -MM build/gsrc/oddeven_float.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/oddeven_float.dep : ,g' >> build/gsrc/oddeven_float.dep
cpp -MM build/gsrc/polyprec_float.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/polyprec_float.dep : ,g' >> build/gsrc/polyprec_float.dep
cpp -MM build/gsrc/top_level.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/top_level.dep : ,g' >> build/gsrc/top_level.dep
cpp -MM build/gsrc/data_float.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/data_float.dep : ,g' >> build/gsrc/data_float.dep
cpp -MM build/gsrc/block_jacobi_double.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/block_jacobi_double.dep : ,g' >> build/gsrc/block_jacobi_double.dep
cpp -MM build/gsrc/gcrodr_float.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/gcrodr_float.dep : ,g' >> build/gsrc/gcrodr_float.dep
cpp -MM build/gsrc/interpolation_float.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/interpolation_float.dep : ,g' >> build/gsrc/interpolation_float.dep
cpp -MM build/gsrc/linsolve_float.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/linsolve_float.dep : ,g' >> build/gsrc/linsolve_float.dep
cpp -MM build/gsrc/data_layout.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/data_layout.dep : ,g' >> build/gsrc/data_layout.dep
cpp -MM build/gsrc/linalg.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/linalg.dep : ,g' >> build/gsrc/linalg.dep
cpp -MM build/gsrc/dirac_double.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/dirac_double.dep : ,g' >> build/gsrc/dirac_double.dep
cpp -MM build/gsrc/gcrodr_double.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/gcrodr_double.dep : ,g' >> build/gsrc/gcrodr_double.dep
cpp -MM build/gsrc/local_polyprec_double.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/local_polyprec_double.dep : ,g' >> build/gsrc/local_polyprec_double.dep
cpp -MM build/gsrc/sse_coarse_operator_double.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/sse_coarse_operator_double.dep : ,g' >> build/gsrc/sse_coarse_operator_double.dep
cpp -MM build/gsrc/polyprec_double.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/polyprec_double.dep : ,g' >> build/gsrc/polyprec_double.dep
cpp -MM build/gsrc/operator_double.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/operator_double.dep : ,g' >> build/gsrc/operator_double.dep
cpp -MM build/gsrc/lapackwrap_float.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/lapackwrap_float.dep : ,g' >> build/gsrc/lapackwrap_float.dep
cpp -MM build/gsrc/setup_double.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/setup_double.dep : ,g' >> build/gsrc/setup_double.dep
cpp -MM build/gsrc/setup_float.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/setup_float.dep : ,g' >> build/gsrc/setup_float.dep
cpp -MM build/gsrc/init_double.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/init_double.dep : ,g' >> build/gsrc/init_double.dep
cpp -MM build/gsrc/main.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/main.dep : ,g' >> build/gsrc/main.dep
cpp -MM build/gsrc/coarsening_double.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/coarsening_double.dep : ,g' >> build/gsrc/coarsening_double.dep
cpp -MM build/gsrc/coarsening_float.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/coarsening_float.dep : ,g' >> build/gsrc/coarsening_float.dep
cpp -MM build/gsrc/sse_interpolation_float.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/sse_interpolation_float.dep : ,g' >> build/gsrc/sse_interpolation_float.dep
cpp -MM build/gsrc/sse_linalg.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/sse_linalg.dep : ,g' >> build/gsrc/sse_linalg.dep
cpp -MM build/gsrc/linalg_double.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/linalg_double.dep : ,g' >> build/gsrc/linalg_double.dep
cpp -MM build/gsrc/powerit_double.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/powerit_double.dep : ,g' >> build/gsrc/powerit_double.dep
cpp -MM build/gsrc/schwarz_float.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/schwarz_float.dep : ,g' >> build/gsrc/schwarz_float.dep
cpp -MM build/gsrc/linsolve.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/linsolve.dep : ,g' >> build/gsrc/linsolve.dep
cpp -MM build/gsrc/gathering_double.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/gathering_double.dep : ,g' >> build/gsrc/gathering_double.dep
cpp -MM build/gsrc/vectorization_dirac_float.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/vectorization_dirac_float.dep : ,g' >> build/gsrc/vectorization_dirac_float.dep
cpp -MM build/gsrc/hutchinson_float.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/hutchinson_float.dep : ,g' >> build/gsrc/hutchinson_float.dep
cpp -MM build/gsrc/linsolve_double.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/linsolve_double.dep : ,g' >> build/gsrc/linsolve_double.dep
cpp -MM build/gsrc/oddeven_double.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/oddeven_double.dep : ,g' >> build/gsrc/oddeven_double.dep
cpp -MM build/gsrc/init_float.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/init_float.dep : ,g' >> build/gsrc/init_float.dep
cpp -MM build/gsrc/vectorization_dirac_double.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/vectorization_dirac_double.dep : ,g' >> build/gsrc/vectorization_dirac_double.dep
cpp -MM build/gsrc/interpolation_double.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/interpolation_double.dep : ,g' >> build/gsrc/interpolation_double.dep
cpp -MM build/gsrc/hutchinson_double.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/hutchinson_double.dep : ,g' >> build/gsrc/hutchinson_double.dep
cpp -MM build/gsrc/vcycle_double.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/vcycle_double.dep : ,g' >> build/gsrc/vcycle_double.dep
cpp -MM build/gsrc/coarse_oddeven_double.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/coarse_oddeven_double.dep : ,g' >> build/gsrc/coarse_oddeven_double.dep
cpp -MM build/gsrc/coarse_operator_double.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/coarse_operator_double.dep : ,g' >> build/gsrc/coarse_operator_double.dep
cpp -MM build/gsrc/local_polyprec_float.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/local_polyprec_float.dep : ,g' >> build/gsrc/local_polyprec_float.dep
cpp -MM build/gsrc/sse_linalg_float.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/sse_linalg_float.dep : ,g' >> build/gsrc/sse_linalg_float.dep
cpp -MM build/gsrc/vcycle_float.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/vcycle_float.dep : ,g' >> build/gsrc/vcycle_float.dep
cpp -MM build/gsrc/var_table.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/var_table.dep : ,g' >> build/gsrc/var_table.dep
cpp -MM build/gsrc/lapackwrap_double.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/lapackwrap_double.dep : ,g' >> build/gsrc/lapackwrap_double.dep
cpp -MM build/gsrc/operator_float.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/operator_float.dep : ,g' >> build/gsrc/operator_float.dep
cpp -MM build/gsrc/linalg_float.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/linalg_float.dep : ,g' >> build/gsrc/linalg_float.dep
cpp -MM build/gsrc/threading.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/threading.dep : ,g' >> build/gsrc/threading.dep
cpp -MM build/gsrc/DDalphaAMG_interface.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/DDalphaAMG_interface.dep : ,g' >> build/gsrc/DDalphaAMG_interface.dep
cpp -MM build/gsrc/sse_interpolation_double.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/sse_interpolation_double.dep : ,g' >> build/gsrc/sse_interpolation_double.dep
cpp -MM build/gsrc/dirac_float.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/dirac_float.dep : ,g' >> build/gsrc/dirac_float.dep
cpp -MM build/gsrc/sse_linalg_double.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/sse_linalg_double.dep : ,g' >> build/gsrc/sse_linalg_double.dep
cpp -MM build/gsrc/ghost_double.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/ghost_double.dep : ,g' >> build/gsrc/ghost_double.dep
cpp -MM build/gsrc/data_double.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/data_double.dep : ,g' >> build/gsrc/data_double.dep
cpp -MM build/gsrc/gathering_float.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/gathering_float.dep : ,g' >> build/gsrc/gathering_float.dep
cpp -MM build/gsrc/coarse_oddeven_float.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/coarse_oddeven_float.dep : ,g' >> build/gsrc/coarse_oddeven_float.dep
cpp -MM build/gsrc/powerit_float.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/powerit_float.dep : ,g' >> build/gsrc/powerit_float.dep
cpp -MM build/gsrc/schwarz_double.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/schwarz_double.dep : ,g' >> build/gsrc/schwarz_double.dep
cpp -MM build/gsrc/ghost_float.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/ghost_float.dep : ,g' >> build/gsrc/ghost_float.dep
cpp -MM build/gsrc/sse_dirac.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/sse_dirac.dep : ,g' > build/gsrc/sse_dirac.dep
cpp -MM build/gsrc/coarse_operator_float.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/coarse_operator_float.dep : ,g' >> build/gsrc/coarse_operator_float.dep
cpp -MM build/gsrc/sse_coarse_operator_float.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/sse_coarse_operator_float.dep : ,g' >> build/gsrc/sse_coarse_operator_float.dep
cpp -MM build/gsrc/preconditioner.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/preconditioner.dep : ,g' >> build/gsrc/preconditioner.dep
cpp -MM build/gsrc/block_jacobi_float.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/block_jacobi_float.dep : ,g' >> build/gsrc/block_jacobi_float.dep
cpp -MM build/gsrc/io.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/io.dep : ,g' > build/gsrc/io.dep
cpp -MM build/gsrc/solver_analysis.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/solver_analysis.dep : ,g' > build/gsrc/solver_analysis.dep
cpp -MM build/gsrc/init.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/init.dep : ,g' > build/gsrc/init.dep
cpp -MM build/gsrc/dirac.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/dirac.dep : ,g' > build/gsrc/dirac.dep
cpp -MM build/gsrc/lime_io.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/lime_io.dep : ,g' > build/gsrc/lime_io.dep
cpp -MM build/gsrc/ghost.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/ghost.dep : ,g' > build/gsrc/ghost.dep
cpp -MM build/gsrc/sse_dirac.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/sse_dirac.dep : ,g' >> build/gsrc/sse_dirac.dep
cpp -MM build/gsrc/io.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/io.dep : ,g' >> build/gsrc/io.dep
cpp -MM build/gsrc/dirac.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/dirac.dep : ,g' >> build/gsrc/dirac.dep
cpp -MM build/gsrc/solver_analysis.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/solver_analysis.dep : ,g' >> build/gsrc/solver_analysis.dep
cpp -MM build/gsrc/init.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/init.dep : ,g' >> build/gsrc/init.dep
cpp -MM build/gsrc/ghost.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/ghost.dep : ,g' >> build/gsrc/ghost.dep
cpp -MM build/gsrc/lime_io.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/lime_io.dep : ,g' >> build/gsrc/lime_io.dep
mpicc -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp    -DPARAMOUTPUT -DTRACK_RES -DPROFILING  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/ghost.c -o build/ghost.o
mpicc -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp    -DPARAMOUTPUT -DTRACK_RES -DPROFILING  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/lime_io.c -o build/lime_io.o
mpicc -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp    -DPARAMOUTPUT -DTRACK_RES -DPROFILING  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/dirac.c -o build/dirac.o
mpicc -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp    -DPARAMOUTPUT -DTRACK_RES -DPROFILING  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/init.c -o build/init.o
mpicc -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp    -DPARAMOUTPUT -DTRACK_RES -DPROFILING  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/solver_analysis.c -o build/solver_analysis.o
mpicc -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp    -DPARAMOUTPUT -DTRACK_RES -DPROFILING  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/io.c -o build/io.o
mpicc -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp    -DPARAMOUTPUT -DTRACK_RES -DPROFILING  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/sse_dirac.c -o build/sse_dirac.o
mpicc -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp    -DPARAMOUTPUT -DTRACK_RES -DPROFILING  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/top_level.c -o build/top_level.o
mpicc -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp    -DPARAMOUTPUT -DTRACK_RES -DPROFILING  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/linalg.c -o build/linalg.o
mpicc -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp    -DPARAMOUTPUT -DTRACK_RES -DPROFILING  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/DDalphaAMG_interface.c -o build/DDalphaAMG_interface.o
mpicc -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp    -DPARAMOUTPUT -DTRACK_RES -DPROFILING  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/preconditioner.c -o build/preconditioner.o
mpicc -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp    -DPARAMOUTPUT -DTRACK_RES -DPROFILING  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/threading.c -o build/threading.o
mpicc -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp    -DPARAMOUTPUT -DTRACK_RES -DPROFILING  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/main.c -o build/main.o
mpicc -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp    -DPARAMOUTPUT -DTRACK_RES -DPROFILING  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/sse_linalg.c -o build/sse_linalg.o
mpicc -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp    -DPARAMOUTPUT -DTRACK_RES -DPROFILING  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/var_table.c -o build/var_table.o
mpicc -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp    -DPARAMOUTPUT -DTRACK_RES -DPROFILING  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/data_layout.c -o build/data_layout.o
mpicc -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp    -DPARAMOUTPUT -DTRACK_RES -DPROFILING  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/linsolve.c -o build/linsolve.o
mpicc -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp    -DPARAMOUTPUT -DTRACK_RES -DPROFILING  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/linsolve_float.c -o build/linsolve_float.o
mpicc -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp    -DPARAMOUTPUT -DTRACK_RES -DPROFILING  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/gathering_float.c -o build/gathering_float.o
mpicc -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp    -DPARAMOUTPUT -DTRACK_RES -DPROFILING  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/ghost_float.c -o build/ghost_float.o
mpicc -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp    -DPARAMOUTPUT -DTRACK_RES -DPROFILING  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/polyprec_float.c -o build/polyprec_float.o
mpicc -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp    -DPARAMOUTPUT -DTRACK_RES -DPROFILING  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/powerit_float.c -o build/powerit_float.o
mpicc -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp    -DPARAMOUTPUT -DTRACK_RES -DPROFILING  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/sse_coarse_operator_float.c -o build/sse_coarse_operator_float.o
mpicc -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp    -DPARAMOUTPUT -DTRACK_RES -DPROFILING  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/dirac_float.c -o build/dirac_float.o
mpicc -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp    -DPARAMOUTPUT -DTRACK_RES -DPROFILING  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/block_jacobi_float.c -o build/block_jacobi_float.o
mpicc -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp    -DPARAMOUTPUT -DTRACK_RES -DPROFILING  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/schwarz_float.c -o build/schwarz_float.o
mpicc -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp    -DPARAMOUTPUT -DTRACK_RES -DPROFILING  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/setup_float.c -o build/setup_float.o
mpicc -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp    -DPARAMOUTPUT -DTRACK_RES -DPROFILING  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/coarse_operator_float.c -o build/coarse_operator_float.o
mpicc -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp    -DPARAMOUTPUT -DTRACK_RES -DPROFILING  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/coarse_oddeven_float.c -o build/coarse_oddeven_float.o
mpicc -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp    -DPARAMOUTPUT -DTRACK_RES -DPROFILING  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/vcycle_float.c -o build/vcycle_float.o
mpicc -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp    -DPARAMOUTPUT -DTRACK_RES -DPROFILING  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/oddeven_float.c -o build/oddeven_float.o
mpicc -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp    -DPARAMOUTPUT -DTRACK_RES -DPROFILING  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/init_float.c -o build/init_float.o
mpicc -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp    -DPARAMOUTPUT -DTRACK_RES -DPROFILING  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/vectorization_dirac_float.c -o build/vectorization_dirac_float.o
mpicc -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp    -DPARAMOUTPUT -DTRACK_RES -DPROFILING  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/hutchinson_float.c -o build/hutchinson_float.o
mpicc -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp    -DPARAMOUTPUT -DTRACK_RES -DPROFILING  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/linalg_float.c -o build/linalg_float.o
mpicc -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp    -DPARAMOUTPUT -DTRACK_RES -DPROFILING  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/sse_linalg_float.c -o build/sse_linalg_float.o
mpicc -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp    -DPARAMOUTPUT -DTRACK_RES -DPROFILING  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/coarsening_float.c -o build/coarsening_float.o
mpicc -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp    -DPARAMOUTPUT -DTRACK_RES -DPROFILING  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/interpolation_float.c -o build/interpolation_float.o
mpicc -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp    -DPARAMOUTPUT -DTRACK_RES -DPROFILING  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/sse_interpolation_float.c -o build/sse_interpolation_float.o
mpicc -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp    -DPARAMOUTPUT -DTRACK_RES -DPROFILING  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/gcrodr_float.c -o build/gcrodr_float.o
mpicc -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp    -DPARAMOUTPUT -DTRACK_RES -DPROFILING  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/lapackwrap_float.c -o build/lapackwrap_float.o
mpicc -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp    -DPARAMOUTPUT -DTRACK_RES -DPROFILING  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/data_float.c -o build/data_float.o
mpicc -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp    -DPARAMOUTPUT -DTRACK_RES -DPROFILING  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/local_polyprec_float.c -o build/local_polyprec_float.o
mpicc -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp    -DPARAMOUTPUT -DTRACK_RES -DPROFILING  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/operator_float.c -o build/operator_float.o
mpicc -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp    -DPARAMOUTPUT -DTRACK_RES -DPROFILING  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/linsolve_double.c -o build/linsolve_double.o
mpicc -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp    -DPARAMOUTPUT -DTRACK_RES -DPROFILING  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/gathering_double.c -o build/gathering_double.o
mpicc -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp    -DPARAMOUTPUT -DTRACK_RES -DPROFILING  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/ghost_double.c -o build/ghost_double.o
mpicc -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp    -DPARAMOUTPUT -DTRACK_RES -DPROFILING  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/polyprec_double.c -o build/polyprec_double.o
mpicc -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp    -DPARAMOUTPUT -DTRACK_RES -DPROFILING  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/powerit_double.c -o build/powerit_double.o
mpicc -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp    -DPARAMOUTPUT -DTRACK_RES -DPROFILING  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/sse_coarse_operator_double.c -o build/sse_coarse_operator_double.o
mpicc -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp    -DPARAMOUTPUT -DTRACK_RES -DPROFILING  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/dirac_double.c -o build/dirac_double.o
mpicc -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp    -DPARAMOUTPUT -DTRACK_RES -DPROFILING  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/block_jacobi_double.c -o build/block_jacobi_double.o
mpicc -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp    -DPARAMOUTPUT -DTRACK_RES -DPROFILING  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/schwarz_double.c -o build/schwarz_double.o
mpicc -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp    -DPARAMOUTPUT -DTRACK_RES -DPROFILING  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/setup_double.c -o build/setup_double.o
mpicc -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp    -DPARAMOUTPUT -DTRACK_RES -DPROFILING  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/coarse_operator_double.c -o build/coarse_operator_double.o
mpicc -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp    -DPARAMOUTPUT -DTRACK_RES -DPROFILING  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/coarse_oddeven_double.c -o build/coarse_oddeven_double.o
mpicc -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp    -DPARAMOUTPUT -DTRACK_RES -DPROFILING  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/vcycle_double.c -o build/vcycle_double.o
mpicc -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp    -DPARAMOUTPUT -DTRACK_RES -DPROFILING  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/oddeven_double.c -o build/oddeven_double.o
mpicc -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp    -DPARAMOUTPUT -DTRACK_RES -DPROFILING  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/init_double.c -o build/init_double.o
mpicc -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp    -DPARAMOUTPUT -DTRACK_RES -DPROFILING  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/vectorization_dirac_double.c -o build/vectorization_dirac_double.o
mpicc -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp    -DPARAMOUTPUT -DTRACK_RES -DPROFILING  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/hutchinson_double.c -o build/hutchinson_double.o
mpicc -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp    -DPARAMOUTPUT -DTRACK_RES -DPROFILING  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/linalg_double.c -o build/linalg_double.o
mpicc -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp    -DPARAMOUTPUT -DTRACK_RES -DPROFILING  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/sse_linalg_double.c -o build/sse_linalg_double.o
mpicc -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp    -DPARAMOUTPUT -DTRACK_RES -DPROFILING  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/coarsening_double.c -o build/coarsening_double.o
mpicc -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp    -DPARAMOUTPUT -DTRACK_RES -DPROFILING  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/interpolation_double.c -o build/interpolation_double.o
mpicc -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp    -DPARAMOUTPUT -DTRACK_RES -DPROFILING  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/sse_interpolation_double.c -o build/sse_interpolation_double.o
mpicc -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp    -DPARAMOUTPUT -DTRACK_RES -DPROFILING  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/gcrodr_double.c -o build/gcrodr_double.o
mpicc -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp    -DPARAMOUTPUT -DTRACK_RES -DPROFILING  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/lapackwrap_double.c -o build/lapackwrap_double.o
mpicc -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp    -DPARAMOUTPUT -DTRACK_RES -DPROFILING  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/data_double.c -o build/data_double.o
mpicc -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp    -DPARAMOUTPUT -DTRACK_RES -DPROFILING  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/local_polyprec_double.c -o build/local_polyprec_double.o
mpicc -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp    -DPARAMOUTPUT -DTRACK_RES -DPROFILING  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/operator_double.c -o build/operator_double.o
mpicc -g -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp   -DDEBUG -DPARAMOUTPUT -DTRACK_RES -DFGMRES_RESTEST -DPROFILING -DCOARSE_RES -DSCHWARZ_RES -DTESTVECTOR_ANALYSIS  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/ghost.c -o build/ghost_devel.o
mpicc -g -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp   -DDEBUG -DPARAMOUTPUT -DTRACK_RES -DFGMRES_RESTEST -DPROFILING -DCOARSE_RES -DSCHWARZ_RES -DTESTVECTOR_ANALYSIS  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/lime_io.c -o build/lime_io_devel.o
mpicc -g -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp   -DDEBUG -DPARAMOUTPUT -DTRACK_RES -DFGMRES_RESTEST -DPROFILING -DCOARSE_RES -DSCHWARZ_RES -DTESTVECTOR_ANALYSIS  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/dirac.c -o build/dirac_devel.o
mpicc -g -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp   -DDEBUG -DPARAMOUTPUT -DTRACK_RES -DFGMRES_RESTEST -DPROFILING -DCOARSE_RES -DSCHWARZ_RES -DTESTVECTOR_ANALYSIS  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/init.c -o build/init_devel.o
mpicc -g -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp   -DDEBUG -DPARAMOUTPUT -DTRACK_RES -DFGMRES_RESTEST -DPROFILING -DCOARSE_RES -DSCHWARZ_RES -DTESTVECTOR_ANALYSIS  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/solver_analysis.c -o build/solver_analysis_devel.o
mpicc -g -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp   -DDEBUG -DPARAMOUTPUT -DTRACK_RES -DFGMRES_RESTEST -DPROFILING -DCOARSE_RES -DSCHWARZ_RES -DTESTVECTOR_ANALYSIS  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/io.c -o build/io_devel.o
mpicc -g -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp   -DDEBUG -DPARAMOUTPUT -DTRACK_RES -DFGMRES_RESTEST -DPROFILING -DCOARSE_RES -DSCHWARZ_RES -DTESTVECTOR_ANALYSIS  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/sse_dirac.c -o build/sse_dirac_devel.o
mpicc -g -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp   -DDEBUG -DPARAMOUTPUT -DTRACK_RES -DFGMRES_RESTEST -DPROFILING -DCOARSE_RES -DSCHWARZ_RES -DTESTVECTOR_ANALYSIS  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/top_level.c -o build/top_level_devel.o
mpicc -g -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp   -DDEBUG -DPARAMOUTPUT -DTRACK_RES -DFGMRES_RESTEST -DPROFILING -DCOARSE_RES -DSCHWARZ_RES -DTESTVECTOR_ANALYSIS  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/linalg.c -o build/linalg_devel.o
mpicc -g -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp   -DDEBUG -DPARAMOUTPUT -DTRACK_RES -DFGMRES_RESTEST -DPROFILING -DCOARSE_RES -DSCHWARZ_RES -DTESTVECTOR_ANALYSIS  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/DDalphaAMG_interface.c -o build/DDalphaAMG_interface_devel.o
mpicc -g -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp   -DDEBUG -DPARAMOUTPUT -DTRACK_RES -DFGMRES_RESTEST -DPROFILING -DCOARSE_RES -DSCHWARZ_RES -DTESTVECTOR_ANALYSIS  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/preconditioner.c -o build/preconditioner_devel.o
mpicc -g -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp   -DDEBUG -DPARAMOUTPUT -DTRACK_RES -DFGMRES_RESTEST -DPROFILING -DCOARSE_RES -DSCHWARZ_RES -DTESTVECTOR_ANALYSIS  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/threading.c -o build/threading_devel.o
mpicc -g -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp   -DDEBUG -DPARAMOUTPUT -DTRACK_RES -DFGMRES_RESTEST -DPROFILING -DCOARSE_RES -DSCHWARZ_RES -DTESTVECTOR_ANALYSIS  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/main.c -o build/main_devel.o
mpicc -g -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp   -DDEBUG -DPARAMOUTPUT -DTRACK_RES -DFGMRES_RESTEST -DPROFILING -DCOARSE_RES -DSCHWARZ_RES -DTESTVECTOR_ANALYSIS  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/sse_linalg.c -o build/sse_linalg_devel.o
mpicc -g -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp   -DDEBUG -DPARAMOUTPUT -DTRACK_RES -DFGMRES_RESTEST -DPROFILING -DCOARSE_RES -DSCHWARZ_RES -DTESTVECTOR_ANALYSIS  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/var_table.c -o build/var_table_devel.o
mpicc -g -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp   -DDEBUG -DPARAMOUTPUT -DTRACK_RES -DFGMRES_RESTEST -DPROFILING -DCOARSE_RES -DSCHWARZ_RES -DTESTVECTOR_ANALYSIS  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/data_layout.c -o build/data_layout_devel.o
mpicc -g -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp   -DDEBUG -DPARAMOUTPUT -DTRACK_RES -DFGMRES_RESTEST -DPROFILING -DCOARSE_RES -DSCHWARZ_RES -DTESTVECTOR_ANALYSIS  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/linsolve.c -o build/linsolve_devel.o
mpicc -g -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp   -DDEBUG -DPARAMOUTPUT -DTRACK_RES -DFGMRES_RESTEST -DPROFILING -DCOARSE_RES -DSCHWARZ_RES -DTESTVECTOR_ANALYSIS  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/linsolve_float.c -o build/linsolve_float_devel.o
mpicc -g -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp   -DDEBUG -DPARAMOUTPUT -DTRACK_RES -DFGMRES_RESTEST -DPROFILING -DCOARSE_RES -DSCHWARZ_RES -DTESTVECTOR_ANALYSIS  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/gathering_float.c -o build/gathering_float_devel.o
mpicc -g -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp   -DDEBUG -DPARAMOUTPUT -DTRACK_RES -DFGMRES_RESTEST -DPROFILING -DCOARSE_RES -DSCHWARZ_RES -DTESTVECTOR_ANALYSIS  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/ghost_float.c -o build/ghost_float_devel.o
mpicc -g -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp   -DDEBUG -DPARAMOUTPUT -DTRACK_RES -DFGMRES_RESTEST -DPROFILING -DCOARSE_RES -DSCHWARZ_RES -DTESTVECTOR_ANALYSIS  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/polyprec_float.c -o build/polyprec_float_devel.o
mpicc -g -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp   -DDEBUG -DPARAMOUTPUT -DTRACK_RES -DFGMRES_RESTEST -DPROFILING -DCOARSE_RES -DSCHWARZ_RES -DTESTVECTOR_ANALYSIS  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/powerit_float.c -o build/powerit_float_devel.o
mpicc -g -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp   -DDEBUG -DPARAMOUTPUT -DTRACK_RES -DFGMRES_RESTEST -DPROFILING -DCOARSE_RES -DSCHWARZ_RES -DTESTVECTOR_ANALYSIS  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/sse_coarse_operator_float.c -o build/sse_coarse_operator_float_devel.o
mpicc -g -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp   -DDEBUG -DPARAMOUTPUT -DTRACK_RES -DFGMRES_RESTEST -DPROFILING -DCOARSE_RES -DSCHWARZ_RES -DTESTVECTOR_ANALYSIS  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/dirac_float.c -o build/dirac_float_devel.o
mpicc -g -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp   -DDEBUG -DPARAMOUTPUT -DTRACK_RES -DFGMRES_RESTEST -DPROFILING -DCOARSE_RES -DSCHWARZ_RES -DTESTVECTOR_ANALYSIS  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/block_jacobi_float.c -o build/block_jacobi_float_devel.o
mpicc -g -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp   -DDEBUG -DPARAMOUTPUT -DTRACK_RES -DFGMRES_RESTEST -DPROFILING -DCOARSE_RES -DSCHWARZ_RES -DTESTVECTOR_ANALYSIS  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/schwarz_float.c -o build/schwarz_float_devel.o
mpicc -g -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp   -DDEBUG -DPARAMOUTPUT -DTRACK_RES -DFGMRES_RESTEST -DPROFILING -DCOARSE_RES -DSCHWARZ_RES -DTESTVECTOR_ANALYSIS  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/setup_float.c -o build/setup_float_devel.o
mpicc -g -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp   -DDEBUG -DPARAMOUTPUT -DTRACK_RES -DFGMRES_RESTEST -DPROFILING -DCOARSE_RES -DSCHWARZ_RES -DTESTVECTOR_ANALYSIS  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/coarse_operator_float.c -o build/coarse_operator_float_devel.o
mpicc -g -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp   -DDEBUG -DPARAMOUTPUT -DTRACK_RES -DFGMRES_RESTEST -DPROFILING -DCOARSE_RES -DSCHWARZ_RES -DTESTVECTOR_ANALYSIS  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/coarse_oddeven_float.c -o build/coarse_oddeven_float_devel.o
mpicc -g -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp   -DDEBUG -DPARAMOUTPUT -DTRACK_RES -DFGMRES_RESTEST -DPROFILING -DCOARSE_RES -DSCHWARZ_RES -DTESTVECTOR_ANALYSIS  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/vcycle_float.c -o build/vcycle_float_devel.o
mpicc -g -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp   -DDEBUG -DPARAMOUTPUT -DTRACK_RES -DFGMRES_RESTEST -DPROFILING -DCOARSE_RES -DSCHWARZ_RES -DTESTVECTOR_ANALYSIS  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/oddeven_float.c -o build/oddeven_float_devel.o
mpicc -g -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp   -DDEBUG -DPARAMOUTPUT -DTRACK_RES -DFGMRES_RESTEST -DPROFILING -DCOARSE_RES -DSCHWARZ_RES -DTESTVECTOR_ANALYSIS  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/init_float.c -o build/init_float_devel.o
mpicc -g -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp   -DDEBUG -DPARAMOUTPUT -DTRACK_RES -DFGMRES_RESTEST -DPROFILING -DCOARSE_RES -DSCHWARZ_RES -DTESTVECTOR_ANALYSIS  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/vectorization_dirac_float.c -o build/vectorization_dirac_float_devel.o
mpicc -g -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp   -DDEBUG -DPARAMOUTPUT -DTRACK_RES -DFGMRES_RESTEST -DPROFILING -DCOARSE_RES -DSCHWARZ_RES -DTESTVECTOR_ANALYSIS  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/hutchinson_float.c -o build/hutchinson_float_devel.o
mpicc -g -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp   -DDEBUG -DPARAMOUTPUT -DTRACK_RES -DFGMRES_RESTEST -DPROFILING -DCOARSE_RES -DSCHWARZ_RES -DTESTVECTOR_ANALYSIS  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/linalg_float.c -o build/linalg_float_devel.o
mpicc -g -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp   -DDEBUG -DPARAMOUTPUT -DTRACK_RES -DFGMRES_RESTEST -DPROFILING -DCOARSE_RES -DSCHWARZ_RES -DTESTVECTOR_ANALYSIS  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/sse_linalg_float.c -o build/sse_linalg_float_devel.o
mpicc -g -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp   -DDEBUG -DPARAMOUTPUT -DTRACK_RES -DFGMRES_RESTEST -DPROFILING -DCOARSE_RES -DSCHWARZ_RES -DTESTVECTOR_ANALYSIS  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/coarsening_float.c -o build/coarsening_float_devel.o
mpicc -g -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp   -DDEBUG -DPARAMOUTPUT -DTRACK_RES -DFGMRES_RESTEST -DPROFILING -DCOARSE_RES -DSCHWARZ_RES -DTESTVECTOR_ANALYSIS  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/interpolation_float.c -o build/interpolation_float_devel.o
mpicc -g -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp   -DDEBUG -DPARAMOUTPUT -DTRACK_RES -DFGMRES_RESTEST -DPROFILING -DCOARSE_RES -DSCHWARZ_RES -DTESTVECTOR_ANALYSIS  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/sse_interpolation_float.c -o build/sse_interpolation_float_devel.o
mpicc -g -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp   -DDEBUG -DPARAMOUTPUT -DTRACK_RES -DFGMRES_RESTEST -DPROFILING -DCOARSE_RES -DSCHWARZ_RES -DTESTVECTOR_ANALYSIS  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/gcrodr_float.c -o build/gcrodr_float_devel.o
mpicc -g -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp   -DDEBUG -DPARAMOUTPUT -DTRACK_RES -DFGMRES_RESTEST -DPROFILING -DCOARSE_RES -DSCHWARZ_RES -DTESTVECTOR_ANALYSIS  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/lapackwrap_float.c -o build/lapackwrap_float_devel.o
mpicc -g -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp   -DDEBUG -DPARAMOUTPUT -DTRACK_RES -DFGMRES_RESTEST -DPROFILING -DCOARSE_RES -DSCHWARZ_RES -DTESTVECTOR_ANALYSIS  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/data_float.c -o build/data_float_devel.o
mpicc -g -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp   -DDEBUG -DPARAMOUTPUT -DTRACK_RES -DFGMRES_RESTEST -DPROFILING -DCOARSE_RES -DSCHWARZ_RES -DTESTVECTOR_ANALYSIS  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/local_polyprec_float.c -o build/local_polyprec_float_devel.o
mpicc -g -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp   -DDEBUG -DPARAMOUTPUT -DTRACK_RES -DFGMRES_RESTEST -DPROFILING -DCOARSE_RES -DSCHWARZ_RES -DTESTVECTOR_ANALYSIS  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/operator_float.c -o build/operator_float_devel.o
mpicc -g -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp   -DDEBUG -DPARAMOUTPUT -DTRACK_RES -DFGMRES_RESTEST -DPROFILING -DCOARSE_RES -DSCHWARZ_RES -DTESTVECTOR_ANALYSIS  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/linsolve_double.c -o build/linsolve_double_devel.o
mpicc -g -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp   -DDEBUG -DPARAMOUTPUT -DTRACK_RES -DFGMRES_RESTEST -DPROFILING -DCOARSE_RES -DSCHWARZ_RES -DTESTVECTOR_ANALYSIS  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/gathering_double.c -o build/gathering_double_devel.o
mpicc -g -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp   -DDEBUG -DPARAMOUTPUT -DTRACK_RES -DFGMRES_RESTEST -DPROFILING -DCOARSE_RES -DSCHWARZ_RES -DTESTVECTOR_ANALYSIS  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/ghost_double.c -o build/ghost_double_devel.o
mpicc -g -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp   -DDEBUG -DPARAMOUTPUT -DTRACK_RES -DFGMRES_RESTEST -DPROFILING -DCOARSE_RES -DSCHWARZ_RES -DTESTVECTOR_ANALYSIS  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/polyprec_double.c -o build/polyprec_double_devel.o
mpicc -g -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp   -DDEBUG -DPARAMOUTPUT -DTRACK_RES -DFGMRES_RESTEST -DPROFILING -DCOARSE_RES -DSCHWARZ_RES -DTESTVECTOR_ANALYSIS  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/powerit_double.c -o build/powerit_double_devel.o
mpicc -g -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp   -DDEBUG -DPARAMOUTPUT -DTRACK_RES -DFGMRES_RESTEST -DPROFILING -DCOARSE_RES -DSCHWARZ_RES -DTESTVECTOR_ANALYSIS  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/sse_coarse_operator_double.c -o build/sse_coarse_operator_double_devel.o
mpicc -g -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp   -DDEBUG -DPARAMOUTPUT -DTRACK_RES -DFGMRES_RESTEST -DPROFILING -DCOARSE_RES -DSCHWARZ_RES -DTESTVECTOR_ANALYSIS  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/dirac_double.c -o build/dirac_double_devel.o
mpicc -g -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp   -DDEBUG -DPARAMOUTPUT -DTRACK_RES -DFGMRES_RESTEST -DPROFILING -DCOARSE_RES -DSCHWARZ_RES -DTESTVECTOR_ANALYSIS  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/block_jacobi_double.c -o build/block_jacobi_double_devel.o
mpicc -g -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp   -DDEBUG -DPARAMOUTPUT -DTRACK_RES -DFGMRES_RESTEST -DPROFILING -DCOARSE_RES -DSCHWARZ_RES -DTESTVECTOR_ANALYSIS  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/schwarz_double.c -o build/schwarz_double_devel.o
mpicc -g -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp   -DDEBUG -DPARAMOUTPUT -DTRACK_RES -DFGMRES_RESTEST -DPROFILING -DCOARSE_RES -DSCHWARZ_RES -DTESTVECTOR_ANALYSIS  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/setup_double.c -o build/setup_double_devel.o
mpicc -g -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp   -DDEBUG -DPARAMOUTPUT -DTRACK_RES -DFGMRES_RESTEST -DPROFILING -DCOARSE_RES -DSCHWARZ_RES -DTESTVECTOR_ANALYSIS  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/coarse_operator_double.c -o build/coarse_operator_double_devel.o
mpicc -g -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp   -DDEBUG -DPARAMOUTPUT -DTRACK_RES -DFGMRES_RESTEST -DPROFILING -DCOARSE_RES -DSCHWARZ_RES -DTESTVECTOR_ANALYSIS  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/coarse_oddeven_double.c -o build/coarse_oddeven_double_devel.o
mpicc -g -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp   -DDEBUG -DPARAMOUTPUT -DTRACK_RES -DFGMRES_RESTEST -DPROFILING -DCOARSE_RES -DSCHWARZ_RES -DTESTVECTOR_ANALYSIS  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/vcycle_double.c -o build/vcycle_double_devel.o
mpicc -g -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp   -DDEBUG -DPARAMOUTPUT -DTRACK_RES -DFGMRES_RESTEST -DPROFILING -DCOARSE_RES -DSCHWARZ_RES -DTESTVECTOR_ANALYSIS  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/oddeven_double.c -o build/oddeven_double_devel.o
mpicc -g -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp   -DDEBUG -DPARAMOUTPUT -DTRACK_RES -DFGMRES_RESTEST -DPROFILING -DCOARSE_RES -DSCHWARZ_RES -DTESTVECTOR_ANALYSIS  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/init_double.c -o build/init_double_devel.o
mpicc -g -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp   -DDEBUG -DPARAMOUTPUT -DTRACK_RES -DFGMRES_RESTEST -DPROFILING -DCOARSE_RES -DSCHWARZ_RES -DTESTVECTOR_ANALYSIS  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/vectorization_dirac_double.c -o build/vectorization_dirac_double_devel.o
mpicc -g -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp   -DDEBUG -DPARAMOUTPUT -DTRACK_RES -DFGMRES_RESTEST -DPROFILING -DCOARSE_RES -DSCHWARZ_RES -DTESTVECTOR_ANALYSIS  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/hutchinson_double.c -o build/hutchinson_double_devel.o
mpicc -g -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp   -DDEBUG -DPARAMOUTPUT -DTRACK_RES -DFGMRES_RESTEST -DPROFILING -DCOARSE_RES -DSCHWARZ_RES -DTESTVECTOR_ANALYSIS  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/linalg_double.c -o build/linalg_double_devel.o
mpicc -g -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp   -DDEBUG -DPARAMOUTPUT -DTRACK_RES -DFGMRES_RESTEST -DPROFILING -DCOARSE_RES -DSCHWARZ_RES -DTESTVECTOR_ANALYSIS  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/sse_linalg_double.c -o build/sse_linalg_double_devel.o
mpicc -g -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp   -DDEBUG -DPARAMOUTPUT -DTRACK_RES -DFGMRES_RESTEST -DPROFILING -DCOARSE_RES -DSCHWARZ_RES -DTESTVECTOR_ANALYSIS  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/coarsening_double.c -o build/coarsening_double_devel.o
mpicc -g -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp   -DDEBUG -DPARAMOUTPUT -DTRACK_RES -DFGMRES_RESTEST -DPROFILING -DCOARSE_RES -DSCHWARZ_RES -DTESTVECTOR_ANALYSIS  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/interpolation_double.c -o build/interpolation_double_devel.o
mpicc -g -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp   -DDEBUG -DPARAMOUTPUT -DTRACK_RES -DFGMRES_RESTEST -DPROFILING -DCOARSE_RES -DSCHWARZ_RES -DTESTVECTOR_ANALYSIS  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/sse_interpolation_double.c -o build/sse_interpolation_double_devel.o
mpicc -g -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp   -DDEBUG -DPARAMOUTPUT -DTRACK_RES -DFGMRES_RESTEST -DPROFILING -DCOARSE_RES -DSCHWARZ_RES -DTESTVECTOR_ANALYSIS  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/gcrodr_double.c -o build/gcrodr_double_devel.o
mpicc -g -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp   -DDEBUG -DPARAMOUTPUT -DTRACK_RES -DFGMRES_RESTEST -DPROFILING -DCOARSE_RES -DSCHWARZ_RES -DTESTVECTOR_ANALYSIS  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/lapackwrap_double.c -o build/lapackwrap_double_devel.o
mpicc -g -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp   -DDEBUG -DPARAMOUTPUT -DTRACK_RES -DFGMRES_RESTEST -DPROFILING -DCOARSE_RES -DSCHWARZ_RES -DTESTVECTOR_ANALYSIS  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/data_double.c -o build/data_double_devel.o
mpicc -g -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp   -DDEBUG -DPARAMOUTPUT -DTRACK_RES -DFGMRES_RESTEST -DPROFILING -DCOARSE_RES -DSCHWARZ_RES -DTESTVECTOR_ANALYSIS  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/local_polyprec_double.c -o build/local_polyprec_double_devel.o
mpicc -g -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp   -DDEBUG -DPARAMOUTPUT -DTRACK_RES -DFGMRES_RESTEST -DPROFILING -DCOARSE_RES -DSCHWARZ_RES -DTESTVECTOR_ANALYSIS  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/operator_double.c -o build/operator_double_devel.o
cp src/`basename include/DDalphaAMG.h` include/DDalphaAMG.h
mpicc -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp    -DPARAMOUTPUT -DTRACK_RES -DPROFILING  -o bin/DDalphaAMG build/DDalphaAMG_interface.o build/solver_analysis.o build/io.o build/top_level.o build/preconditioner.o build/linalg.o build/main.o build/sse_linalg.o build/data_layout.o build/threading.o build/ghost.o build/lime_io.o build/init.o build/dirac.o build/sse_dirac.o build/var_table.o build/linsolve.o build/dirac_float.o build/block_jacobi_float.o build/schwarz_float.o build/linsolve_float.o build/coarse_operator_float.o build/coarse_oddeven_float.o build/linalg_float.o build/sse_linalg_float.o build/lapackwrap_float.o build/data_float.o build/operator_float.o build/oddeven_float.o build/ghost_float.o build/setup_float.o build/polyprec_float.o build/sse_coarse_operator_float.o build/init_float.o build/powerit_float.o build/gathering_float.o build/hutchinson_float.o build/vcycle_float.o build/vectorization_dirac_float.o build/coarsening_float.o build/interpolation_float.o build/sse_interpolation_float.o build/gcrodr_float.o build/local_polyprec_float.o build/dirac_double.o build/block_jacobi_double.o build/schwarz_double.o build/linsolve_double.o build/coarse_operator_double.o build/coarse_oddeven_double.o build/linalg_double.o build/sse_linalg_double.o build/lapackwrap_double.o build/data_double.o build/operator_double.o build/oddeven_double.o build/ghost_double.o build/setup_double.o build/polyprec_double.o build/sse_coarse_operator_double.o build/init_double.o build/powerit_double.o build/gathering_double.o build/hutchinson_double.o build/vcycle_double.o build/vectorization_dirac_double.o build/coarsening_double.o build/interpolation_double.o build/sse_interpolation_double.o build/gcrodr_double.o build/local_polyprec_double.o    dependencies/lapack-3.9.0/liblapacke.a dependencies/lapack-3.9.0/liblapack.a dependencies/lapack-3.9.0/librefblas.a -lm -lgfortran
ar rc lib/libDDalphaAMG.a build/DDalphaAMG_interface.o build/solver_analysis.o build/io.o build/top_level.o build/preconditioner.o build/linalg.o build/main.o build/sse_linalg.o build/data_layout.o build/threading.o build/ghost.o build/lime_io.o build/init.o build/dirac.o build/sse_dirac.o build/var_table.o build/linsolve.o build/dirac_float.o build/block_jacobi_float.o build/schwarz_float.o build/linsolve_float.o build/coarse_operator_float.o build/coarse_oddeven_float.o build/linalg_float.o build/sse_linalg_float.o build/lapackwrap_float.o build/data_float.o build/operator_float.o build/oddeven_float.o build/ghost_float.o build/setup_float.o build/polyprec_float.o build/sse_coarse_operator_float.o build/init_float.o build/powerit_float.o build/gathering_float.o build/hutchinson_float.o build/vcycle_float.o build/vectorization_dirac_float.o build/coarsening_float.o build/interpolation_float.o build/sse_interpolation_float.o build/gcrodr_float.o build/local_polyprec_float.o build/dirac_double.o build/block_jacobi_double.o build/schwarz_double.o build/linsolve_double.o build/coarse_operator_double.o build/coarse_oddeven_double.o build/linalg_double.o build/sse_linalg_double.o build/lapackwrap_double.o build/data_double.o build/operator_double.o build/oddeven_double.o build/ghost_double.o build/setup_double.o build/polyprec_double.o build/sse_coarse_operator_double.o build/init_double.o build/powerit_double.o build/gathering_double.o build/hutchinson_double.o build/vcycle_double.o build/vectorization_dirac_double.o build/coarsening_double.o build/interpolation_double.o build/sse_interpolation_double.o build/gcrodr_double.o build/local_polyprec_double.o
ar d lib/libDDalphaAMG.a main.o
ranlib lib/libDDalphaAMG.a
mpicc -g -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp   -DDEBUG -DPARAMOUTPUT -DTRACK_RES -DFGMRES_RESTEST -DPROFILING -DCOARSE_RES -DSCHWARZ_RES -DTESTVECTOR_ANALYSIS  -o bin/DDalphaAMG_devel build/DDalphaAMG_interface_devel.o build/solver_analysis_devel.o build/io_devel.o build/top_level_devel.o build/preconditioner_devel.o build/linalg_devel.o build/main_devel.o build/sse_linalg_devel.o build/data_layout_devel.o build/threading_devel.o build/ghost_devel.o build/lime_io_devel.o build/init_devel.o build/dirac_devel.o build/sse_dirac_devel.o build/var_table_devel.o build/linsolve_devel.o build/dirac_float_devel.o build/block_jacobi_float_devel.o build/schwarz_float_devel.o build/linsolve_float_devel.o build/coarse_operator_float_devel.o build/coarse_oddeven_float_devel.o build/linalg_float_devel.o build/sse_linalg_float_devel.o build/lapackwrap_float_devel.o build/data_float_devel.o build/operator_float_devel.o build/oddeven_float_devel.o build/ghost_float_devel.o build/setup_float_devel.o build/polyprec_float_devel.o build/sse_coarse_operator_float_devel.o build/init_float_devel.o build/powerit_float_devel.o build/gathering_float_devel.o build/hutchinson_float_devel.o build/vcycle_float_devel.o build/vectorization_dirac_float_devel.o build/coarsening_float_devel.o build/interpolation_float_devel.o build/sse_interpolation_float_devel.o build/gcrodr_float_devel.o build/local_polyprec_float_devel.o build/dirac_double_devel.o build/block_jacobi_double_devel.o build/schwarz_double_devel.o build/linsolve_double_devel.o build/coarse_operator_double_devel.o build/coarse_oddeven_double_devel.o build/linalg_double_devel.o build/sse_linalg_double_devel.o build/lapackwrap_double_devel.o build/data_double_devel.o build/operator_double_devel.o build/oddeven_double_devel.o build/ghost_double_devel.o build/setup_double_devel.o build/polyprec_double_devel.o build/sse_coarse_operator_double_devel.o build/init_double_devel.o build/powerit_double_devel.o build/gathering_double_devel.o build/hutchinson_double_devel.o build/vcycle_double_devel.o build/vectorization_dirac_double_devel.o build/coarsening_double_devel.o build/interpolation_double_devel.o build/sse_interpolation_double_devel.o build/gcrodr_double_devel.o build/local_polyprec_double_devel.o    dependencies/lapack-3.9.0/liblapacke.a dependencies/lapack-3.9.0/liblapack.a dependencies/lapack-3.9.0/librefblas.a -lm -lgfortran
ar rc lib/libDDalphaAMG_devel.a build/DDalphaAMG_interface_devel.o build/solver_analysis_devel.o build/io_devel.o build/top_level_devel.o build/preconditioner_devel.o build/linalg_devel.o build/main_devel.o build/sse_linalg_devel.o build/data_layout_devel.o build/threading_devel.o build/ghost_devel.o build/lime_io_devel.o build/init_devel.o build/dirac_devel.o build/sse_dirac_devel.o build/var_table_devel.o build/linsolve_devel.o build/dirac_float_devel.o build/block_jacobi_float_devel.o build/schwarz_float_devel.o build/linsolve_float_devel.o build/coarse_operator_float_devel.o build/coarse_oddeven_float_devel.o build/linalg_float_devel.o build/sse_linalg_float_devel.o build/lapackwrap_float_devel.o build/data_float_devel.o build/operator_float_devel.o build/oddeven_float_devel.o build/ghost_float_devel.o build/setup_float_devel.o build/polyprec_float_devel.o build/sse_coarse_operator_float_devel.o build/init_float_devel.o build/powerit_float_devel.o build/gathering_float_devel.o build/hutchinson_float_devel.o build/vcycle_float_devel.o build/vectorization_dirac_float_devel.o build/coarsening_float_devel.o build/interpolation_float_devel.o build/sse_interpolation_float_devel.o build/gcrodr_float_devel.o build/local_polyprec_float_devel.o build/dirac_double_devel.o build/block_jacobi_double_devel.o build/schwarz_double_devel.o build/linsolve_double_devel.o build/coarse_operator_double_devel.o build/coarse_oddeven_double_devel.o build/linalg_double_devel.o build/sse_linalg_double_devel.o build/lapackwrap_double_devel.o build/data_double_devel.o build/operator_double_devel.o build/oddeven_double_devel.o build/ghost_double_devel.o build/setup_double_devel.o build/polyprec_double_devel.o build/sse_coarse_operator_double_devel.o build/init_double_devel.o build/powerit_double_devel.o build/gathering_double_devel.o build/hutchinson_double_devel.o build/vcycle_double_devel.o build/vectorization_dirac_double_devel.o build/coarsening_double_devel.o build/interpolation_double_devel.o build/sse_interpolation_double_devel.o build/gcrodr_double_devel.o build/local_polyprec_double_devel.o
ar d lib/libDDalphaAMG_devel.a main.o
ranlib lib/libDDalphaAMG_devel.a
mpicc -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp  -o tests/DDalphaAMG_sample tests/DDalphaAMG_sample.c -Iinclude -Idependencies/lapack-3.9.0/LAPACKE/include -Llib -lDDalphaAMG   dependencies/lapack-3.9.0/liblapacke.a dependencies/lapack-3.9.0/liblapack.a dependencies/lapack-3.9.0/librefblas.a -lm -lgfortran
mpicc -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp  -o tests/DDalphaAMG_proj_test tests/DDalphaAMG_proj_test.c -Iinclude -Idependencies/lapack-3.9.0/LAPACKE/include -Llib -lDDalphaAMG   dependencies/lapack-3.9.0/liblapacke.a dependencies/lapack-3.9.0/liblapack.a dependencies/lapack-3.9.0/librefblas.a -lm -lgfortran

+- subspace correction methods for QCD applications -+
|                                                    |
|  Use option >> -? << for help                      |
|                                                    |
+----------------------------------------------------+


Number of Processes: 32
Program is being started...



+----------------------------------------------------------+
| The DDalphaAMG solver library.                           |
| Copyright (C) 2016, Matthias Rottmann, Artur Strebel,    |
|       Simon Heybrock, Simone Bacchio, Bjoern Leder.      |
|                                                          |
| This program comes with ABSOLUTELY NO WARRANTY.          |
+----------------------------------------------------------+

configuration: ../../../configs/qcdsf.632.01000.mg2

Desired average plaquette: 1.6479691428981 in [0,3]
periodic in time boundary conditions
malloc of "op->odd_proj" failed: pointer is not NULL (build/gsrc/operator_double.c:128).
malloc of "op->odd_proj" failed: pointer is not NULL (build/gsrc/operator_double.c:128).
malloc of "op->odd_proj" failed: pointer is not NULL (build/gsrc/operator_double.c:128).

initial coarse grid correction is defined
elapsed time: 61.942257 seconds
Time for initial phase of DDalphaAMG : 61.944362
from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.009942+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.009011+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.009885+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.009864+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.009386+0.000000i
from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.009691+0.000000i
from fgmres : depth: 1, iter: 301, p->H(1,0) = +0.008968+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.009952+0.000000i
from fgmres : depth: 1, iter: 1, p->H(1,0) = +0.009134+0.000000i
from fgmres : depth: 1, iter: 1, p->H(1,0) = +0.009779+0.000000i
from fgmres : depth: 1, iter: 1, p->H(1,0) = +0.007326+0.000000i
from fgmres : depth: 1, iter: 1, p->H(1,0) = +0.007791+0.000000i
from fgmres : depth: 1, iter: 1, p->H(1,0) = +0.006380+0.000000i
from fgmres : depth: 1, iter: 1, p->H(1,0) = +0.006556+0.000000i
from fgmres : depth: 1, iter: 1, p->H(1,0) = +0.009765+0.000000i
from fgmres : depth: 1, iter: 1, p->H(1,0) = +0.009348+0.000000i



performed 8 iterative setup steps
elapsed time: 3980.213908 seconds (2913.279734 seconds on coarse grid)

Time for iterative phase of DDalphaAMG : 3980.213974

BPI : level 0, request 0
BPI : level 1, request 0
Time for block power iteration : 0.000031

Using (split) MGMLMC for computing the trace





























from fgmres : depth: 1, iter: 101, p->H(1,0) = +0.008344+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.008485+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.007655+0.000000i
from fgmres : depth: 1, iter: 101, p->H(1,0) = +0.009122+0.000000i
from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.007708+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.009633+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.009756+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.009411+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.007322+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.009017+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.008628+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.009155+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.007691+0.000000i
from fgmres : depth: 1, iter: 501, p->H(1,0) = +0.009880+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.007571+0.000000i
+----------------------------------------------------------+
|       FGMRES iterations: 68     coarse average: 435.53   |
| exact relative residual: ||r||/||b|| = 5.060604e-09      |
| elapsed wall clock time: 1440.0011 seconds                |
|        coarse grid time: 976.0885 seconds (67.8%)        |
|        coarsest grid time: 0.0000   seconds (00.0%)        |
| coarsest grid matmul time: 0.0000   seconds (00.0%)        |
|  consumed core minutes*: 7.68e+02 (solve only)           |
|    max used mem/MPIproc: 2.45e+00 GB                     |
+----------------------------------------------------------+
*: only correct if #MPIprocs*#threads == #CPUs

from fgmres : depth: 1, iter: 401, p->H(1,0) = +0.009966+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.008830+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.009386+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.007985+0.000000i
from fgmres : depth: 1, iter: 301, p->H(1,0) = +0.009878+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.009849+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.009595+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.008938+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.009550+0.000000i
from fgmres : depth: 1, iter: 351, p->H(1,0) = +0.008553+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.009621+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.008163+0.000000i
from fgmres : depth: 1, iter: 251, p->H(1,0) = +0.009131+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.009652+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.009405+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.009866+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.009849+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.009899+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.008120+0.000000i
from fgmres : depth: 1, iter: 351, p->H(1,0) = +0.009907+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.009964+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.009925+0.000000i
from fgmres : depth: 1, iter: 501, p->H(1,0) = +0.009094+0.000000i
from fgmres : depth: 1, iter: 351, p->H(1,0) = +0.009914+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.008375+0.000000i
from fgmres : depth: 1, iter: 351, p->H(1,0) = +0.009672+0.000000i
from fgmres : depth: 1, iter: 151, p->H(1,0) = +0.007521+0.000000i
from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.009121+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.008281+0.000000i
+----------------------------------------------------------+
|       FGMRES iterations: 104    coarse average: 454.58   |
| exact relative residual: ||r||/||b|| = 8.036191e-09      |
| elapsed wall clock time: 1591.3453 seconds                |
|        coarse grid time: 1498.9560 seconds (94.2%)        |
|        coarsest grid time: 0.0000   seconds (00.0%)        |
| coarsest grid matmul time: 0.0000   seconds (00.0%)        |
|  consumed core minutes*: 8.49e+02 (solve only)           |
|    max used mem/MPIproc: 2.45e+00 GB                     |
+----------------------------------------------------------+
*: only correct if #MPIprocs*#threads == #CPUs

[1, trace: -139641.168286+-1851.304431, variance: 34917948.703641] from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.008308+0.000000i
from fgmres : depth: 1, iter: 351, p->H(1,0) = +0.009684+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.009790+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.008449+0.000000i
from fgmres : depth: 1, iter: 351, p->H(1,0) = +0.008853+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.007018+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.009416+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.009249+0.000000i
from fgmres : depth: 1, iter: 151, p->H(1,0) = +0.008396+0.000000i
from fgmres : depth: 1, iter: 501, p->H(1,0) = +0.007810+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.009240+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.007847+0.000000i
from fgmres : depth: 1, iter: 501, p->H(1,0) = +0.009211+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.009192+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.009217+0.000000i
from fgmres : depth: 1, iter: 401, p->H(1,0) = +0.009827+0.000000i
+----------------------------------------------------------+
|       FGMRES iterations: 79     coarse average: 548.77   |
| exact relative residual: ||r||/||b|| = 7.298809e-09      |
| elapsed wall clock time: 1443.2945 seconds                |
|        coarse grid time: 1373.1043 seconds (95.1%)        |
|        coarsest grid time: 0.0000   seconds (00.0%)        |
| coarsest grid matmul time: 0.0000   seconds (00.0%)        |
|  consumed core minutes*: 7.70e+02 (solve only)           |
|    max used mem/MPIproc: 2.45e+00 GB                     |
+----------------------------------------------------------+
*: only correct if #MPIprocs*#threads == #CPUs

[2, trace: -142941.184997+-948.287413, variance: 46623498.733444] from fgmres : depth: 1, iter: 201, p->H(1,0) = +0.008642+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.008243+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.008104+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.007201+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.009152+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.009753+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.007976+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.009216+0.000000i
from fgmres : depth: 1, iter: 351, p->H(1,0) = +0.009625+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.008902+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.008839+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.009429+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.007906+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.009760+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.007247+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.008556+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.008354+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.007898+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.009776+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.009720+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.009354+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.008334+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.009585+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.009472+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.009958+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.009117+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.008304+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.009691+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.007882+0.000000i
from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.007304+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.009687+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.009591+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.009467+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.009818+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.009001+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.008689+0.000000i
from fgmres : depth: 1, iter: 401, p->H(1,0) = +0.009202+0.000000i
from fgmres : depth: 1, iter: 351, p->H(1,0) = +0.009749+0.000000i
+----------------------------------------------------------+
|       FGMRES iterations: 127    coarse average: 486.57   |
| exact relative residual: ||r||/||b|| = 5.242682e-09      |
| elapsed wall clock time: 2084.8824 seconds                |
|        coarse grid time: 1972.2367 seconds (94.6%)        |
|        coarsest grid time: 0.0000   seconds (00.0%)        |
| coarsest grid matmul time: 0.0000   seconds (00.0%)        |
|  consumed core minutes*: 1.11e+03 (solve only)           |
|    max used mem/MPIproc: 2.45e+00 GB                     |
+----------------------------------------------------------+
*: only correct if #MPIprocs*#threads == #CPUs

[3, trace: -142912.353228+-479.817629, variance: 46910027.738216] from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.009109+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.009660+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.009698+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.009474+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.009359+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.008435+0.000000i
from fgmres : depth: 1, iter: 501, p->H(1,0) = +0.008226+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.008607+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.007904+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.008732+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.009421+0.000000i
from fgmres : depth: 1, iter: 501, p->H(1,0) = +0.006982+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.007723+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.008583+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.009629+0.000000i
from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.007985+0.000000i
from fgmres : depth: 1, iter: 151, p->H(1,0) = +0.009293+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.009295+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.009717+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.009426+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.009441+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.009910+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.009609+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.008342+0.000000i
from fgmres : depth: 1, iter: 501, p->H(1,0) = +0.008002+0.000000i
from fgmres : depth: 1, iter: 251, p->H(1,0) = +0.008885+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.007857+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.009488+0.000000i
from fgmres : depth: 1, iter: 301, p->H(1,0) = +0.008695+0.000000i
+----------------------------------------------------------+
|       FGMRES iterations: 109    coarse average: 484.21   |
| exact relative residual: ||r||/||b|| = 4.596388e-09      |
| elapsed wall clock time: 1775.6996 seconds                |
|        coarse grid time: 1678.6018 seconds (94.5%)        |
|        coarsest grid time: 0.0000   seconds (00.0%)        |
| coarsest grid matmul time: 0.0000   seconds (00.0%)        |
|  consumed core minutes*: 9.47e+02 (solve only)           |
|    max used mem/MPIproc: 2.45e+00 GB                     |
+----------------------------------------------------------+
*: only correct if #MPIprocs*#threads == #CPUs

[4, trace: -135683.756137+-415.008674, variance: 87935001.124775] from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.007357+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.007703+0.000000i
from fgmres : depth: 1, iter: 301, p->H(1,0) = +0.009988+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.008879+0.000000i
from fgmres : depth: 1, iter: 501, p->H(1,0) = +0.009154+0.000000i
from fgmres : depth: 1, iter: 251, p->H(1,0) = +0.007854+0.000000i
from fgmres : depth: 1, iter: 151, p->H(1,0) = +0.008786+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.009110+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.009754+0.000000i
from fgmres : depth: 1, iter: 401, p->H(1,0) = +0.009884+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.009726+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.009352+0.000000i
from fgmres : depth: 1, iter: 401, p->H(1,0) = +0.009510+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.007271+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.009578+0.000000i
from fgmres : depth: 1, iter: 251, p->H(1,0) = +0.009947+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.009720+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.009222+0.000000i
from fgmres : depth: 1, iter: 351, p->H(1,0) = +0.009484+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.008969+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.008329+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.008691+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.007864+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.009661+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.009623+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.009217+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.009606+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.009482+0.000000i
from fgmres : depth: 1, iter: 501, p->H(1,0) = +0.009223+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.007040+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.008367+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.009140+0.000000i
from fgmres : depth: 1, iter: 151, p->H(1,0) = +0.008390+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.007987+0.000000i
from fgmres : depth: 1, iter: 501, p->H(1,0) = +0.008718+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.008840+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.009974+0.000000i
+----------------------------------------------------------+
|       FGMRES iterations: 132    coarse average: 471.56   |
| exact relative residual: ||r||/||b|| = 5.587139e-09      |
| elapsed wall clock time: 2129.3166 seconds                |
|        coarse grid time: 2010.4373 seconds (94.4%)        |
|        coarsest grid time: 0.0000   seconds (00.0%)        |
| coarsest grid matmul time: 0.0000   seconds (00.0%)        |
|  consumed core minutes*: 1.14e+03 (solve only)           |
|    max used mem/MPIproc: 2.45e+00 GB                     |
+----------------------------------------------------------+
*: only correct if #MPIprocs*#threads == #CPUs

[5, trace: -130593.402415+-17.355056, variance: 263639641.837537] from fgmres : depth: 1, iter: 201, p->H(1,0) = +0.007420+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.009936+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.007979+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.008067+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.007546+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.008405+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.007585+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.009926+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.008512+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.009390+0.000000i
from fgmres : depth: 1, iter: 251, p->H(1,0) = +0.009986+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.009146+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.009283+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.007866+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.009838+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.008959+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.009002+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.009728+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.009483+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.007631+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.007350+0.000000i
from fgmres : depth: 1, iter: 501, p->H(1,0) = +0.009666+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.009728+0.000000i
+----------------------------------------------------------+
|       FGMRES iterations: 97     coarse average: 534.08   |
| exact relative residual: ||r||/||b|| = 5.954946e-09      |
| elapsed wall clock time: 1749.5273 seconds                |
|        coarse grid time: 1662.8436 seconds (95.0%)        |
|        coarsest grid time: 0.0000   seconds (00.0%)        |
| coarsest grid matmul time: 0.0000   seconds (00.0%)        |
|  consumed core minutes*: 9.33e+02 (solve only)           |
|    max used mem/MPIproc: 2.45e+00 GB                     |
+----------------------------------------------------------+
*: only correct if #MPIprocs*#threads == #CPUs

[6, trace: -128726.800041+97.681636, variance: 331821428.637903] from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.009751+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.007629+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.008050+0.000000i
from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.009338+0.000000i
from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.009709+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.007428+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.008773+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.009480+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.008986+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.008699+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.009887+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.007603+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.009297+0.000000i
from fgmres : depth: 1, iter: 301, p->H(1,0) = +0.009338+0.000000i
from fgmres : depth: 1, iter: 401, p->H(1,0) = +0.009439+0.000000i
from fgmres : depth: 1, iter: 251, p->H(1,0) = +0.009634+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.009979+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.008077+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.009211+0.000000i
from fgmres : depth: 1, iter: 401, p->H(1,0) = +0.009024+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.009907+0.000000i
from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.009181+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.009612+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.009812+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.009983+0.000000i
from fgmres : depth: 1, iter: 501, p->H(1,0) = +0.009629+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.008429+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.007320+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.009652+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.007995+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.007580+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.009581+0.000000i
+----------------------------------------------------------+
|       FGMRES iterations: 115    coarse average: 443.71   |
| exact relative residual: ||r||/||b|| = 8.823187e-09      |
| elapsed wall clock time: 1741.0273 seconds                |
|        coarse grid time: 1639.5109 seconds (94.2%)        |
|        coarsest grid time: 0.0000   seconds (00.0%)        |
| coarsest grid matmul time: 0.0000   seconds (00.0%)        |
|  consumed core minutes*: 9.29e+02 (solve only)           |
|    max used mem/MPIproc: 2.45e+00 GB                     |
+----------------------------------------------------------+
*: only correct if #MPIprocs*#threads == #CPUs

[7, trace: -131657.519854+83.050317, variance: 310994523.392342] from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.009300+0.000000i
from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.009276+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.008670+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.009820+0.000000i
+----------------------------------------------------------+
|       FGMRES iterations: 37     coarse average: 519.51   |
| exact relative residual: ||r||/||b|| = 5.460880e-09      |
| elapsed wall clock time: 647.8246 seconds                |
|        coarse grid time: 615.1971 seconds (95.0%)        |
|        coarsest grid time: 0.0000   seconds (00.0%)        |
| coarsest grid matmul time: 0.0000   seconds (00.0%)        |
|  consumed core minutes*: 3.46e+02 (solve only)           |
|    max used mem/MPIproc: 2.45e+00 GB                     |
+----------------------------------------------------------+
*: only correct if #MPIprocs*#threads == #CPUs

[8, trace: -129360.908304+-126.541580, variance: 330048224.114617] from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.009611+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.009420+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.009474+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.009284+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.008542+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.009618+0.000000i
from fgmres : depth: 1, iter: 501, p->H(1,0) = +0.009907+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.008870+0.000000i
from fgmres : depth: 1, iter: 251, p->H(1,0) = +0.009639+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.009948+0.000000i
+----------------------------------------------------------+
|       FGMRES iterations: 60     coarse average: 485.58   |
| exact relative residual: ||r||/||b|| = 4.722310e-09      |
| elapsed wall clock time: 976.2030 seconds                |
|        coarse grid time: 923.5755 seconds (94.6%)        |
|        coarsest grid time: 0.0000   seconds (00.0%)        |
| coarsest grid matmul time: 0.0000   seconds (00.0%)        |
|  consumed core minutes*: 5.21e+02 (solve only)           |
|    max used mem/MPIproc: 2.45e+00 GB                     |
+----------------------------------------------------------+
*: only correct if #MPIprocs*#threads == #CPUs

[9, trace: -122126.819721+148.262259, variance: 383603155.778204] from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.006608+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.008577+0.000000i
from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.009626+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.008179+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.008327+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.009275+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.008843+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.009655+0.000000i
from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.009498+0.000000i
+----------------------------------------------------------+
|       FGMRES iterations: 51     coarse average: 500.96   |
| exact relative residual: ||r||/||b|| = 4.915149e-09      |
| elapsed wall clock time: 853.9715 seconds                |
|        coarse grid time: 809.2947 seconds (94.8%)        |
|        coarsest grid time: 0.0000   seconds (00.0%)        |
| coarsest grid matmul time: 0.0000   seconds (00.0%)        |
|  consumed core minutes*: 4.55e+02 (solve only)           |
|    max used mem/MPIproc: 2.45e+00 GB                     |
+----------------------------------------------------------+
*: only correct if #MPIprocs*#threads == #CPUs

[10, trace: -119803.670767+363.027729, variance: 775187179.185055] from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.008885+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.007760+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.008206+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.008656+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.008575+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.009917+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.008453+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.008385+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.008388+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.007943+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.008245+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.007358+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.007915+0.000000i
from fgmres : depth: 1, iter: 501, p->H(1,0) = +0.009582+0.000000i
from fgmres : depth: 1, iter: 501, p->H(1,0) = +0.009947+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.008627+0.000000i
from fgmres : depth: 1, iter: 501, p->H(1,0) = +0.008669+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.009427+0.000000i
+----------------------------------------------------------+
|       FGMRES iterations: 80     coarse average: 501.89   |
| exact relative residual: ||r||/||b|| = 4.081822e-09      |
| elapsed wall clock time: 1344.2281 seconds                |
|        coarse grid time: 1274.3641 seconds (94.8%)        |
|        coarsest grid time: 0.0000   seconds (00.0%)        |
| coarsest grid matmul time: 0.0000   seconds (00.0%)        |
|  consumed core minutes*: 7.17e+02 (solve only)           |
|    max used mem/MPIproc: 2.45e+00 GB                     |
+----------------------------------------------------------+
*: only correct if #MPIprocs*#threads == #CPUs

[11, trace: -120843.279950+300.598867, variance: 755283440.872312] from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.009997+0.000000i
from fgmres : depth: 1, iter: 301, p->H(1,0) = +0.009459+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.009807+0.000000i
from fgmres : depth: 1, iter: 501, p->H(1,0) = +0.009447+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.009623+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.009961+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.008627+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.008293+0.000000i
from fgmres : depth: 1, iter: 351, p->H(1,0) = +0.009581+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.007349+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.008080+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.007496+0.000000i
from fgmres : depth: 1, iter: 501, p->H(1,0) = +0.008436+0.000000i
from fgmres : depth: 1, iter: 501, p->H(1,0) = +0.009802+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.009568+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.008716+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.009058+0.000000i
from fgmres : depth: 1, iter: 101, p->H(1,0) = +0.009413+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.009886+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.009775+0.000000i
from fgmres : depth: 1, iter: 401, p->H(1,0) = +0.009974+0.000000i
from fgmres : depth: 1, iter: 401, p->H(1,0) = +0.009849+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.009461+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.008518+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.009447+0.000000i
from fgmres : depth: 1, iter: 501, p->H(1,0) = +0.009673+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.009155+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.009300+0.000000i
from fgmres : depth: 1, iter: 501, p->H(1,0) = +0.007698+0.000000i
+----------------------------------------------------------+
|       FGMRES iterations: 108    coarse average: 450.81   |
| exact relative residual: ||r||/||b|| = 7.160602e-09      |
| elapsed wall clock time: 1650.7921 seconds                |
|        coarse grid time: 1556.6927 seconds (94.3%)        |
|        coarsest grid time: 0.0000   seconds (00.0%)        |
| coarsest grid matmul time: 0.0000   seconds (00.0%)        |
|  consumed core minutes*: 8.80e+02 (solve only)           |
|    max used mem/MPIproc: 2.45e+00 GB                     |
+----------------------------------------------------------+
*: only correct if #MPIprocs*#threads == #CPUs

[12, trace: -121917.506990+365.988773, variance: 704438630.255037] from fgmres : depth: 1, iter: 151, p->H(1,0) = +0.007113+0.000000i
from fgmres : depth: 1, iter: 201, p->H(1,0) = +0.009219+0.000000i
from fgmres : depth: 1, iter: 351, p->H(1,0) = +0.009390+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.008000+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.008352+0.000000i
+----------------------------------------------------------+
|       FGMRES iterations: 41     coarse average: 607.93   |
| exact relative residual: ||r||/||b|| = 7.872246e-09      |
| elapsed wall clock time: 836.3095 seconds                |
|        coarse grid time: 800.1201 seconds (95.7%)        |
|        coarsest grid time: 0.0000   seconds (00.0%)        |
| coarsest grid matmul time: 0.0000   seconds (00.0%)        |
|  consumed core minutes*: 4.46e+02 (solve only)           |
|    max used mem/MPIproc: 2.45e+00 GB                     |
+----------------------------------------------------------+
*: only correct if #MPIprocs*#threads == #CPUs

[13, trace: -121979.604752+457.238911, variance: 663092956.713170] from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.009826+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.009260+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.009828+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.008857+0.000000i
from fgmres : depth: 1, iter: 501, p->H(1,0) = +0.009621+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.008165+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.008266+0.000000i
from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.008710+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.008128+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.008299+0.000000i
from fgmres : depth: 1, iter: 401, p->H(1,0) = +0.006617+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.009899+0.000000i
+----------------------------------------------------------+
|       FGMRES iterations: 59     coarse average: 574.14   |
| exact relative residual: ||r||/||b|| = 5.677166e-09      |
| elapsed wall clock time: 1128.5760 seconds                |
|        coarse grid time: 1077.0799 seconds (95.4%)        |
|        coarsest grid time: 0.0000   seconds (00.0%)        |
| coarsest grid matmul time: 0.0000   seconds (00.0%)        |
|  consumed core minutes*: 6.02e+02 (solve only)           |
|    max used mem/MPIproc: 2.45e+00 GB                     |
+----------------------------------------------------------+
*: only correct if #MPIprocs*#threads == #CPUs

[14, trace: -122312.971959+446.909349, variance: 615987477.316560] from fgmres : depth: 1, iter: 151, p->H(1,0) = +0.009639+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.007668+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.009775+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.007512+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.008435+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.008131+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.007548+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.009991+0.000000i
from fgmres : depth: 1, iter: 351, p->H(1,0) = +0.006704+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.009660+0.000000i
from fgmres : depth: 1, iter: 501, p->H(1,0) = +0.009751+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.009919+0.000000i
from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.008766+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.008738+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.008949+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.009670+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.009183+0.000000i
+----------------------------------------------------------+
|       FGMRES iterations: 71     coarse average: 509.73   |
| exact relative residual: ||r||/||b|| = 9.006123e-09      |
| elapsed wall clock time: 1206.6463 seconds                |
|        coarse grid time: 1144.8162 seconds (94.9%)        |
|        coarsest grid time: 0.0000   seconds (00.0%)        |
| coarsest grid matmul time: 0.0000   seconds (00.0%)        |
|  consumed core minutes*: 6.44e+02 (solve only)           |
|    max used mem/MPIproc: 2.45e+00 GB                     |
+----------------------------------------------------------+
*: only correct if #MPIprocs*#threads == #CPUs

[15, trace: -122863.366249+665.611487, variance: 576725951.146982] from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.008667+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.009540+0.000000i
from fgmres : depth: 1, iter: 201, p->H(1,0) = +0.008556+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.008233+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.009520+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.009817+0.000000i
from fgmres : depth: 1, iter: 301, p->H(1,0) = +0.008251+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.009799+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.008158+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.008277+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.009960+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.009378+0.000000i
from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.009497+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.009923+0.000000i
from fgmres : depth: 1, iter: 351, p->H(1,0) = +0.009244+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.009390+0.000000i
from fgmres : depth: 1, iter: 351, p->H(1,0) = +0.009125+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.009850+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.009886+0.000000i
+----------------------------------------------------------+
|       FGMRES iterations: 88     coarse average: 475.31   |
| exact relative residual: ||r||/||b|| = 4.979176e-09      |
| elapsed wall clock time: 1388.4966 seconds                |
|        coarse grid time: 1313.0706 seconds (94.6%)        |
|        coarsest grid time: 0.0000   seconds (00.0%)        |
| coarsest grid matmul time: 0.0000   seconds (00.0%)        |
|  consumed core minutes*: 7.41e+02 (solve only)           |
|    max used mem/MPIproc: 2.45e+00 GB                     |
+----------------------------------------------------------+
*: only correct if #MPIprocs*#threads == #CPUs

[16, trace: -125986.053945+1037.472603, variance: 555502664.113058] from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.009694+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.009957+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.009008+0.000000i
from fgmres : depth: 1, iter: 351, p->H(1,0) = +0.009604+0.000000i
from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.008622+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.009994+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.009300+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.009288+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.009473+0.000000i
from fgmres : depth: 1, iter: 501, p->H(1,0) = +0.009507+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.008534+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.009933+0.000000i
from fgmres : depth: 1, iter: 351, p->H(1,0) = +0.008424+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.009951+0.000000i
from fgmres : depth: 1, iter: 151, p->H(1,0) = +0.009213+0.000000i
from fgmres : depth: 1, iter: 401, p->H(1,0) = +0.008541+0.000000i
from fgmres : depth: 1, iter: 101, p->H(1,0) = +0.008437+0.000000i
from fgmres : depth: 1, iter: 501, p->H(1,0) = +0.009779+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.009562+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.009863+0.000000i
from fgmres : depth: 1, iter: 501, p->H(1,0) = +0.009149+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.009264+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.009583+0.000000i
from fgmres : depth: 1, iter: 351, p->H(1,0) = +0.007624+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.008707+0.000000i
from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.007834+0.000000i
from fgmres : depth: 1, iter: 351, p->H(1,0) = +0.008891+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.008146+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.008779+0.000000i
+----------------------------------------------------------+
|       FGMRES iterations: 110    coarse average: 432.52   |
| exact relative residual: ||r||/||b|| = 9.834455e-09      |
| elapsed wall clock time: 1585.4523 seconds                |
|        coarse grid time: 1491.1246 seconds (94.1%)        |
|        coarsest grid time: 0.0000   seconds (00.0%)        |
| coarsest grid matmul time: 0.0000   seconds (00.0%)        |
|  consumed core minutes*: 8.46e+02 (solve only)           |
|    max used mem/MPIproc: 2.45e+00 GB                     |
+----------------------------------------------------------+
*: only correct if #MPIprocs*#threads == #CPUs

[17, trace: -126590.867952+1026.815291, variance: 672115570.347754] from fgmres : depth: 1, iter: 351, p->H(1,0) = +0.007582+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.008658+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.009304+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.008952+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.009997+0.000000i
from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.008205+0.000000i
from fgmres : depth: 1, iter: 501, p->H(1,0) = +0.008582+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.009445+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.009938+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.009223+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.009559+0.000000i
from fgmres : depth: 1, iter: 101, p->H(1,0) = +0.008838+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.008912+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.007510+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.009599+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.008987+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.008730+0.000000i
+----------------------------------------------------------+
|       FGMRES iterations: 78     coarse average: 512.04   |
| exact relative residual: ||r||/||b|| = 8.428697e-09      |
| elapsed wall clock time: 1316.4295 seconds                |
|        coarse grid time: 1249.5915 seconds (94.9%)        |
|        coarsest grid time: 0.0000   seconds (00.0%)        |
| coarsest grid matmul time: 0.0000   seconds (00.0%)        |
|  consumed core minutes*: 7.02e+02 (solve only)           |
|    max used mem/MPIproc: 2.45e+00 GB                     |
+----------------------------------------------------------+
*: only correct if #MPIprocs*#threads == #CPUs

[18, trace: -127159.231799+879.628875, variance: 640995463.252853] from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.008657+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.008284+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.009478+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.008629+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.008052+0.000000i
from fgmres : depth: 1, iter: 401, p->H(1,0) = +0.009155+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.007981+0.000000i
from fgmres : depth: 1, iter: 501, p->H(1,0) = +0.009596+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.007253+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.009116+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.008919+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.007046+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.008234+0.000000i
from fgmres : depth: 1, iter: 401, p->H(1,0) = +0.009645+0.000000i
from fgmres : depth: 1, iter: 351, p->H(1,0) = +0.009577+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.009655+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.008618+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.009777+0.000000i
+----------------------------------------------------------+
|       FGMRES iterations: 79     coarse average: 507.01   |
| exact relative residual: ||r||/||b|| = 7.411204e-09      |
| elapsed wall clock time: 1321.2550 seconds                |
|        coarse grid time: 1253.5674 seconds (94.9%)        |
|        coarsest grid time: 0.0000   seconds (00.0%)        |
| coarsest grid matmul time: 0.0000   seconds (00.0%)        |
|  consumed core minutes*: 7.05e+02 (solve only)           |
|    max used mem/MPIproc: 2.45e+00 GB                     |
+----------------------------------------------------------+
*: only correct if #MPIprocs*#threads == #CPUs

[19, trace: -127711.490472+911.700957, variance: 613442942.532437] from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.008709+0.000000i
from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.008511+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.007924+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.006523+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.008468+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.009905+0.000000i
from fgmres : depth: 1, iter: 401, p->H(1,0) = +0.009684+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.007967+0.000000i
from fgmres : depth: 1, iter: 501, p->H(1,0) = +0.008885+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.007081+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.007930+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.009390+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.008257+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.008698+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.007613+0.000000i
from fgmres : depth: 1, iter: 301, p->H(1,0) = +0.008749+0.000000i
+----------------------------------------------------------+
|       FGMRES iterations: 68     coarse average: 504.40   |
| exact relative residual: ||r||/||b|| = 5.937566e-09      |
| elapsed wall clock time: 1131.5494 seconds                |
|        coarse grid time: 1073.3638 seconds (94.9%)        |
|        coarsest grid time: 0.0000   seconds (00.0%)        |
| coarsest grid matmul time: 0.0000   seconds (00.0%)        |
|  consumed core minutes*: 6.03e+02 (solve only)           |
|    max used mem/MPIproc: 2.45e+00 GB                     |
+----------------------------------------------------------+
*: only correct if #MPIprocs*#threads == #CPUs

[20, trace: -128220.488314+844.821687, variance: 588557976.640053] from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.009565+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.007957+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.007659+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.007764+0.000000i
from fgmres : depth: 1, iter: 501, p->H(1,0) = +0.009758+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.007223+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.009652+0.000000i
from fgmres : depth: 1, iter: 401, p->H(1,0) = +0.008106+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.009923+0.000000i
from fgmres : depth: 1, iter: 201, p->H(1,0) = +0.009237+0.000000i
from fgmres : depth: 1, iter: 301, p->H(1,0) = +0.009493+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.008833+0.000000i
from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.009466+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.007144+0.000000i
+----------------------------------------------------------+
|       FGMRES iterations: 60     coarse average: 493.95   |
| exact relative residual: ||r||/||b|| = 9.027247e-09      |
| elapsed wall clock time: 979.0237 seconds                |
|        coarse grid time: 927.6325 seconds (94.8%)        |
|        coarsest grid time: 0.0000   seconds (00.0%)        |
| coarsest grid matmul time: 0.0000   seconds (00.0%)        |
|  consumed core minutes*: 5.22e+02 (solve only)           |
|    max used mem/MPIproc: 2.45e+00 GB                     |
+----------------------------------------------------------+
*: only correct if #MPIprocs*#threads == #CPUs

[21, trace: -128357.045863+764.665240, variance: 565576510.579123] from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.009285+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.009505+0.000000i
from fgmres : depth: 1, iter: 401, p->H(1,0) = +0.008477+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.008025+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.009352+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.009856+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.009555+0.000000i
from fgmres : depth: 1, iter: 301, p->H(1,0) = +0.008417+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.009597+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.008285+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.008128+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.008398+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.009483+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.008788+0.000000i
+----------------------------------------------------------+
|       FGMRES iterations: 69     coarse average: 550.28   |
| exact relative residual: ||r||/||b|| = 8.749357e-09      |
| elapsed wall clock time: 1247.6599 seconds                |
|        coarse grid time: 1188.6052 seconds (95.3%)        |
|        coarsest grid time: 0.0000   seconds (00.0%)        |
| coarsest grid matmul time: 0.0000   seconds (00.0%)        |
|  consumed core minutes*: 6.65e+02 (solve only)           |
|    max used mem/MPIproc: 2.45e+00 GB                     |
+----------------------------------------------------------+
*: only correct if #MPIprocs*#threads == #CPUs

[22, trace: -128278.095406+808.377446, variance: 540379231.386192] from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.007805+0.000000i
from fgmres : depth: 1, iter: 501, p->H(1,0) = +0.009507+0.000000i
from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.009318+0.000000i
from fgmres : depth: 1, iter: 301, p->H(1,0) = +0.007826+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.007574+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.009120+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.007599+0.000000i
from fgmres : depth: 1, iter: 401, p->H(1,0) = +0.009192+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.007760+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.008721+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.006036+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.008221+0.000000i
from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.008499+0.000000i
from fgmres : depth: 1, iter: 351, p->H(1,0) = +0.009946+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.008963+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.009795+0.000000i
from fgmres : depth: 1, iter: 101, p->H(1,0) = +0.009934+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.008965+0.000000i
+----------------------------------------------------------+
|       FGMRES iterations: 85     coarse average: 523.85   |
| exact relative residual: ||r||/||b|| = 6.340708e-09      |
| elapsed wall clock time: 1473.6725 seconds                |
|        coarse grid time: 1400.5957 seconds (95.0%)        |
|        coarsest grid time: 0.0000   seconds (00.0%)        |
| coarsest grid matmul time: 0.0000   seconds (00.0%)        |
|  consumed core minutes*: 7.86e+02 (solve only)           |
|    max used mem/MPIproc: 2.45e+00 GB                     |
+----------------------------------------------------------+
*: only correct if #MPIprocs*#threads == #CPUs

[23, trace: -128473.759168+829.572532, variance: 517094592.381912] from fgmres : depth: 1, iter: 401, p->H(1,0) = +0.008543+0.000000i
from fgmres : depth: 1, iter: 501, p->H(1,0) = +0.009307+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.009095+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.009828+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.009746+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.008680+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.009279+0.000000i
from fgmres : depth: 1, iter: 401, p->H(1,0) = +0.008736+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.008718+0.000000i
from fgmres : depth: 1, iter: 501, p->H(1,0) = +0.009200+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.009904+0.000000i
from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.008019+0.000000i
from fgmres : depth: 1, iter: 351, p->H(1,0) = +0.008894+0.000000i
from fgmres : depth: 1, iter: 401, p->H(1,0) = +0.009472+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.009094+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.006240+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.009894+0.000000i
from fgmres : depth: 1, iter: 251, p->H(1,0) = +0.008013+0.000000i
+----------------------------------------------------------+
|       FGMRES iterations: 71     coarse average: 492.14   |
| exact relative residual: ||r||/||b|| = 6.683746e-09      |
| elapsed wall clock time: 1163.1553 seconds                |
|        coarse grid time: 1101.4175 seconds (94.7%)        |
|        coarsest grid time: 0.0000   seconds (00.0%)        |
| coarsest grid matmul time: 0.0000   seconds (00.0%)        |
|  consumed core minutes*: 6.20e+02 (solve only)           |
|    max used mem/MPIproc: 2.45e+00 GB                     |
+----------------------------------------------------------+
*: only correct if #MPIprocs*#threads == #CPUs

[24, trace: -127865.400411+876.995169, variance: 496775085.411074] from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.008091+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.008555+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.008256+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.007465+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.009695+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.008965+0.000000i
from fgmres : depth: 1, iter: 351, p->H(1,0) = +0.008368+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.009561+0.000000i
from fgmres : depth: 1, iter: 301, p->H(1,0) = +0.009253+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.006746+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.008450+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.009479+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.009474+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.009235+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.008693+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.008150+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.007418+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.007889+0.000000i
from fgmres : depth: 1, iter: 501, p->H(1,0) = +0.009154+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.009049+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.008545+0.000000i
+----------------------------------------------------------+
|       FGMRES iterations: 96     coarse average: 526.69   |
| exact relative residual: ||r||/||b|| = 4.967653e-09      |
| elapsed wall clock time: 1676.7119 seconds                |
|        coarse grid time: 1593.3858 seconds (95.0%)        |
|        coarsest grid time: 0.0000   seconds (00.0%)        |
| coarsest grid matmul time: 0.0000   seconds (00.0%)        |
|  consumed core minutes*: 8.94e+02 (solve only)           |
|    max used mem/MPIproc: 2.45e+00 GB                     |
+----------------------------------------------------------+
*: only correct if #MPIprocs*#threads == #CPUs

[25, trace: -124347.328213+1061.564682, variance: 497893907.375603] from fgmres : depth: 1, iter: 401, p->H(1,0) = +0.009644+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.008533+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.008986+0.000000i
from fgmres : depth: 1, iter: 501, p->H(1,0) = +0.008110+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.009878+0.000000i
from fgmres : depth: 1, iter: 301, p->H(1,0) = +0.009444+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.008611+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.008195+0.000000i
+----------------------------------------------------------+
|       FGMRES iterations: 48     coarse average: 480.56   |
| exact relative residual: ||r||/||b|| = 4.198792e-09      |
| elapsed wall clock time: 768.1232 seconds                |
|        coarse grid time: 726.5325 seconds (94.6%)        |
|        coarsest grid time: 0.0000   seconds (00.0%)        |
| coarsest grid matmul time: 0.0000   seconds (00.0%)        |
|  consumed core minutes*: 4.10e+02 (solve only)           |
|    max used mem/MPIproc: 2.45e+00 GB                     |
+----------------------------------------------------------+
*: only correct if #MPIprocs*#threads == #CPUs

[26, trace: -124571.557513+1041.626559, variance: 777133709.805619] from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.009475+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.008196+0.000000i
from fgmres : depth: 1, iter: 401, p->H(1,0) = +0.008946+0.000000i
from fgmres : depth: 1, iter: 201, p->H(1,0) = +0.009188+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.009993+0.000000i
from fgmres : depth: 1, iter: 201, p->H(1,0) = +0.009331+0.000000i
from fgmres : depth: 1, iter: 401, p->H(1,0) = +0.008915+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.008128+0.000000i
from fgmres : depth: 1, iter: 201, p->H(1,0) = +0.009645+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.009515+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.009902+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.007528+0.000000i
from fgmres : depth: 1, iter: 351, p->H(1,0) = +0.008895+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.009795+0.000000i
from fgmres : depth: 1, iter: 401, p->H(1,0) = +0.009827+0.000000i
+----------------------------------------------------------+
|       FGMRES iterations: 73     coarse average: 517.47   |
| exact relative residual: ||r||/||b|| = 6.315201e-09      |
| elapsed wall clock time: 1252.4861 seconds                |
|        coarse grid time: 1189.0524 seconds (94.9%)        |
|        coarsest grid time: 0.0000   seconds (00.0%)        |
| coarsest grid matmul time: 0.0000   seconds (00.0%)        |
|  consumed core minutes*: 6.68e+02 (solve only)           |
|    max used mem/MPIproc: 2.45e+00 GB                     |
+----------------------------------------------------------+
*: only correct if #MPIprocs*#threads == #CPUs

[27, trace: -124978.904111+954.366174, variance: 749793310.036079] from fgmres : depth: 1, iter: 251, p->H(1,0) = +0.009729+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.009786+0.000000i
from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.009504+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.009106+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.008568+0.000000i
from fgmres : depth: 1, iter: 251, p->H(1,0) = +0.009742+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.008992+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.007726+0.000000i
from fgmres : depth: 1, iter: 501, p->H(1,0) = +0.008846+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.008233+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.009469+0.000000i
from fgmres : depth: 1, iter: 151, p->H(1,0) = +0.009977+0.000000i
from fgmres : depth: 1, iter: 151, p->H(1,0) = +0.007132+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.009976+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.009269+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.009131+0.000000i
from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.009576+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.008158+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.009911+0.000000i
from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.009836+0.000000i
from fgmres : depth: 1, iter: 151, p->H(1,0) = +0.008589+0.000000i
from fgmres : depth: 1, iter: 501, p->H(1,0) = +0.009566+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.008926+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.009483+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.008882+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.009970+0.000000i
from fgmres : depth: 1, iter: 401, p->H(1,0) = +0.006673+0.000000i
+----------------------------------------------------------+
|       FGMRES iterations: 119    coarse average: 508.79   |
| exact relative residual: ||r||/||b|| = 3.931902e-09      |
| elapsed wall clock time: 2011.9624 seconds                |
|        coarse grid time: 1908.4709 seconds (94.9%)        |
|        coarsest grid time: 0.0000   seconds (00.0%)        |
| coarsest grid matmul time: 0.0000   seconds (00.0%)        |
|  consumed core minutes*: 1.07e+03 (solve only)           |
|    max used mem/MPIproc: 2.45e+00 GB                     |
+----------------------------------------------------------+
*: only correct if #MPIprocs*#threads == #CPUs

[28, trace: -126427.420280+913.469612, variance: 729633233.486177] from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.008372+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.008253+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.008275+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.008482+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.007830+0.000000i
from fgmres : depth: 1, iter: 351, p->H(1,0) = +0.009060+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.007523+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.008450+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.009591+0.000000i
from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.007668+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.008465+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.009753+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.009670+0.000000i
from fgmres : depth: 1, iter: 101, p->H(1,0) = +0.009478+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.008219+0.000000i
from fgmres : depth: 1, iter: 201, p->H(1,0) = +0.009726+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.009267+0.000000i
from fgmres : depth: 1, iter: 201, p->H(1,0) = +0.008177+0.000000i
from fgmres : depth: 1, iter: 251, p->H(1,0) = +0.009625+0.000000i
from fgmres : depth: 1, iter: 501, p->H(1,0) = +0.009052+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.009940+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.009803+0.000000i
from fgmres : depth: 1, iter: 401, p->H(1,0) = +0.009194+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.009607+0.000000i
+----------------------------------------------------------+
|       FGMRES iterations: 111    coarse average: 464.73   |
| exact relative residual: ||r||/||b|| = 8.122850e-09      |
| elapsed wall clock time: 1722.2881 seconds                |
|        coarse grid time: 1625.6215 seconds (94.4%)        |
|        coarsest grid time: 0.0000   seconds (00.0%)        |
| coarsest grid matmul time: 0.0000   seconds (00.0%)        |
|  consumed core minutes*: 9.19e+02 (solve only)           |
|    max used mem/MPIproc: 2.45e+00 GB                     |
+----------------------------------------------------------+
*: only correct if #MPIprocs*#threads == #CPUs

[29, trace: -122779.743789+784.217506, variance: 774564659.785877] from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.009486+0.000000i
from fgmres : depth: 1, iter: 251, p->H(1,0) = +0.008956+0.000000i
from fgmres : depth: 1, iter: 401, p->H(1,0) = +0.009891+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.009769+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.008104+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.009759+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.009178+0.000000i
from fgmres : depth: 1, iter: 501, p->H(1,0) = +0.009956+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.009909+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.009555+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.009877+0.000000i
+----------------------------------------------------------+
|       FGMRES iterations: 60     coarse average: 472.02   |
| exact relative residual: ||r||/||b|| = 3.830335e-09      |
| elapsed wall clock time: 944.1685 seconds                |
|        coarse grid time: 892.0313 seconds (94.5%)        |
|        coarsest grid time: 0.0000   seconds (00.0%)        |
| coarsest grid matmul time: 0.0000   seconds (00.0%)        |
|  consumed core minutes*: 5.04e+02 (solve only)           |
|    max used mem/MPIproc: 2.45e+00 GB                     |
+----------------------------------------------------------+
*: only correct if #MPIprocs*#threads == #CPUs

[30, trace: -117734.931774+965.047554, variance: 1147695737.389101] from fgmres : depth: 1, iter: 351, p->H(1,0) = +0.008405+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.009953+0.000000i
from fgmres : depth: 1, iter: 501, p->H(1,0) = +0.008767+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.007644+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.009279+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.008592+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.008326+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.008020+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.007101+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.007544+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.008932+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.007173+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.008073+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.008260+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.009450+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.009823+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.007627+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.009112+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.009472+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.008263+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.009631+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.008157+0.000000i
from fgmres : depth: 1, iter: 501, p->H(1,0) = +0.009245+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.009460+0.000000i
from fgmres : depth: 1, iter: 501, p->H(1,0) = +0.008763+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.009949+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.009406+0.000000i
from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.009024+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.008731+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.008093+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.009276+0.000000i
from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.008628+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.009890+0.000000i
from fgmres : depth: 1, iter: 201, p->H(1,0) = +0.009249+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.009891+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.007775+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.007762+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.009412+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.009626+0.000000i
+----------------------------------------------------------+
|       FGMRES iterations: 149    coarse average: 515.24   |
| exact relative residual: ||r||/||b|| = 5.746179e-09      |
| elapsed wall clock time: 2543.5361 seconds                |
|        coarse grid time: 2414.4830 seconds (94.9%)        |
|        coarsest grid time: 0.0000   seconds (00.0%)        |
| coarsest grid matmul time: 0.0000   seconds (00.0%)        |
|  consumed core minutes*: 1.36e+03 (solve only)           |
|    max used mem/MPIproc: 2.45e+00 GB                     |
+----------------------------------------------------------+
*: only correct if #MPIprocs*#threads == #CPUs

[31, trace: -116638.537075+955.591026, variance: 1851699497.267381] from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.009834+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.007793+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.007906+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.009612+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.009646+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.008364+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.009423+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.007930+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.009106+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.008498+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.009354+0.000000i
from fgmres : depth: 1, iter: 501, p->H(1,0) = +0.009638+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.009749+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.008918+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.009350+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.009666+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.009364+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.008326+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.009880+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.007327+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.009652+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.008533+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.008746+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.009308+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.009243+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.009357+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.009871+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.009654+0.000000i
from fgmres : depth: 1, iter: 251, p->H(1,0) = +0.008520+0.000000i
+----------------------------------------------------------+
|       FGMRES iterations: 110    coarse average: 522.66   |
| exact relative residual: ||r||/||b|| = 5.379325e-09      |
| elapsed wall clock time: 1898.6076 seconds                |
|        coarse grid time: 1804.3961 seconds (95.0%)        |
|        coarsest grid time: 0.0000   seconds (00.0%)        |
| coarsest grid matmul time: 0.0000   seconds (00.0%)        |
|  consumed core minutes*: 1.01e+03 (solve only)           |
|    max used mem/MPIproc: 2.45e+00 GB                     |
+----------------------------------------------------------+
*: only correct if #MPIprocs*#threads == #CPUs

[32, trace: -117048.227077+950.652253, variance: 1830104448.973902] from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.009471+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.009394+0.000000i
from fgmres : depth: 1, iter: 401, p->H(1,0) = +0.009487+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.009697+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.007654+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.009699+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.006582+0.000000i
from fgmres : depth: 1, iter: 401, p->H(1,0) = +0.009360+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.009874+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.009580+0.000000i
from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.009688+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.009775+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.009204+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.009882+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.009597+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.009258+0.000000i
from fgmres : depth: 1, iter: 301, p->H(1,0) = +0.009229+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.009644+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.009029+0.000000i
from fgmres : depth: 1, iter: 201, p->H(1,0) = +0.009460+0.000000i
from fgmres : depth: 1, iter: 401, p->H(1,0) = +0.009796+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.009998+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.007696+0.000000i
from fgmres : depth: 1, iter: 501, p->H(1,0) = +0.009899+0.000000i
+----------------------------------------------------------+
|       FGMRES iterations: 94     coarse average: 460.13   |
| exact relative residual: ||r||/||b|| = 9.290091e-09      |
| elapsed wall clock time: 1436.8701 seconds                |
|        coarse grid time: 1356.4351 seconds (94.4%)        |
|        coarsest grid time: 0.0000   seconds (00.0%)        |
| coarsest grid matmul time: 0.0000   seconds (00.0%)        |
|  consumed core minutes*: 7.66e+02 (solve only)           |
|    max used mem/MPIproc: 2.45e+00 GB                     |
+----------------------------------------------------------+
*: only correct if #MPIprocs*#threads == #CPUs

[33, trace: -117694.719792+951.710329, variance: 1780273758.295851] from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.009567+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.007676+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.008291+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.009427+0.000000i
from fgmres : depth: 1, iter: 201, p->H(1,0) = +0.009987+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.008136+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.008922+0.000000i
from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.009447+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.008848+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.007838+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.008806+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.008571+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.009665+0.000000i
from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.008230+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.009155+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.009309+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.009205+0.000000i
+----------------------------------------------------------+
|       FGMRES iterations: 84     coarse average: 516.69   |
| exact relative residual: ||r||/||b|| = 6.504899e-09      |
| elapsed wall clock time: 1432.5173 seconds                |
|        coarse grid time: 1360.6798 seconds (95.0%)        |
|        coarsest grid time: 0.0000   seconds (00.0%)        |
| coarsest grid matmul time: 0.0000   seconds (00.0%)        |
|  consumed core minutes*: 7.64e+02 (solve only)           |
|    max used mem/MPIproc: 2.45e+00 GB                     |
+----------------------------------------------------------+
*: only correct if #MPIprocs*#threads == #CPUs

[34, trace: -118278.927703+914.289390, variance: 1741642283.807843] from fgmres : depth: 1, iter: 151, p->H(1,0) = +0.009602+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.009901+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.009351+0.000000i
from fgmres : depth: 1, iter: 501, p->H(1,0) = +0.009418+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.009937+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.009191+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.008937+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.009685+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.008505+0.000000i
from fgmres : depth: 1, iter: 501, p->H(1,0) = +0.009905+0.000000i
from fgmres : depth: 1, iter: 151, p->H(1,0) = +0.009313+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.009383+0.000000i
from fgmres : depth: 1, iter: 351, p->H(1,0) = +0.008361+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.007761+0.000000i
from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.008354+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.009746+0.000000i
from fgmres : depth: 1, iter: 201, p->H(1,0) = +0.009554+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.009304+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.007279+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.008829+0.000000i
from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.008615+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.009528+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.008984+0.000000i
from fgmres : depth: 1, iter: 501, p->H(1,0) = +0.008231+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.009430+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.008743+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.007229+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.009843+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.007134+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.008634+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.009472+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.009579+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.008037+0.000000i
+----------------------------------------------------------+
|       FGMRES iterations: 118    coarse average: 457.22   |
| exact relative residual: ||r||/||b|| = 6.700244e-09      |
| elapsed wall clock time: 1793.1043 seconds                |
|        coarse grid time: 1692.1353 seconds (94.4%)        |
|        coarsest grid time: 0.0000   seconds (00.0%)        |
| coarsest grid matmul time: 0.0000   seconds (00.0%)        |
|  consumed core minutes*: 9.56e+02 (solve only)           |
|    max used mem/MPIproc: 2.45e+00 GB                     |
+----------------------------------------------------------+
*: only correct if #MPIprocs*#threads == #CPUs

[35, trace: -117248.217222+945.864347, variance: 1704263302.099173] from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.009402+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.009789+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.008668+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.009077+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.008115+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.008105+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.007980+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.009630+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.009080+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.008298+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.008629+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.009300+0.000000i
from fgmres : depth: 1, iter: 401, p->H(1,0) = +0.009397+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.009417+0.000000i
from fgmres : depth: 1, iter: 401, p->H(1,0) = +0.009519+0.000000i
+----------------------------------------------------------+
|       FGMRES iterations: 70     coarse average: 571.41   |
| exact relative residual: ||r||/||b|| = 4.826525e-09      |
| elapsed wall clock time: 1313.7685 seconds                |
|        coarse grid time: 1253.8543 seconds (95.4%)        |
|        coarsest grid time: 0.0000   seconds (00.0%)        |
| coarsest grid matmul time: 0.0000   seconds (00.0%)        |
|  consumed core minutes*: 7.01e+02 (solve only)           |
|    max used mem/MPIproc: 2.45e+00 GB                     |
+----------------------------------------------------------+
*: only correct if #MPIprocs*#threads == #CPUs

[36, trace: -117834.811358+916.029373, variance: 1693451451.971122] from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.009048+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.009397+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.009564+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.008506+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.008335+0.000000i
from fgmres : depth: 1, iter: 351, p->H(1,0) = +0.008404+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.008362+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.009267+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.008707+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.009137+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.008730+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.009760+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.009760+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.008287+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.006965+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.008054+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.009586+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.007011+0.000000i
+----------------------------------------------------------+
|       FGMRES iterations: 69     coarse average: 502.42   |
| exact relative residual: ||r||/||b|| = 8.555634e-09      |
| elapsed wall clock time: 1146.0649 seconds                |
|        coarse grid time: 1087.0486 seconds (94.9%)        |
|        coarsest grid time: 0.0000   seconds (00.0%)        |
| coarsest grid matmul time: 0.0000   seconds (00.0%)        |
|  consumed core minutes*: 6.11e+02 (solve only)           |
|    max used mem/MPIproc: 2.45e+00 GB                     |
+----------------------------------------------------------+
*: only correct if #MPIprocs*#threads == #CPUs

[37, trace: -117669.665430+930.811039, variance: 1659793707.554932] from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.006935+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.009272+0.000000i
from fgmres : depth: 1, iter: 351, p->H(1,0) = +0.008405+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.007477+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.009339+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.007369+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.008139+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.009121+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.009686+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.009556+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.009358+0.000000i
from fgmres : depth: 1, iter: 401, p->H(1,0) = +0.009869+0.000000i
from fgmres : depth: 1, iter: 401, p->H(1,0) = +0.009762+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.009434+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.009465+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.009494+0.000000i
from fgmres : depth: 1, iter: 401, p->H(1,0) = +0.008801+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.006908+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.009624+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.007610+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.008503+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.008046+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.007443+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.009243+0.000000i
from fgmres : depth: 1, iter: 351, p->H(1,0) = +0.009723+0.000000i
from fgmres : depth: 1, iter: 351, p->H(1,0) = +0.009975+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.009345+0.000000i
from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.009324+0.000000i
+----------------------------------------------------------+
|       FGMRES iterations: 111    coarse average: 564.23   |
| exact relative residual: ||r||/||b|| = 9.886488e-09      |
| elapsed wall clock time: 2059.7732 seconds                |
|        coarse grid time: 1964.6100 seconds (95.4%)        |
|        coarsest grid time: 0.0000   seconds (00.0%)        |
| coarsest grid matmul time: 0.0000   seconds (00.0%)        |
|  consumed core minutes*: 1.10e+03 (solve only)           |
|    max used mem/MPIproc: 2.45e+00 GB                     |
+----------------------------------------------------------+
*: only correct if #MPIprocs*#threads == #CPUs

[38, trace: -117432.823006+968.413573, variance: 1617162857.824676] from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.007558+0.000000i
from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.008622+0.000000i
from fgmres : depth: 1, iter: 401, p->H(1,0) = +0.008180+0.000000i
from fgmres : depth: 1, iter: 401, p->H(1,0) = +0.008819+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.009851+0.000000i
from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.008454+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.007422+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.009186+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.009062+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.009168+0.000000i
+----------------------------------------------------------+
|       FGMRES iterations: 55     coarse average: 517.15   |
| exact relative residual: ||r||/||b|| = 8.079576e-09      |
| elapsed wall clock time: 939.6848 seconds                |
|        coarse grid time: 892.7229 seconds (95.0%)        |
|        coarsest grid time: 0.0000   seconds (00.0%)        |
| coarsest grid matmul time: 0.0000   seconds (00.0%)        |
|  consumed core minutes*: 5.01e+02 (solve only)           |
|    max used mem/MPIproc: 2.45e+00 GB                     |
+----------------------------------------------------------+
*: only correct if #MPIprocs*#threads == #CPUs

[39, trace: -117842.457544+949.975156, variance: 1577994565.054751] from fgmres : depth: 1, iter: 401, p->H(1,0) = +0.009999+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.007367+0.000000i
from fgmres : depth: 1, iter: 501, p->H(1,0) = +0.009860+0.000000i
from fgmres : depth: 1, iter: 201, p->H(1,0) = +0.009715+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.007988+0.000000i
from fgmres : depth: 1, iter: 301, p->H(1,0) = +0.009826+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.008637+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.009126+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.009913+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.009785+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.008820+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.009719+0.000000i
from fgmres : depth: 1, iter: 501, p->H(1,0) = +0.008850+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.006776+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.009660+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.007350+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.008978+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.008882+0.000000i
from fgmres : depth: 1, iter: 101, p->H(1,0) = +0.008318+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.008885+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.009917+0.000000i
+----------------------------------------------------------+
|       FGMRES iterations: 85     coarse average: 497.36   |
| exact relative residual: ||r||/||b|| = 7.043959e-09      |
| elapsed wall clock time: 1399.4825 seconds                |
|        coarse grid time: 1326.7716 seconds (94.8%)        |
|        coarsest grid time: 0.0000   seconds (00.0%)        |
| coarsest grid matmul time: 0.0000   seconds (00.0%)        |
|  consumed core minutes*: 7.46e+02 (solve only)           |
|    max used mem/MPIproc: 2.45e+00 GB                     |
+----------------------------------------------------------+
*: only correct if #MPIprocs*#threads == #CPUs

[40, trace: -118297.805098+883.779342, variance: 1545149964.058253] from fgmres : depth: 1, iter: 301, p->H(1,0) = +0.009396+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.008340+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.009636+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.007020+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.007071+0.000000i
from fgmres : depth: 1, iter: 351, p->H(1,0) = +0.009441+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.009764+0.000000i
from fgmres : depth: 1, iter: 301, p->H(1,0) = +0.008426+0.000000i
from fgmres : depth: 1, iter: 501, p->H(1,0) = +0.007914+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.007975+0.000000i
from fgmres : depth: 1, iter: 401, p->H(1,0) = +0.009722+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.008638+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.009873+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.009838+0.000000i
from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.007153+0.000000i
from fgmres : depth: 1, iter: 501, p->H(1,0) = +0.009837+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.007824+0.000000i
from fgmres : depth: 1, iter: 401, p->H(1,0) = +0.009948+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.009576+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.008508+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.007477+0.000000i
from fgmres : depth: 1, iter: 351, p->H(1,0) = +0.007995+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.007324+0.000000i
from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.009858+0.000000i
from fgmres : depth: 1, iter: 401, p->H(1,0) = +0.008829+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.009103+0.000000i
from fgmres : depth: 1, iter: 151, p->H(1,0) = +0.009809+0.000000i
from fgmres : depth: 1, iter: 251, p->H(1,0) = +0.009296+0.000000i
from fgmres : depth: 1, iter: 401, p->H(1,0) = +0.009907+0.000000i
+----------------------------------------------------------+
|       FGMRES iterations: 115    coarse average: 484.69   |
| exact relative residual: ||r||/||b|| = 8.348542e-09      |
| elapsed wall clock time: 1847.3936 seconds                |
|        coarse grid time: 1748.9531 seconds (94.7%)        |
|        coarsest grid time: 0.0000   seconds (00.0%)        |
| coarsest grid matmul time: 0.0000   seconds (00.0%)        |
|  consumed core minutes*: 9.85e+02 (solve only)           |
|    max used mem/MPIproc: 2.45e+00 GB                     |
+----------------------------------------------------------+
*: only correct if #MPIprocs*#threads == #CPUs

[41, trace: -118091.384053+723.018889, variance: 1515794205.098660] from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.009909+0.000000i
from fgmres : depth: 1, iter: 201, p->H(1,0) = +0.009840+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.009116+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.008292+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.008815+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.008312+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.007424+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.008168+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.009182+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.009928+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.007838+0.000000i
from fgmres : depth: 1, iter: 501, p->H(1,0) = +0.009603+0.000000i
from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.009352+0.000000i
from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.009407+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.007784+0.000000i
from fgmres : depth: 1, iter: 501, p->H(1,0) = +0.007458+0.000000i
from fgmres : depth: 1, iter: 501, p->H(1,0) = +0.009482+0.000000i
from fgmres : depth: 1, iter: 401, p->H(1,0) = +0.007447+0.000000i
+----------------------------------------------------------+
|       FGMRES iterations: 84     coarse average: 463.46   |
| exact relative residual: ||r||/||b|| = 7.992153e-09      |
| elapsed wall clock time: 1293.2347 seconds                |
|        coarse grid time: 1221.3601 seconds (94.4%)        |
|        coarsest grid time: 0.0000   seconds (00.0%)        |
| coarsest grid matmul time: 0.0000   seconds (00.0%)        |
|  consumed core minutes*: 6.90e+02 (solve only)           |
|    max used mem/MPIproc: 2.45e+00 GB                     |
+----------------------------------------------------------+
*: only correct if #MPIprocs*#threads == #CPUs

[42, trace: -119308.215228+506.420534, variance: 1483971232.544322] from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.009795+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.009835+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.009134+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.008316+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.009495+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.009819+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.009848+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.009567+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.009898+0.000000i
from fgmres : depth: 1, iter: 201, p->H(1,0) = +0.009352+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.008793+0.000000i
from fgmres : depth: 1, iter: 101, p->H(1,0) = +0.009043+0.000000i
from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.009745+0.000000i
from fgmres : depth: 1, iter: 251, p->H(1,0) = +0.008893+0.000000i
from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.009623+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.009567+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.008556+0.000000i
from fgmres : depth: 1, iter: 401, p->H(1,0) = +0.008251+0.000000i
from fgmres : depth: 1, iter: 401, p->H(1,0) = +0.009826+0.000000i
+----------------------------------------------------------+
|       FGMRES iterations: 90     coarse average: 479.44   |
| exact relative residual: ||r||/||b|| = 6.405159e-09      |
| elapsed wall clock time: 1430.8825 seconds                |
|        coarse grid time: 1353.7501 seconds (94.6%)        |
|        coarsest grid time: 0.0000   seconds (00.0%)        |
| coarsest grid matmul time: 0.0000   seconds (00.0%)        |
|  consumed core minutes*: 7.63e+02 (solve only)           |
|    max used mem/MPIproc: 2.45e+00 GB                     |
+----------------------------------------------------------+
*: only correct if #MPIprocs*#threads == #CPUs

[43, trace: -119424.761867+412.366760, variance: 1512149539.492470] from fgmres : depth: 1, iter: 101, p->H(1,0) = +0.009964+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.009034+0.000000i
from fgmres : depth: 1, iter: 351, p->H(1,0) = +0.009115+0.000000i
from fgmres : depth: 1, iter: 351, p->H(1,0) = +0.009489+0.000000i
from fgmres : depth: 1, iter: 151, p->H(1,0) = +0.009356+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.009541+0.000000i
+----------------------------------------------------------+
|       FGMRES iterations: 41     coarse average: 524.90   |
| exact relative residual: ||r||/||b|| = 9.461203e-09      |
| elapsed wall clock time: 710.5299 seconds                |
|        coarse grid time: 675.3813 seconds (95.1%)        |
|        coarsest grid time: 0.0000   seconds (00.0%)        |
| coarsest grid matmul time: 0.0000   seconds (00.0%)        |
|  consumed core minutes*: 3.79e+02 (solve only)           |
|    max used mem/MPIproc: 2.45e+00 GB                     |
+----------------------------------------------------------+
*: only correct if #MPIprocs*#threads == #CPUs

[44, trace: -119019.766121+467.952924, variance: 1478892153.351570] from fgmres : depth: 1, iter: 351, p->H(1,0) = +0.009843+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.007467+0.000000i
from fgmres : depth: 1, iter: 401, p->H(1,0) = +0.008701+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.008970+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.009456+0.000000i
from fgmres : depth: 1, iter: 251, p->H(1,0) = +0.007821+0.000000i
from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.008465+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.009711+0.000000i
from fgmres : depth: 1, iter: 401, p->H(1,0) = +0.009982+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.008881+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.009375+0.000000i
from fgmres : depth: 1, iter: 351, p->H(1,0) = +0.009961+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.008564+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.009608+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.008265+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.009918+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.008424+0.000000i
from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.008375+0.000000i
from fgmres : depth: 1, iter: 251, p->H(1,0) = +0.009607+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.008157+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.009763+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.009384+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.009417+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.009402+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.007589+0.000000i
+----------------------------------------------------------+
|       FGMRES iterations: 97     coarse average: 489.60   |
| exact relative residual: ||r||/||b|| = 5.552982e-09      |
| elapsed wall clock time: 1573.3651 seconds                |
|        coarse grid time: 1490.3616 seconds (94.7%)        |
|        coarsest grid time: 0.0000   seconds (00.0%)        |
| coarsest grid matmul time: 0.0000   seconds (00.0%)        |
|  consumed core minutes*: 8.39e+02 (solve only)           |
|    max used mem/MPIproc: 2.45e+00 GB                     |
+----------------------------------------------------------+
*: only correct if #MPIprocs*#threads == #CPUs

[45, trace: -119338.798657+437.496061, variance: 1453320095.379770] from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.008766+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.008868+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.007790+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.009026+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.008778+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.009601+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.008586+0.000000i
from fgmres : depth: 1, iter: 151, p->H(1,0) = +0.008764+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.008540+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.009166+0.000000i
from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.008735+0.000000i
from fgmres : depth: 1, iter: 401, p->H(1,0) = +0.008710+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.008704+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.009354+0.000000i
from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.009862+0.000000i
from fgmres : depth: 1, iter: 501, p->H(1,0) = +0.009204+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.008904+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.009475+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.008841+0.000000i
+----------------------------------------------------------+
|       FGMRES iterations: 76     coarse average: 543.93   |
| exact relative residual: ||r||/||b|| = 8.885135e-09      |
| elapsed wall clock time: 1362.5678 seconds                |
|        coarse grid time: 1297.5746 seconds (95.2%)        |
|        coarsest grid time: 0.0000   seconds (00.0%)        |
| coarsest grid matmul time: 0.0000   seconds (00.0%)        |
|  consumed core minutes*: 7.27e+02 (solve only)           |
|    max used mem/MPIproc: 2.45e+00 GB                     |
+----------------------------------------------------------+
*: only correct if #MPIprocs*#threads == #CPUs

[46, trace: -119484.665998+405.216166, variance: 1426269945.040007] from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.007578+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.008582+0.000000i
from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.009479+0.000000i
from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.009094+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.008842+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.009736+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.009339+0.000000i
from fgmres : depth: 1, iter: 301, p->H(1,0) = +0.009730+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.008675+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.009378+0.000000i
from fgmres : depth: 1, iter: 401, p->H(1,0) = +0.009984+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.008146+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.008604+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.008966+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.009630+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.009325+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.009639+0.000000i
from fgmres : depth: 1, iter: 501, p->H(1,0) = +0.009421+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.008186+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.009927+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.008556+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.008811+0.000000i
+----------------------------------------------------------+
|       FGMRES iterations: 93     coarse average: 520.65   |
| exact relative residual: ||r||/||b|| = 7.792774e-09      |
| elapsed wall clock time: 1607.7103 seconds                |
|        coarse grid time: 1527.0583 seconds (95.0%)        |
|        coarsest grid time: 0.0000   seconds (00.0%)        |
| coarsest grid matmul time: 0.0000   seconds (00.0%)        |
|  consumed core minutes*: 8.57e+02 (solve only)           |
|    max used mem/MPIproc: 2.45e+00 GB                     |
+----------------------------------------------------------+
*: only correct if #MPIprocs*#threads == #CPUs

[47, trace: -119691.647396+352.059157, variance: 1396974285.113029] from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.009731+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.007669+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.009920+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.009343+0.000000i
from fgmres : depth: 1, iter: 501, p->H(1,0) = +0.009151+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.009941+0.000000i
from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.009670+0.000000i
from fgmres : depth: 1, iter: 351, p->H(1,0) = +0.009156+0.000000i
from fgmres : depth: 1, iter: 501, p->H(1,0) = +0.009905+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.008622+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.009785+0.000000i
from fgmres : depth: 1, iter: 501, p->H(1,0) = +0.008736+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.009962+0.000000i
+----------------------------------------------------------+
|       FGMRES iterations: 60     coarse average: 557.60   |
| exact relative residual: ||r||/||b|| = 9.872701e-09      |
| elapsed wall clock time: 1107.1750 seconds                |
|        coarse grid time: 1054.9849 seconds (95.3%)        |
|        coarsest grid time: 0.0000   seconds (00.0%)        |
| coarsest grid matmul time: 0.0000   seconds (00.0%)        |
|  consumed core minutes*: 5.90e+02 (solve only)           |
|    max used mem/MPIproc: 2.45e+00 GB                     |
+----------------------------------------------------------+
*: only correct if #MPIprocs*#threads == #CPUs

[48, trace: -119861.237838+410.175968, variance: 1370004424.516926] from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.009987+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.008119+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.008043+0.000000i
from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.008616+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.008505+0.000000i
from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.008595+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.009265+0.000000i
from fgmres : depth: 1, iter: 351, p->H(1,0) = +0.009796+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.008350+0.000000i
from fgmres : depth: 1, iter: 201, p->H(1,0) = +0.007314+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.009687+0.000000i
from fgmres : depth: 1, iter: 351, p->H(1,0) = +0.009901+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.009696+0.000000i
from fgmres : depth: 1, iter: 301, p->H(1,0) = +0.008585+0.000000i
from fgmres : depth: 1, iter: 351, p->H(1,0) = +0.009943+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.009923+0.000000i
from fgmres : depth: 1, iter: 351, p->H(1,0) = +0.007669+0.000000i
from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.009944+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.009788+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.009928+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.007719+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.008739+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.008743+0.000000i
from fgmres : depth: 1, iter: 401, p->H(1,0) = +0.007434+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.008282+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.009477+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.008605+0.000000i
from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.009678+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.008642+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.009996+0.000000i
from fgmres : depth: 1, iter: 501, p->H(1,0) = +0.008519+0.000000i
from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.007839+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.008178+0.000000i
from fgmres : depth: 1, iter: 501, p->H(1,0) = +0.009348+0.000000i
+----------------------------------------------------------+
|       FGMRES iterations: 116    coarse average: 416.34   |
| exact relative residual: ||r||/||b|| = 6.553406e-09      |
| elapsed wall clock time: 1624.2211 seconds                |
|        coarse grid time: 1523.1445 seconds (93.8%)        |
|        coarsest grid time: 0.0000   seconds (00.0%)        |
| coarsest grid matmul time: 0.0000   seconds (00.0%)        |
|  consumed core minutes*: 8.66e+02 (solve only)           |
|    max used mem/MPIproc: 2.45e+00 GB                     |
+----------------------------------------------------------+
*: only correct if #MPIprocs*#threads == #CPUs

[49, trace: -120220.931783+384.610459, variance: 1343686348.403501] from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.009950+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.009910+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.009897+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.008200+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.007892+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.008790+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.009252+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.009105+0.000000i
from fgmres : depth: 1, iter: 151, p->H(1,0) = +0.009108+0.000000i
from fgmres : depth: 1, iter: 351, p->H(1,0) = +0.009749+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.008069+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.008941+0.000000i
from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.009905+0.000000i
from fgmres : depth: 1, iter: 401, p->H(1,0) = +0.008943+0.000000i
from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.009526+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.008828+0.000000i
from fgmres : depth: 1, iter: 501, p->H(1,0) = +0.009690+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.008882+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.009894+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.009573+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.007850+0.000000i
from fgmres : depth: 1, iter: 501, p->H(1,0) = +0.009722+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.006628+0.000000i
from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.008622+0.000000i
from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.006749+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.009241+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.008051+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.007842+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.008595+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.008547+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.009865+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.007472+0.000000i
from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.007993+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.009315+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.008851+0.000000i
+----------------------------------------------------------+
|       FGMRES iterations: 138    coarse average: 519.80   |
| exact relative residual: ||r||/||b|| = 9.552326e-09      |
| elapsed wall clock time: 2380.0824 seconds                |
|        coarse grid time: 2260.0509 seconds (95.0%)        |
|        coarsest grid time: 0.0000   seconds (00.0%)        |
| coarsest grid matmul time: 0.0000   seconds (00.0%)        |
|  consumed core minutes*: 1.27e+03 (solve only)           |
|    max used mem/MPIproc: 2.45e+00 GB                     |
+----------------------------------------------------------+
*: only correct if #MPIprocs*#threads == #CPUs

[50, trace: -119838.549849+427.388454, variance: 1323204867.818737] from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.009528+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.009628+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.009527+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.009464+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.008621+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.008161+0.000000i
from fgmres : depth: 1, iter: 351, p->H(1,0) = +0.007720+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.009818+0.000000i
+----------------------------------------------------------+
|       FGMRES iterations: 53     coarse average: 544.74   |
| exact relative residual: ||r||/||b|| = 9.590225e-09      |
| elapsed wall clock time: 956.2359 seconds                |
|        coarse grid time: 909.8997 seconds (95.2%)        |
|        coarsest grid time: 0.0000   seconds (00.0%)        |
| coarsest grid matmul time: 0.0000   seconds (00.0%)        |
|  consumed core minutes*: 5.10e+02 (solve only)           |
|    max used mem/MPIproc: 2.45e+00 GB                     |
+----------------------------------------------------------+
*: only correct if #MPIprocs*#threads == #CPUs

[51, trace: -118550.565311+397.529865, variance: 1306176622.004263] from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.008333+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.009856+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.009082+0.000000i
from fgmres : depth: 1, iter: 351, p->H(1,0) = +0.009796+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.009461+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.009034+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.009383+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.009481+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.006754+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.008369+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.008631+0.000000i
from fgmres : depth: 1, iter: 351, p->H(1,0) = +0.009596+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.009864+0.000000i
from fgmres : depth: 1, iter: 501, p->H(1,0) = +0.009864+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.008878+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.009934+0.000000i
from fgmres : depth: 1, iter: 201, p->H(1,0) = +0.009149+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.008169+0.000000i
from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.008116+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.009614+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.008729+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.009299+0.000000i
from fgmres : depth: 1, iter: 201, p->H(1,0) = +0.009980+0.000000i
from fgmres : depth: 1, iter: 151, p->H(1,0) = +0.008723+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.009118+0.000000i
+----------------------------------------------------------+
|       FGMRES iterations: 96     coarse average: 500.82   |
| exact relative residual: ||r||/||b|| = 9.994215e-09      |
| elapsed wall clock time: 1599.4927 seconds                |
|        coarse grid time: 1516.0971 seconds (94.8%)        |
|        coarsest grid time: 0.0000   seconds (00.0%)        |
| coarsest grid matmul time: 0.0000   seconds (00.0%)        |
|  consumed core minutes*: 8.53e+02 (solve only)           |
|    max used mem/MPIproc: 2.45e+00 GB                     |
+----------------------------------------------------------+
*: only correct if #MPIprocs*#threads == #CPUs

[52, trace: -118354.718012+317.977388, variance: 1364124230.027097] from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.008723+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.009676+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.009783+0.000000i
from fgmres : depth: 1, iter: 401, p->H(1,0) = +0.009081+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.009144+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.009899+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.008684+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.007976+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.009710+0.000000i
from fgmres : depth: 1, iter: 151, p->H(1,0) = +0.008152+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.009363+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.009685+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.007640+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.008861+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.007136+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.009528+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.009002+0.000000i
from fgmres : depth: 1, iter: 251, p->H(1,0) = +0.009041+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.009135+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.009813+0.000000i
from fgmres : depth: 1, iter: 201, p->H(1,0) = +0.008744+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.008780+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.009353+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.009215+0.000000i
+----------------------------------------------------------+
|       FGMRES iterations: 90     coarse average: 431.70   |
| exact relative residual: ||r||/||b|| = 6.582599e-09      |
| elapsed wall clock time: 1303.4573 seconds                |
|        coarse grid time: 1225.1568 seconds (94.0%)        |
|        coarsest grid time: 0.0000   seconds (00.0%)        |
| coarsest grid matmul time: 0.0000   seconds (00.0%)        |
|  consumed core minutes*: 6.95e+02 (solve only)           |
|    max used mem/MPIproc: 2.45e+00 GB                     |
+----------------------------------------------------------+
*: only correct if #MPIprocs*#threads == #CPUs

[53, trace: -117486.474366+81.962530, variance: 1341475352.980140] from fgmres : depth: 1, iter: 251, p->H(1,0) = +0.009284+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.009223+0.000000i
from fgmres : depth: 1, iter: 301, p->H(1,0) = +0.008388+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.009821+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.009442+0.000000i
from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.008394+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.009992+0.000000i
from fgmres : depth: 1, iter: 401, p->H(1,0) = +0.009098+0.000000i
from fgmres : depth: 1, iter: 351, p->H(1,0) = +0.008414+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.006798+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.007461+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.008930+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.008650+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.008251+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.009106+0.000000i
+----------------------------------------------------------+
|       FGMRES iterations: 66     coarse average: 482.05   |
| exact relative residual: ||r||/||b|| = 5.859163e-09      |
| elapsed wall clock time: 1060.6433 seconds                |
|        coarse grid time: 1003.3783 seconds (94.6%)        |
|        coarsest grid time: 0.0000   seconds (00.0%)        |
| coarsest grid matmul time: 0.0000   seconds (00.0%)        |
|  consumed core minutes*: 5.66e+02 (solve only)           |
|    max used mem/MPIproc: 2.45e+00 GB                     |
+----------------------------------------------------------+
*: only correct if #MPIprocs*#threads == #CPUs

[54, trace: -117175.411290+135.517756, variance: 1358844439.008705] from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.009662+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.008202+0.000000i
from fgmres : depth: 1, iter: 401, p->H(1,0) = +0.009457+0.000000i
from fgmres : depth: 1, iter: 301, p->H(1,0) = +0.008592+0.000000i
from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.008136+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.009578+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.009998+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.007516+0.000000i
from fgmres : depth: 1, iter: 151, p->H(1,0) = +0.007135+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.009880+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.008618+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.008492+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.008556+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.009092+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.009464+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.009324+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.008522+0.000000i
from fgmres : depth: 1, iter: 501, p->H(1,0) = +0.009568+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.009905+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.009837+0.000000i
from fgmres : depth: 1, iter: 201, p->H(1,0) = +0.009501+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.009867+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.007227+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.008034+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.009872+0.000000i
+----------------------------------------------------------+
|       FGMRES iterations: 98     coarse average: 456.04   |
| exact relative residual: ||r||/||b|| = 8.111188e-09      |
| elapsed wall clock time: 1494.1612 seconds                |
|        coarse grid time: 1409.0430 seconds (94.3%)        |
|        coarsest grid time: 0.0000   seconds (00.0%)        |
| coarsest grid matmul time: 0.0000   seconds (00.0%)        |
|  consumed core minutes*: 7.97e+02 (solve only)           |
|    max used mem/MPIproc: 2.45e+00 GB                     |
+----------------------------------------------------------+
*: only correct if #MPIprocs*#threads == #CPUs

[55, trace: -117531.605148+145.320079, variance: 1339547263.238566] from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.009636+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.009758+0.000000i
from fgmres : depth: 1, iter: 501, p->H(1,0) = +0.009847+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.007684+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.008484+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.007593+0.000000i
from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.009354+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.008090+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.007446+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.009311+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.009526+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.009534+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.009285+0.000000i
from fgmres : depth: 1, iter: 401, p->H(1,0) = +0.009138+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.009907+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.008524+0.000000i
+----------------------------------------------------------+
|       FGMRES iterations: 84     coarse average: 474.88   |
| exact relative residual: ||r||/||b|| = 7.371001e-09      |
| elapsed wall clock time: 1350.9752 seconds                |
|        coarse grid time: 1277.8886 seconds (94.6%)        |
|        coarsest grid time: 0.0000   seconds (00.0%)        |
| coarsest grid matmul time: 0.0000   seconds (00.0%)        |
|  consumed core minutes*: 7.21e+02 (solve only)           |
|    max used mem/MPIproc: 2.45e+00 GB                     |
+----------------------------------------------------------+
*: only correct if #MPIprocs*#threads == #CPUs

[56, trace: -117564.023144+154.633758, variance: 1322486569.486859] from fgmres : depth: 1, iter: 351, p->H(1,0) = +0.007802+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.009560+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.008042+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.008861+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.009391+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.008311+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.008012+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.007508+0.000000i
from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.009424+0.000000i
from fgmres : depth: 1, iter: 151, p->H(1,0) = +0.009708+0.000000i
from fgmres : depth: 1, iter: 501, p->H(1,0) = +0.009122+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.007980+0.000000i
from fgmres : depth: 1, iter: 351, p->H(1,0) = +0.009942+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.009681+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.007186+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.008003+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.009336+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.009466+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.008621+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.009644+0.000000i
+----------------------------------------------------------+
|       FGMRES iterations: 81     coarse average: 409.77   |
| exact relative residual: ||r||/||b|| = 7.515109e-09      |
| elapsed wall clock time: 1115.7543 seconds                |
|        coarse grid time: 1045.8796 seconds (93.7%)        |
|        coarsest grid time: 0.0000   seconds (00.0%)        |
| coarsest grid matmul time: 0.0000   seconds (00.0%)        |
|  consumed core minutes*: 5.95e+02 (solve only)           |
|    max used mem/MPIproc: 2.45e+00 GB                     |
+----------------------------------------------------------+
*: only correct if #MPIprocs*#threads == #CPUs

[57, trace: -117783.612575+111.063491, variance: 1299397760.478112] from fgmres : depth: 1, iter: 101, p->H(1,0) = +0.009632+0.000000i
from fgmres : depth: 1, iter: 351, p->H(1,0) = +0.009085+0.000000i
from fgmres : depth: 1, iter: 501, p->H(1,0) = +0.008934+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.008063+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.007652+0.000000i
from fgmres : depth: 1, iter: 501, p->H(1,0) = +0.009999+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.009951+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.009958+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.009804+0.000000i
from fgmres : depth: 1, iter: 501, p->H(1,0) = +0.008725+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.006524+0.000000i
from fgmres : depth: 1, iter: 401, p->H(1,0) = +0.008044+0.000000i
from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.008630+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.008465+0.000000i
from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.009552+0.000000i
from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.009266+0.000000i
from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.009851+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.009948+0.000000i
from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.008132+0.000000i
from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.007984+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.009041+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.006830+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.008724+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.007566+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.008880+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.006396+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.007234+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.008266+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.008881+0.000000i
+----------------------------------------------------------+
|       FGMRES iterations: 125    coarse average: 496.08   |
| exact relative residual: ||r||/||b|| = 7.254450e-09      |
| elapsed wall clock time: 2061.7307 seconds                |
|        coarse grid time: 1953.5582 seconds (94.8%)        |
|        coarsest grid time: 0.0000   seconds (00.0%)        |
| coarsest grid matmul time: 0.0000   seconds (00.0%)        |
|  consumed core minutes*: 1.10e+03 (solve only)           |
|    max used mem/MPIproc: 2.45e+00 GB                     |
+----------------------------------------------------------+
*: only correct if #MPIprocs*#threads == #CPUs

[58, trace: -117717.380448+121.516861, variance: 1279806312.539301] from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.007013+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.009124+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.008290+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.009750+0.000000i
from fgmres : depth: 1, iter: 201, p->H(1,0) = +0.009803+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.008568+0.000000i
from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.008942+0.000000i
from fgmres : depth: 1, iter: 401, p->H(1,0) = +0.009772+0.000000i
from fgmres : depth: 1, iter: 251, p->H(1,0) = +0.009623+0.000000i
from fgmres : depth: 1, iter: 251, p->H(1,0) = +0.008619+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.008499+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.008358+0.000000i
from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.009932+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.008944+0.000000i
from fgmres : depth: 1, iter: 401, p->H(1,0) = +0.009138+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.009569+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.008338+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.009488+0.000000i
+----------------------------------------------------------+
|       FGMRES iterations: 78     coarse average: 450.44   |
| exact relative residual: ||r||/||b|| = 3.866687e-09      |
| elapsed wall clock time: 1175.8200 seconds                |
|        coarse grid time: 1108.0675 seconds (94.2%)        |
|        coarsest grid time: 0.0000   seconds (00.0%)        |
| coarsest grid matmul time: 0.0000   seconds (00.0%)        |
|  consumed core minutes*: 6.27e+02 (solve only)           |
|    max used mem/MPIproc: 2.45e+00 GB                     |
+----------------------------------------------------------+
*: only correct if #MPIprocs*#threads == #CPUs

[59, trace: -117958.523631+71.410329, variance: 1258431687.184957] from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.008949+0.000000i
from fgmres : depth: 1, iter: 201, p->H(1,0) = +0.009424+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.008641+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.009807+0.000000i
from fgmres : depth: 1, iter: 201, p->H(1,0) = +0.008333+0.000000i
from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.008542+0.000000i
from fgmres : depth: 1, iter: 151, p->H(1,0) = +0.009887+0.000000i
from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.009254+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.009142+0.000000i
from fgmres : depth: 1, iter: 401, p->H(1,0) = +0.009936+0.000000i
+----------------------------------------------------------+
|       FGMRES iterations: 63     coarse average: 541.06   |
| exact relative residual: ||r||/||b|| = 8.143353e-09      |
| elapsed wall clock time: 1129.1897 seconds                |
|        coarse grid time: 1074.4587 seconds (95.2%)        |
|        coarsest grid time: 0.0000   seconds (00.0%)        |
| coarsest grid matmul time: 0.0000   seconds (00.0%)        |
|  consumed core minutes*: 6.02e+02 (solve only)           |
|    max used mem/MPIproc: 2.45e+00 GB                     |
+----------------------------------------------------------+
*: only correct if #MPIprocs*#threads == #CPUs

[60, trace: -118297.776671+73.288593, variance: 1241092253.465903] from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.008193+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.009415+0.000000i
from fgmres : depth: 1, iter: 301, p->H(1,0) = +0.009465+0.000000i
from fgmres : depth: 1, iter: 301, p->H(1,0) = +0.009657+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.008295+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.008778+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.008387+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.008982+0.000000i
from fgmres : depth: 1, iter: 201, p->H(1,0) = +0.008923+0.000000i
from fgmres : depth: 1, iter: 401, p->H(1,0) = +0.008456+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.008136+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.009493+0.000000i
from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.007722+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.009645+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.007993+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.008073+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.009047+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.008927+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.009230+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.008976+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.009601+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.009754+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.009338+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.009487+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.008037+0.000000i
from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.009821+0.000000i
+----------------------------------------------------------+
|       FGMRES iterations: 93     coarse average: 506.55   |
| exact relative residual: ||r||/||b|| = 8.772535e-09      |
| elapsed wall clock time: 1566.2438 seconds                |
|        coarse grid time: 1485.1317 seconds (94.8%)        |
|        coarsest grid time: 0.0000   seconds (00.0%)        |
| coarsest grid matmul time: 0.0000   seconds (00.0%)        |
|  consumed core minutes*: 8.35e+02 (solve only)           |
|    max used mem/MPIproc: 2.45e+00 GB                     |
+----------------------------------------------------------+
*: only correct if #MPIprocs*#threads == #CPUs

[61, trace: -118838.522246+207.285484, variance: 1227849399.611124] from fgmres : depth: 1, iter: 151, p->H(1,0) = +0.008360+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.009886+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.009647+0.000000i
from fgmres : depth: 1, iter: 501, p->H(1,0) = +0.008768+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.007763+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.009048+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.008275+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.007316+0.000000i
from fgmres : depth: 1, iter: 301, p->H(1,0) = +0.009312+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.009384+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.009969+0.000000i
from fgmres : depth: 1, iter: 401, p->H(1,0) = +0.009245+0.000000i
+----------------------------------------------------------+
|       FGMRES iterations: 60     coarse average: 553.13   |
| exact relative residual: ||r||/||b|| = 6.309495e-09      |
| elapsed wall clock time: 1099.3720 seconds                |
|        coarse grid time: 1047.2292 seconds (95.3%)        |
|        coarsest grid time: 0.0000   seconds (00.0%)        |
| coarsest grid matmul time: 0.0000   seconds (00.0%)        |
|  consumed core minutes*: 5.86e+02 (solve only)           |
|    max used mem/MPIproc: 2.45e+00 GB                     |
+----------------------------------------------------------+
*: only correct if #MPIprocs*#threads == #CPUs

[62, trace: -118430.034663+217.362820, variance: 1226839003.166524] from fgmres : depth: 1, iter: 401, p->H(1,0) = +0.008031+0.000000i
from fgmres : depth: 1, iter: 351, p->H(1,0) = +0.008822+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.008797+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.008557+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.007541+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.008432+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.006628+0.000000i
from fgmres : depth: 1, iter: 151, p->H(1,0) = +0.009262+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.008399+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.009122+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.009502+0.000000i
from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.009641+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.009891+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.009551+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.007538+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.009741+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.008911+0.000000i
from fgmres : depth: 1, iter: 401, p->H(1,0) = +0.009065+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.009712+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.009942+0.000000i
+----------------------------------------------------------+
|       FGMRES iterations: 89     coarse average: 511.61   |
| exact relative residual: ||r||/||b|| = 9.980091e-09      |
| elapsed wall clock time: 1513.4338 seconds                |
|        coarse grid time: 1435.9861 seconds (94.9%)        |
|        coarsest grid time: 0.0000   seconds (00.0%)        |
| coarsest grid matmul time: 0.0000   seconds (00.0%)        |
|  consumed core minutes*: 8.07e+02 (solve only)           |
|    max used mem/MPIproc: 2.45e+00 GB                     |
+----------------------------------------------------------+
*: only correct if #MPIprocs*#threads == #CPUs

[63, trace: -118566.146984+293.758175, variance: 1217577164.375582] from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.009178+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.009930+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.006901+0.000000i
from fgmres : depth: 1, iter: 351, p->H(1,0) = +0.009381+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.009868+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.008623+0.000000i
from fgmres : depth: 1, iter: 151, p->H(1,0) = +0.007985+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.007976+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.007686+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.009056+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.009662+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.007960+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.009816+0.000000i
from fgmres : depth: 1, iter: 401, p->H(1,0) = +0.009102+0.000000i
from fgmres : depth: 1, iter: 401, p->H(1,0) = +0.009124+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.007990+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.007526+0.000000i
from fgmres : depth: 1, iter: 501, p->H(1,0) = +0.008360+0.000000i
from fgmres : depth: 1, iter: 401, p->H(1,0) = +0.009032+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.009143+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.009034+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.008571+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.008481+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.008753+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.008576+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.008195+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.009378+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.008801+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.009010+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.009787+0.000000i
+----------------------------------------------------------+
|       FGMRES iterations: 117    coarse average: 466.37   |
| exact relative residual: ||r||/||b|| = 5.688382e-09      |
| elapsed wall clock time: 1821.8045 seconds                |
|        coarse grid time: 1719.9389 seconds (94.4%)        |
|        coarsest grid time: 0.0000   seconds (00.0%)        |
| coarsest grid matmul time: 0.0000   seconds (00.0%)        |
|  consumed core minutes*: 9.72e+02 (solve only)           |
|    max used mem/MPIproc: 2.45e+00 GB                     |
+----------------------------------------------------------+
*: only correct if #MPIprocs*#threads == #CPUs

[64, trace: -117921.401860+408.729208, variance: 1200492310.937322] from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.009715+0.000000i
from fgmres : depth: 1, iter: 501, p->H(1,0) = +0.009623+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.009852+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.008932+0.000000i
from fgmres : depth: 1, iter: 401, p->H(1,0) = +0.009719+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.009386+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.009193+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.009583+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.008745+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.009037+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.009727+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.008745+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.009689+0.000000i
from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.009216+0.000000i
from fgmres : depth: 1, iter: 501, p->H(1,0) = +0.009845+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.009761+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.008782+0.000000i
from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.009971+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.007419+0.000000i
from fgmres : depth: 1, iter: 501, p->H(1,0) = +0.009552+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.008642+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.008026+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.008983+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.008129+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.007853+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.009680+0.000000i
from fgmres : depth: 1, iter: 301, p->H(1,0) = +0.008161+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.009782+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.007446+0.000000i
from fgmres : depth: 1, iter: 351, p->H(1,0) = +0.009937+0.000000i
from fgmres : depth: 1, iter: 401, p->H(1,0) = +0.009541+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.006610+0.000000i
+----------------------------------------------------------+
|       FGMRES iterations: 121    coarse average: 426.95   |
| exact relative residual: ||r||/||b|| = 5.970459e-09      |
| elapsed wall clock time: 1733.9539 seconds                |
|        coarse grid time: 1628.7429 seconds (93.9%)        |
|        coarsest grid time: 0.0000   seconds (00.0%)        |
| coarsest grid matmul time: 0.0000   seconds (00.0%)        |
|  consumed core minutes*: 9.25e+02 (solve only)           |
|    max used mem/MPIproc: 2.45e+00 GB                     |
+----------------------------------------------------------+
*: only correct if #MPIprocs*#threads == #CPUs

[65, trace: -118588.081387+355.547785, variance: 1209498707.636774] from fgmres : depth: 1, iter: 101, p->H(1,0) = +0.009278+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.009052+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.009484+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.009930+0.000000i
from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.009670+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.009383+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.009189+0.000000i
from fgmres : depth: 1, iter: 351, p->H(1,0) = +0.007614+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.009913+0.000000i
+----------------------------------------------------------+
|       FGMRES iterations: 47     coarse average: 528.55   |
| exact relative residual: ||r||/||b|| = 9.175767e-09      |
| elapsed wall clock time: 824.8684 seconds                |
|        coarse grid time: 784.0900 seconds (95.1%)        |
|        coarsest grid time: 0.0000   seconds (00.0%)        |
| coarsest grid matmul time: 0.0000   seconds (00.0%)        |
|  consumed core minutes*: 4.40e+02 (solve only)           |
|    max used mem/MPIproc: 2.45e+00 GB                     |
+----------------------------------------------------------+
*: only correct if #MPIprocs*#threads == #CPUs

[66, trace: -118280.739100+308.869403, variance: 1219902935.655713] from fgmres : depth: 1, iter: 351, p->H(1,0) = +0.009700+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.008338+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.008446+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.009054+0.000000i
from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.009273+0.000000i
from fgmres : depth: 1, iter: 501, p->H(1,0) = +0.009533+0.000000i
from fgmres : depth: 1, iter: 301, p->H(1,0) = +0.009766+0.000000i
from fgmres : depth: 1, iter: 201, p->H(1,0) = +0.009712+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.008561+0.000000i
from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.007601+0.000000i
from fgmres : depth: 1, iter: 501, p->H(1,0) = +0.009461+0.000000i
from fgmres : depth: 1, iter: 501, p->H(1,0) = +0.009640+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.009017+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.008902+0.000000i
from fgmres : depth: 1, iter: 351, p->H(1,0) = +0.009314+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.009007+0.000000i
from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.009928+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.009387+0.000000i
from fgmres : depth: 1, iter: 251, p->H(1,0) = +0.009838+0.000000i
from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.009974+0.000000i
+----------------------------------------------------------+
|       FGMRES iterations: 79     coarse average: 449.41   |
| exact relative residual: ||r||/||b|| = 4.715947e-09      |
| elapsed wall clock time: 1188.4239 seconds                |
|        coarse grid time: 1119.7331 seconds (94.2%)        |
|        coarsest grid time: 0.0000   seconds (00.0%)        |
| coarsest grid matmul time: 0.0000   seconds (00.0%)        |
|  consumed core minutes*: 6.34e+02 (solve only)           |
|    max used mem/MPIproc: 2.45e+00 GB                     |
+----------------------------------------------------------+
*: only correct if #MPIprocs*#threads == #CPUs

[67, trace: -118131.584597+320.053396, variance: 1208000723.570596] from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.009685+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.009792+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.009632+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.007733+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.009079+0.000000i
from fgmres : depth: 1, iter: 251, p->H(1,0) = +0.009429+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.007922+0.000000i
from fgmres : depth: 1, iter: 401, p->H(1,0) = +0.009489+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.009962+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.007986+0.000000i
+----------------------------------------------------------+
|       FGMRES iterations: 48     coarse average: 590.04   |
| exact relative residual: ||r||/||b|| = 4.677396e-09      |
| elapsed wall clock time: 935.1066 seconds                |
|        coarse grid time: 893.4501 seconds (95.5%)        |
|        coarsest grid time: 0.0000   seconds (00.0%)        |
| coarsest grid matmul time: 0.0000   seconds (00.0%)        |
|  consumed core minutes*: 4.99e+02 (solve only)           |
|    max used mem/MPIproc: 2.45e+00 GB                     |
+----------------------------------------------------------+
*: only correct if #MPIprocs*#threads == #CPUs

[68, trace: -118330.484119+308.489032, variance: 1191752592.551440] from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.007638+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.009686+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.009712+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.007350+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.008181+0.000000i
from fgmres : depth: 1, iter: 501, p->H(1,0) = +0.007924+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.009134+0.000000i
from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.006566+0.000000i
from fgmres : depth: 1, iter: 401, p->H(1,0) = +0.009227+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.008194+0.000000i
from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.008551+0.000000i
+----------------------------------------------------------+
|       FGMRES iterations: 61     coarse average: 555.03   |
| exact relative residual: ||r||/||b|| = 7.832927e-09      |
| elapsed wall clock time: 1121.0955 seconds                |
|        coarse grid time: 1067.9509 seconds (95.3%)        |
|        coarsest grid time: 0.0000   seconds (00.0%)        |
| coarsest grid matmul time: 0.0000   seconds (00.0%)        |
|  consumed core minutes*: 5.98e+02 (solve only)           |
|    max used mem/MPIproc: 2.45e+00 GB                     |
+----------------------------------------------------------+
*: only correct if #MPIprocs*#threads == #CPUs

[69, trace: -118647.710414+355.874593, variance: 1177243817.604325] from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.009691+0.000000i
from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.008735+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.008004+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.006645+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.008295+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.009107+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.009763+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.008738+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.006957+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.008482+0.000000i
from fgmres : depth: 1, iter: 201, p->H(1,0) = +0.009039+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.007635+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.007896+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.009002+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.009851+0.000000i
from fgmres : depth: 1, iter: 501, p->H(1,0) = +0.009606+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.006836+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.008273+0.000000i
from fgmres : depth: 1, iter: 501, p->H(1,0) = +0.008177+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.009525+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.007769+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.007668+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.009914+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.008565+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.009860+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.009938+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.009944+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.009439+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.008645+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.009697+0.000000i
from fgmres : depth: 1, iter: 151, p->H(1,0) = +0.007691+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.009363+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.009241+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.008339+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.007091+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.009538+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.007850+0.000000i
from fgmres : depth: 1, iter: 401, p->H(1,0) = +0.009678+0.000000i
+----------------------------------------------------------+
|       FGMRES iterations: 138    coarse average: 462.33   |
| exact relative residual: ||r||/||b|| = 4.448610e-09      |
| elapsed wall clock time: 2133.0142 seconds                |
|        coarse grid time: 2013.0197 seconds (94.4%)        |
|        coarsest grid time: 0.0000   seconds (00.0%)        |
| coarsest grid matmul time: 0.0000   seconds (00.0%)        |
|  consumed core minutes*: 1.14e+03 (solve only)           |
|    max used mem/MPIproc: 2.45e+00 GB                     |
+----------------------------------------------------------+
*: only correct if #MPIprocs*#threads == #CPUs

[70, trace: -118213.092895+418.934276, variance: 1167616085.510700] from fgmres : depth: 1, iter: 301, p->H(1,0) = +0.008106+0.000000i
from fgmres : depth: 1, iter: 501, p->H(1,0) = +0.009277+0.000000i
from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.009410+0.000000i
from fgmres : depth: 1, iter: 351, p->H(1,0) = +0.008453+0.000000i
from fgmres : depth: 1, iter: 201, p->H(1,0) = +0.008616+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.008984+0.000000i
from fgmres : depth: 1, iter: 251, p->H(1,0) = +0.009225+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.006848+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.009031+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.008321+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.007468+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.009572+0.000000i
from fgmres : depth: 1, iter: 151, p->H(1,0) = +0.008510+0.000000i
from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.009912+0.000000i
from fgmres : depth: 1, iter: 401, p->H(1,0) = +0.007703+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.009044+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.008605+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.008572+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.008728+0.000000i
from fgmres : depth: 1, iter: 501, p->H(1,0) = +0.008154+0.000000i
+----------------------------------------------------------+
|       FGMRES iterations: 89     coarse average: 490.83   |
| exact relative residual: ||r||/||b|| = 7.838515e-09      |
| elapsed wall clock time: 1453.7748 seconds                |
|        coarse grid time: 1376.3687 seconds (94.7%)        |
|        coarsest grid time: 0.0000   seconds (00.0%)        |
| coarsest grid matmul time: 0.0000   seconds (00.0%)        |
|  consumed core minutes*: 7.75e+02 (solve only)           |
|    max used mem/MPIproc: 2.45e+00 GB                     |
+----------------------------------------------------------+
*: only correct if #MPIprocs*#threads == #CPUs

[71, trace: -118601.626048+455.826173, variance: 1164633778.903469] from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.009731+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.009124+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.009529+0.000000i
from fgmres : depth: 1, iter: 301, p->H(1,0) = +0.009863+0.000000i
from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.007227+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.008899+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.009682+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.009204+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.009843+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.007432+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.008917+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.008774+0.000000i
from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.008562+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.009122+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.009344+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.009953+0.000000i
from fgmres : depth: 1, iter: 301, p->H(1,0) = +0.008886+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.007459+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.009705+0.000000i
from fgmres : depth: 1, iter: 251, p->H(1,0) = +0.009319+0.000000i
from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.009656+0.000000i
+----------------------------------------------------------+
|       FGMRES iterations: 82     coarse average: 486.89   |
| exact relative residual: ||r||/||b|| = 8.305257e-09      |
| elapsed wall clock time: 1330.1867 seconds                |
|        coarse grid time: 1258.8227 seconds (94.6%)        |
|        coarsest grid time: 0.0000   seconds (00.0%)        |
| coarsest grid matmul time: 0.0000   seconds (00.0%)        |
|  consumed core minutes*: 7.09e+02 (solve only)           |
|    max used mem/MPIproc: 2.45e+00 GB                     |
+----------------------------------------------------------+
*: only correct if #MPIprocs*#threads == #CPUs

[72, trace: -118305.831474+437.457547, variance: 1159210588.711324] from fgmres : depth: 1, iter: 101, p->H(1,0) = +0.008631+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.008981+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.009372+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.007593+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.007386+0.000000i
from fgmres : depth: 1, iter: 401, p->H(1,0) = +0.009045+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.008168+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.008492+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.009055+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.008791+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.006790+0.000000i
from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.008701+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.009561+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.008746+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.007986+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.009756+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.009329+0.000000i
from fgmres : depth: 1, iter: 351, p->H(1,0) = +0.009568+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.009470+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.008349+0.000000i
from fgmres : depth: 1, iter: 401, p->H(1,0) = +0.008841+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.008945+0.000000i
from fgmres : depth: 1, iter: 151, p->H(1,0) = +0.009457+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.009306+0.000000i
from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.009978+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.008840+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.008462+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.009880+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.008313+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.009736+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.009312+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.007084+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.009075+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.009061+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.009729+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.008740+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.007958+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.009822+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.009177+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.009256+0.000000i
+----------------------------------------------------------+
|       FGMRES iterations: 139    coarse average: 478.25   |
| exact relative residual: ||r||/||b|| = 6.977022e-09      |
| elapsed wall clock time: 2214.5107 seconds                |
|        coarse grid time: 2093.6975 seconds (94.5%)        |
|        coarsest grid time: 0.0000   seconds (00.0%)        |
| coarsest grid matmul time: 0.0000   seconds (00.0%)        |
|  consumed core minutes*: 1.18e+03 (solve only)           |
|    max used mem/MPIproc: 2.45e+00 GB                     |
+----------------------------------------------------------+
*: only correct if #MPIprocs*#threads == #CPUs

[73, trace: -118104.695717+400.550585, variance: 1149610072.890308] from fgmres : depth: 1, iter: 501, p->H(1,0) = +0.009522+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.009871+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.009218+0.000000i
from fgmres : depth: 1, iter: 351, p->H(1,0) = +0.007797+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.009594+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.009278+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.006961+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.009980+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.008265+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.009589+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.007876+0.000000i
from fgmres : depth: 1, iter: 151, p->H(1,0) = +0.008308+0.000000i
from fgmres : depth: 1, iter: 401, p->H(1,0) = +0.009551+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.009491+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.009552+0.000000i
from fgmres : depth: 1, iter: 401, p->H(1,0) = +0.009903+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.008975+0.000000i
from fgmres : depth: 1, iter: 101, p->H(1,0) = +0.009773+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.009512+0.000000i
from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.007550+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.007570+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.006975+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.007217+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.009794+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.007759+0.000000i
from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.008081+0.000000i
from fgmres : depth: 1, iter: 401, p->H(1,0) = +0.008162+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.009831+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.008538+0.000000i
from fgmres : depth: 1, iter: 301, p->H(1,0) = +0.009881+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.008962+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.008409+0.000000i
from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.009403+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.009420+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.009465+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.007358+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.007082+0.000000i
from fgmres : depth: 1, iter: 501, p->H(1,0) = +0.008453+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.007683+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.008485+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.008410+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.009999+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.009216+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.009105+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.008187+0.000000i
from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.008968+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.007951+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.009958+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.007344+0.000000i
+----------------------------------------------------------+
|       FGMRES iterations: 170    coarse average: 495.32   |
| exact relative residual: ||r||/||b|| = 4.904441e-09      |
| elapsed wall clock time: 2791.1368 seconds                |
|        coarse grid time: 2644.7878 seconds (94.8%)        |
|        coarsest grid time: 0.0000   seconds (00.0%)        |
| coarsest grid matmul time: 0.0000   seconds (00.0%)        |
|  consumed core minutes*: 1.49e+03 (solve only)           |
|    max used mem/MPIproc: 2.45e+00 GB                     |
+----------------------------------------------------------+
*: only correct if #MPIprocs*#threads == #CPUs

[74, trace: -117807.216025+381.247115, variance: 1137175109.121459] from fgmres : depth: 1, iter: 301, p->H(1,0) = +0.008909+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.009117+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.008732+0.000000i
from fgmres : depth: 1, iter: 201, p->H(1,0) = +0.009089+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.009808+0.000000i
from fgmres : depth: 1, iter: 151, p->H(1,0) = +0.007522+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.008531+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.009627+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.009095+0.000000i
from fgmres : depth: 1, iter: 501, p->H(1,0) = +0.007723+0.000000i
+----------------------------------------------------------+
|       FGMRES iterations: 57     coarse average: 616.28   |
| exact relative residual: ||r||/||b|| = 5.119456e-09      |
| elapsed wall clock time: 1152.2319 seconds                |
|        coarse grid time: 1103.3434 seconds (95.8%)        |
|        coarsest grid time: 0.0000   seconds (00.0%)        |
| coarsest grid matmul time: 0.0000   seconds (00.0%)        |
|  consumed core minutes*: 6.15e+02 (solve only)           |
|    max used mem/MPIproc: 2.45e+00 GB                     |
+----------------------------------------------------------+
*: only correct if #MPIprocs*#threads == #CPUs

[75, trace: -117791.441509+398.916929, variance: 1128501796.017841] from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.009692+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.009401+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.009957+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.006883+0.000000i
from fgmres : depth: 1, iter: 301, p->H(1,0) = +0.009514+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.009630+0.000000i
from fgmres : depth: 1, iter: 501, p->H(1,0) = +0.009693+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.009198+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.007542+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.009033+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.008375+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.008732+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.008603+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.009310+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.007586+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.009740+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.009004+0.000000i
from fgmres : depth: 1, iter: 501, p->H(1,0) = +0.009409+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.009125+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.009409+0.000000i
from fgmres : depth: 1, iter: 201, p->H(1,0) = +0.009374+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.009731+0.000000i
from fgmres : depth: 1, iter: 201, p->H(1,0) = +0.008481+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.007636+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.009043+0.000000i
+----------------------------------------------------------+
|       FGMRES iterations: 109    coarse average: 496.78   |
| exact relative residual: ||r||/||b|| = 9.934521e-09      |
| elapsed wall clock time: 1794.2578 seconds                |
|        coarse grid time: 1700.6478 seconds (94.8%)        |
|        coarsest grid time: 0.0000   seconds (00.0%)        |
| coarsest grid matmul time: 0.0000   seconds (00.0%)        |
|  consumed core minutes*: 9.57e+02 (solve only)           |
|    max used mem/MPIproc: 2.45e+00 GB                     |
+----------------------------------------------------------+
*: only correct if #MPIprocs*#threads == #CPUs

[76, trace: -117954.247882+374.788743, variance: 1113721701.910927] from fgmres : depth: 1, iter: 201, p->H(1,0) = +0.010000+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.008386+0.000000i
from fgmres : depth: 1, iter: 501, p->H(1,0) = +0.009994+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.008769+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.009069+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.009347+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.009018+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.008407+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.009219+0.000000i
from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.008989+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.009067+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.009208+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.009895+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.009580+0.000000i
from fgmres : depth: 1, iter: 401, p->H(1,0) = +0.008498+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.009581+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.006803+0.000000i
from fgmres : depth: 1, iter: 351, p->H(1,0) = +0.009008+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.009471+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.008193+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.009934+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.009812+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.007957+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.009656+0.000000i
from fgmres : depth: 1, iter: 301, p->H(1,0) = +0.009967+0.000000i
from fgmres : depth: 1, iter: 351, p->H(1,0) = +0.009213+0.000000i
+----------------------------------------------------------+
|       FGMRES iterations: 100    coarse average: 465.02   |
| exact relative residual: ||r||/||b|| = 4.766359e-09      |
| elapsed wall clock time: 1552.1915 seconds                |
|        coarse grid time: 1465.6700 seconds (94.4%)        |
|        coarsest grid time: 0.0000   seconds (00.0%)        |
| coarsest grid matmul time: 0.0000   seconds (00.0%)        |
|  consumed core minutes*: 8.28e+02 (solve only)           |
|    max used mem/MPIproc: 2.45e+00 GB                     |
+----------------------------------------------------------+
*: only correct if #MPIprocs*#threads == #CPUs

[77, trace: -117959.964339+429.676329, variance: 1101292787.149894] from fgmres : depth: 1, iter: 201, p->H(1,0) = +0.009218+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.008945+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.008241+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.009426+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.009319+0.000000i
from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.009907+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.009680+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.009852+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.009464+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.009496+0.000000i
+----------------------------------------------------------+
|       FGMRES iterations: 45     coarse average: 594.71   |
| exact relative residual: ||r||/||b|| = 8.119561e-09      |
| elapsed wall clock time: 882.7152 seconds                |
|        coarse grid time: 843.7112 seconds (95.6%)        |
|        coarsest grid time: 0.0000   seconds (00.0%)        |
| coarsest grid matmul time: 0.0000   seconds (00.0%)        |
|  consumed core minutes*: 4.71e+02 (solve only)           |
|    max used mem/MPIproc: 2.45e+00 GB                     |
+----------------------------------------------------------+
*: only correct if #MPIprocs*#threads == #CPUs

[78, trace: -117446.185308+431.803210, variance: 1087669106.009968] from fgmres : depth: 1, iter: 351, p->H(1,0) = +0.008658+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.009809+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.008397+0.000000i
from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.009015+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.009523+0.000000i
from fgmres : depth: 1, iter: 501, p->H(1,0) = +0.009246+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.009191+0.000000i
from fgmres : depth: 1, iter: 151, p->H(1,0) = +0.007895+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.009939+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.009250+0.000000i
from fgmres : depth: 1, iter: 251, p->H(1,0) = +0.009737+0.000000i
from fgmres : depth: 1, iter: 501, p->H(1,0) = +0.009402+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.008867+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.008082+0.000000i
+----------------------------------------------------------+
|       FGMRES iterations: 65     coarse average: 436.66   |
| exact relative residual: ||r||/||b|| = 8.265517e-09      |
| elapsed wall clock time: 951.0790 seconds                |
|        coarse grid time: 894.5254 seconds (94.1%)        |
|        coarsest grid time: 0.0000   seconds (00.0%)        |
| coarsest grid matmul time: 0.0000   seconds (00.0%)        |
|  consumed core minutes*: 5.07e+02 (solve only)           |
|    max used mem/MPIproc: 2.45e+00 GB                     |
+----------------------------------------------------------+
*: only correct if #MPIprocs*#threads == #CPUs

[79, trace: -117617.886297+417.339473, variance: 1094260127.568516] from fgmres : depth: 1, iter: 501, p->H(1,0) = +0.009654+0.000000i
from fgmres : depth: 1, iter: 151, p->H(1,0) = +0.009907+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.009336+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.008471+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.007529+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.008533+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.009613+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.006882+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.009877+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.009201+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.009350+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.008076+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.007445+0.000000i
from fgmres : depth: 1, iter: 201, p->H(1,0) = +0.007949+0.000000i
from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.007332+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.009887+0.000000i
from fgmres : depth: 1, iter: 251, p->H(1,0) = +0.009073+0.000000i
from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.009689+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.009581+0.000000i
from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.009206+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.009109+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.009152+0.000000i
from fgmres : depth: 1, iter: 501, p->H(1,0) = +0.008451+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.009348+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.009936+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.007066+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.009415+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.009011+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.009313+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.009813+0.000000i
+----------------------------------------------------------+
|       FGMRES iterations: 115    coarse average: 447.18   |
| exact relative residual: ||r||/||b|| = 5.599493e-09      |
| elapsed wall clock time: 1720.6210 seconds                |
|        coarse grid time: 1620.6362 seconds (94.2%)        |
|        coarsest grid time: 0.0000   seconds (00.0%)        |
| coarsest grid matmul time: 0.0000   seconds (00.0%)        |
|  consumed core minutes*: 9.18e+02 (solve only)           |
|    max used mem/MPIproc: 2.45e+00 GB                     |
+----------------------------------------------------------+
*: only correct if #MPIprocs*#threads == #CPUs

[80, trace: -117968.899086+436.046038, variance: 1083021660.502630] from fgmres : depth: 1, iter: 401, p->H(1,0) = +0.009804+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.007259+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.007430+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.007984+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.008818+0.000000i
from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.008226+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.009210+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.008619+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.009455+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.008018+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.009208+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.008899+0.000000i
from fgmres : depth: 1, iter: 501, p->H(1,0) = +0.008669+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.009540+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.009603+0.000000i
from fgmres : depth: 1, iter: 201, p->H(1,0) = +0.009934+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.008679+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.009572+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.008828+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.008921+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.007834+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.007525+0.000000i
from fgmres : depth: 1, iter: 201, p->H(1,0) = +0.008902+0.000000i
+----------------------------------------------------------+
|       FGMRES iterations: 83     coarse average: 474.95   |
| exact relative residual: ||r||/||b|| = 9.568769e-09      |
| elapsed wall clock time: 1314.5831 seconds                |
|        coarse grid time: 1242.4852 seconds (94.5%)        |
|        coarsest grid time: 0.0000   seconds (00.0%)        |
| coarsest grid matmul time: 0.0000   seconds (00.0%)        |
|  consumed core minutes*: 7.01e+02 (solve only)           |
|    max used mem/MPIproc: 2.45e+00 GB                     |
+----------------------------------------------------------+
*: only correct if #MPIprocs*#threads == #CPUs

[81, trace: -117980.906275+472.485838, variance: 1079415253.369282] from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.007436+0.000000i
from fgmres : depth: 1, iter: 251, p->H(1,0) = +0.009460+0.000000i
from fgmres : depth: 1, iter: 401, p->H(1,0) = +0.009336+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.009979+0.000000i
from fgmres : depth: 1, iter: 401, p->H(1,0) = +0.007971+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.009390+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.007855+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.008129+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.008756+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.009351+0.000000i
from fgmres : depth: 1, iter: 151, p->H(1,0) = +0.009346+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.007512+0.000000i
from fgmres : depth: 1, iter: 501, p->H(1,0) = +0.008908+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.008336+0.000000i
from fgmres : depth: 1, iter: 501, p->H(1,0) = +0.008815+0.000000i
from fgmres : depth: 1, iter: 151, p->H(1,0) = +0.007910+0.000000i
from fgmres : depth: 1, iter: 501, p->H(1,0) = +0.008061+0.000000i
from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.009925+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.009447+0.000000i
from fgmres : depth: 1, iter: 151, p->H(1,0) = +0.008674+0.000000i
from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.007832+0.000000i
from fgmres : depth: 1, iter: 401, p->H(1,0) = +0.009338+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.009862+0.000000i
from fgmres : depth: 1, iter: 501, p->H(1,0) = +0.009270+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.008985+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.009946+0.000000i
+----------------------------------------------------------+
|       FGMRES iterations: 101    coarse average: 482.71   |
| exact relative residual: ||r||/||b|| = 6.752965e-09      |
| elapsed wall clock time: 1624.4431 seconds                |
|        coarse grid time: 1536.2783 seconds (94.6%)        |
|        coarsest grid time: 0.0000   seconds (00.0%)        |
| coarsest grid matmul time: 0.0000   seconds (00.0%)        |
|  consumed core minutes*: 8.66e+02 (solve only)           |
|    max used mem/MPIproc: 2.45e+00 GB                     |
+----------------------------------------------------------+
*: only correct if #MPIprocs*#threads == #CPUs

[82, trace: -118210.957845+463.446038, variance: 1066422438.638788] from fgmres : depth: 1, iter: 201, p->H(1,0) = +0.008473+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.009949+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.008699+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.008058+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.009955+0.000000i
from fgmres : depth: 1, iter: 151, p->H(1,0) = +0.009714+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.008160+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.009065+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.009975+0.000000i
+----------------------------------------------------------+
|       FGMRES iterations: 57     coarse average: 501.11   |
| exact relative residual: ||r||/||b|| = 4.109990e-09      |
| elapsed wall clock time: 949.7852 seconds                |
|        coarse grid time: 900.3916 seconds (94.8%)        |
|        coarsest grid time: 0.0000   seconds (00.0%)        |
| coarsest grid matmul time: 0.0000   seconds (00.0%)        |
|  consumed core minutes*: 5.07e+02 (solve only)           |
|    max used mem/MPIproc: 2.45e+00 GB                     |
+----------------------------------------------------------+
*: only correct if #MPIprocs*#threads == #CPUs

[83, trace: -118617.448140+410.808156, variance: 1058036060.108836] from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.008815+0.000000i
from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.009330+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.008785+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.008134+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.009997+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.008883+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.008233+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.009283+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.009931+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.008358+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.008307+0.000000i
from fgmres : depth: 1, iter: 401, p->H(1,0) = +0.009520+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.009529+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.008628+0.000000i
from fgmres : depth: 1, iter: 151, p->H(1,0) = +0.007978+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.009654+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.009182+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.008097+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.009746+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.008823+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.008858+0.000000i
from fgmres : depth: 1, iter: 401, p->H(1,0) = +0.009002+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.009768+0.000000i
from fgmres : depth: 1, iter: 251, p->H(1,0) = +0.008431+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.009708+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.008445+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.008214+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.007179+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.009127+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.009889+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.008248+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.009694+0.000000i
from fgmres : depth: 1, iter: 351, p->H(1,0) = +0.007875+0.000000i
from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.007201+0.000000i
+----------------------------------------------------------+
|       FGMRES iterations: 119    coarse average: 488.62   |
| exact relative residual: ||r||/||b|| = 4.275104e-09      |
| elapsed wall clock time: 1937.0492 seconds                |
|        coarse grid time: 1833.4827 seconds (94.7%)        |
|        coarsest grid time: 0.0000   seconds (00.0%)        |
| coarsest grid matmul time: 0.0000   seconds (00.0%)        |
|  consumed core minutes*: 1.03e+03 (solve only)           |
|    max used mem/MPIproc: 2.45e+00 GB                     |
+----------------------------------------------------------+
*: only correct if #MPIprocs*#threads == #CPUs

[84, trace: -116767.170714+555.191769, variance: 1062663184.704209] from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.009771+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.009519+0.000000i
from fgmres : depth: 1, iter: 151, p->H(1,0) = +0.009086+0.000000i
from fgmres : depth: 1, iter: 201, p->H(1,0) = +0.009432+0.000000i
from fgmres : depth: 1, iter: 351, p->H(1,0) = +0.007696+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.009951+0.000000i
from fgmres : depth: 1, iter: 201, p->H(1,0) = +0.007981+0.000000i
from fgmres : depth: 1, iter: 251, p->H(1,0) = +0.009876+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.008762+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.008603+0.000000i
from fgmres : depth: 1, iter: 501, p->H(1,0) = +0.009969+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.008547+0.000000i
+----------------------------------------------------------+
|       FGMRES iterations: 61     coarse average: 498.15   |
| exact relative residual: ||r||/||b|| = 5.903233e-09      |
| elapsed wall clock time: 1014.6874 seconds                |
|        coarse grid time: 961.4437 seconds (94.8%)        |
|        coarsest grid time: 0.0000   seconds (00.0%)        |
| coarsest grid matmul time: 0.0000   seconds (00.0%)        |
|  consumed core minutes*: 5.41e+02 (solve only)           |
|    max used mem/MPIproc: 2.45e+00 GB                     |
+----------------------------------------------------------+
*: only correct if #MPIprocs*#threads == #CPUs

[85, trace: -116699.918872+562.416758, variance: 1336089335.872520] from fgmres : depth: 1, iter: 301, p->H(1,0) = +0.009896+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.008484+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.007872+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.009970+0.000000i
from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.009459+0.000000i
from fgmres : depth: 1, iter: 501, p->H(1,0) = +0.008237+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.008183+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.009959+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.007663+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.008796+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.009645+0.000000i
from fgmres : depth: 1, iter: 401, p->H(1,0) = +0.009737+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.009486+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.008637+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.008974+0.000000i
from fgmres : depth: 1, iter: 501, p->H(1,0) = +0.007697+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.008678+0.000000i
from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.008723+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.009033+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.009587+0.000000i
from fgmres : depth: 1, iter: 351, p->H(1,0) = +0.009675+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.008540+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.009614+0.000000i
from fgmres : depth: 1, iter: 501, p->H(1,0) = +0.009797+0.000000i
from fgmres : depth: 1, iter: 151, p->H(1,0) = +0.008908+0.000000i
from fgmres : depth: 1, iter: 101, p->H(1,0) = +0.009002+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.009343+0.000000i
from fgmres : depth: 1, iter: 351, p->H(1,0) = +0.009683+0.000000i
from fgmres : depth: 1, iter: 401, p->H(1,0) = +0.007830+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.009669+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.008297+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.009154+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.009025+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.007837+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.007966+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.008123+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.009506+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.008990+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.009826+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.008791+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.008709+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.007962+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.008485+0.000000i
from fgmres : depth: 1, iter: 401, p->H(1,0) = +0.008859+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.009492+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.009750+0.000000i
+----------------------------------------------------------+
|       FGMRES iterations: 162    coarse average: 468.41   |
| exact relative residual: ||r||/||b|| = 6.476004e-09      |
| elapsed wall clock time: 2560.9990 seconds                |
|        coarse grid time: 2419.5235 seconds (94.5%)        |
|        coarsest grid time: 0.0000   seconds (00.0%)        |
| coarsest grid matmul time: 0.0000   seconds (00.0%)        |
|  consumed core minutes*: 1.37e+03 (solve only)           |
|    max used mem/MPIproc: 2.45e+00 GB                     |
+----------------------------------------------------------+
*: only correct if #MPIprocs*#threads == #CPUs

[86, trace: -117001.536567+558.042713, variance: 1321028759.831126] from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.009419+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.009286+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.007710+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.008885+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.008973+0.000000i
from fgmres : depth: 1, iter: 501, p->H(1,0) = +0.009008+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.009294+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.009711+0.000000i
from fgmres : depth: 1, iter: 501, p->H(1,0) = +0.008632+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.008589+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.008686+0.000000i
from fgmres : depth: 1, iter: 501, p->H(1,0) = +0.009233+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.008628+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.007853+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.007992+0.000000i
from fgmres : depth: 1, iter: 101, p->H(1,0) = +0.007706+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.009900+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.007323+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.009389+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.009499+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.009972+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.009573+0.000000i
+----------------------------------------------------------+
|       FGMRES iterations: 89     coarse average: 507.07   |
| exact relative residual: ||r||/||b|| = 4.701638e-09      |
| elapsed wall clock time: 1518.1138 seconds                |
|        coarse grid time: 1440.2476 seconds (94.9%)        |
|        coarsest grid time: 0.0000   seconds (00.0%)        |
| coarsest grid matmul time: 0.0000   seconds (00.0%)        |
|  consumed core minutes*: 8.10e+02 (solve only)           |
|    max used mem/MPIproc: 2.45e+00 GB                     |
+----------------------------------------------------------+
*: only correct if #MPIprocs*#threads == #CPUs

[87, trace: -117250.800004+542.448144, variance: 1313642293.704241] from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.008570+0.000000i
from fgmres : depth: 1, iter: 301, p->H(1,0) = +0.009155+0.000000i
from fgmres : depth: 1, iter: 201, p->H(1,0) = +0.009835+0.000000i
+----------------------------------------------------------+
|       FGMRES iterations: 38     coarse average: 495.63   |
| exact relative residual: ||r||/||b|| = 5.024297e-09      |
| elapsed wall clock time: 628.5351 seconds                |
|        coarse grid time: 595.5746 seconds (94.8%)        |
|        coarsest grid time: 0.0000   seconds (00.0%)        |
| coarsest grid matmul time: 0.0000   seconds (00.0%)        |
|  consumed core minutes*: 3.35e+02 (solve only)           |
|    max used mem/MPIproc: 2.45e+00 GB                     |
+----------------------------------------------------------+
*: only correct if #MPIprocs*#threads == #CPUs

[88, trace: -116406.917201+509.613076, variance: 1304792754.309560] from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.008608+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.008682+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.008015+0.000000i
from fgmres : depth: 1, iter: 401, p->H(1,0) = +0.009539+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.009426+0.000000i
from fgmres : depth: 1, iter: 401, p->H(1,0) = +0.009475+0.000000i
from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.009692+0.000000i
from fgmres : depth: 1, iter: 501, p->H(1,0) = +0.009289+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.007912+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.009496+0.000000i
from fgmres : depth: 1, iter: 501, p->H(1,0) = +0.009367+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.009862+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.009983+0.000000i
from fgmres : depth: 1, iter: 151, p->H(1,0) = +0.009640+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.008961+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.009499+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.009865+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.009971+0.000000i
from fgmres : depth: 1, iter: 501, p->H(1,0) = +0.008649+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.007910+0.000000i
from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.008369+0.000000i
from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.007732+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.007009+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.008464+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.009641+0.000000i
from fgmres : depth: 1, iter: 401, p->H(1,0) = +0.009484+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.009590+0.000000i
from fgmres : depth: 1, iter: 151, p->H(1,0) = +0.007651+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.008353+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.009653+0.000000i
from fgmres : depth: 1, iter: 351, p->H(1,0) = +0.009780+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.009524+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.008072+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.009904+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.009414+0.000000i
+----------------------------------------------------------+
|       FGMRES iterations: 137    coarse average: 465.32   |
| exact relative residual: ||r||/||b|| = 9.903619e-09      |
| elapsed wall clock time: 2139.3704 seconds                |
|        coarse grid time: 2019.2094 seconds (94.4%)        |
|        coarsest grid time: 0.0000   seconds (00.0%)        |
| coarsest grid matmul time: 0.0000   seconds (00.0%)        |
|  consumed core minutes*: 1.14e+03 (solve only)           |
|    max used mem/MPIproc: 2.45e+00 GB                     |
+----------------------------------------------------------+
*: only correct if #MPIprocs*#threads == #CPUs

[89, trace: -116473.999491+444.740470, variance: 1352198704.062274] from fgmres : depth: 1, iter: 501, p->H(1,0) = +0.008641+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.008057+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.009596+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.009574+0.000000i
from fgmres : depth: 1, iter: 301, p->H(1,0) = +0.009846+0.000000i
from fgmres : depth: 1, iter: 201, p->H(1,0) = +0.009289+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.009837+0.000000i
from fgmres : depth: 1, iter: 351, p->H(1,0) = +0.009712+0.000000i
+----------------------------------------------------------+
|       FGMRES iterations: 51     coarse average: 534.08   |
| exact relative residual: ||r||/||b|| = 6.568999e-09      |
| elapsed wall clock time: 904.3193 seconds                |
|        coarse grid time: 859.6427 seconds (95.1%)        |
|        coarsest grid time: 0.0000   seconds (00.0%)        |
| coarsest grid matmul time: 0.0000   seconds (00.0%)        |
|  consumed core minutes*: 4.82e+02 (solve only)           |
|    max used mem/MPIproc: 2.45e+00 GB                     |
+----------------------------------------------------------+
*: only correct if #MPIprocs*#threads == #CPUs

[90, trace: -116523.350652+443.724948, variance: 1337943154.342518] from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.009876+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.009554+0.000000i
from fgmres : depth: 1, iter: 501, p->H(1,0) = +0.009511+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.008893+0.000000i
from fgmres : depth: 1, iter: 151, p->H(1,0) = +0.009467+0.000000i
from fgmres : depth: 1, iter: 101, p->H(1,0) = +0.009438+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.008651+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.008601+0.000000i
from fgmres : depth: 1, iter: 401, p->H(1,0) = +0.007593+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.009300+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.008316+0.000000i
from fgmres : depth: 1, iter: 501, p->H(1,0) = +0.009387+0.000000i
from fgmres : depth: 1, iter: 401, p->H(1,0) = +0.007652+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.009397+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.008683+0.000000i
from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.008491+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.008063+0.000000i
from fgmres : depth: 1, iter: 401, p->H(1,0) = +0.009767+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.007988+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.006965+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.009439+0.000000i
from fgmres : depth: 1, iter: 401, p->H(1,0) = +0.008901+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.009546+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.009968+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.007380+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.007305+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.009266+0.000000i
+----------------------------------------------------------+
|       FGMRES iterations: 102    coarse average: 447.69   |
| exact relative residual: ||r||/||b|| = 9.957262e-09      |
| elapsed wall clock time: 1532.4302 seconds                |
|        coarse grid time: 1443.4067 seconds (94.2%)        |
|        coarsest grid time: 0.0000   seconds (00.0%)        |
| coarsest grid matmul time: 0.0000   seconds (00.0%)        |
|  consumed core minutes*: 8.17e+02 (solve only)           |
|    max used mem/MPIproc: 2.45e+00 GB                     |
+----------------------------------------------------------+
*: only correct if #MPIprocs*#threads == #CPUs

[91, trace: -116752.722531+436.345925, variance: 1323510029.586761] from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.007434+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.009744+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.008054+0.000000i
from fgmres : depth: 1, iter: 401, p->H(1,0) = +0.009761+0.000000i
from fgmres : depth: 1, iter: 351, p->H(1,0) = +0.007152+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.008218+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.008467+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.009882+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.009163+0.000000i
from fgmres : depth: 1, iter: 351, p->H(1,0) = +0.009879+0.000000i
from fgmres : depth: 1, iter: 501, p->H(1,0) = +0.009660+0.000000i
+----------------------------------------------------------+
|       FGMRES iterations: 52     coarse average: 523.56   |
| exact relative residual: ||r||/||b|| = 9.756481e-09      |
| elapsed wall clock time: 905.2397 seconds                |
|        coarse grid time: 859.8950 seconds (95.0%)        |
|        coarsest grid time: 0.0000   seconds (00.0%)        |
| coarsest grid matmul time: 0.0000   seconds (00.0%)        |
|  consumed core minutes*: 4.83e+02 (solve only)           |
|    max used mem/MPIproc: 2.45e+00 GB                     |
+----------------------------------------------------------+
*: only correct if #MPIprocs*#threads == #CPUs

[92, trace: -116976.215386+422.940860, variance: 1313914684.013913] from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.008928+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.009643+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.008882+0.000000i
from fgmres : depth: 1, iter: 501, p->H(1,0) = +0.008826+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.009332+0.000000i
from fgmres : depth: 1, iter: 401, p->H(1,0) = +0.008606+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.008422+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.008472+0.000000i
from fgmres : depth: 1, iter: 251, p->H(1,0) = +0.009980+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.008157+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.009787+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.009544+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.009851+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.006666+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.008354+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.009285+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.009985+0.000000i
from fgmres : depth: 1, iter: 201, p->H(1,0) = +0.009541+0.000000i
from fgmres : depth: 1, iter: 501, p->H(1,0) = +0.009639+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.009900+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.008652+0.000000i
from fgmres : depth: 1, iter: 401, p->H(1,0) = +0.009720+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.009934+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.009935+0.000000i
+----------------------------------------------------------+
|       FGMRES iterations: 100    coarse average: 519.92   |
| exact relative residual: ||r||/||b|| = 9.869754e-09      |
| elapsed wall clock time: 1727.7506 seconds                |
|        coarse grid time: 1640.5834 seconds (95.0%)        |
|        coarsest grid time: 0.0000   seconds (00.0%)        |
| coarsest grid matmul time: 0.0000   seconds (00.0%)        |
|  consumed core minutes*: 9.21e+02 (solve only)           |
|    max used mem/MPIproc: 2.45e+00 GB                     |
+----------------------------------------------------------+
*: only correct if #MPIprocs*#threads == #CPUs

[93, trace: -117231.663015+440.000290, variance: 1304414369.098841] from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.007992+0.000000i
from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.007233+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.009848+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.007074+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.009561+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.008250+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.008680+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.009752+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.009516+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.009749+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.009171+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.007232+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.008148+0.000000i
from fgmres : depth: 1, iter: 351, p->H(1,0) = +0.009882+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.008734+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.009944+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.009709+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.009056+0.000000i
from fgmres : depth: 1, iter: 351, p->H(1,0) = +0.008245+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.009738+0.000000i
from fgmres : depth: 1, iter: 351, p->H(1,0) = +0.008562+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.008934+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.009076+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.009569+0.000000i
from fgmres : depth: 1, iter: 501, p->H(1,0) = +0.008166+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.008128+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.007083+0.000000i
+----------------------------------------------------------+
|       FGMRES iterations: 110    coarse average: 498.75   |
| exact relative residual: ||r||/||b|| = 9.265621e-09      |
| elapsed wall clock time: 1823.4394 seconds                |
|        coarse grid time: 1727.7426 seconds (94.8%)        |
|        coarsest grid time: 0.0000   seconds (00.0%)        |
| coarsest grid matmul time: 0.0000   seconds (00.0%)        |
|  consumed core minutes*: 9.73e+02 (solve only)           |
|    max used mem/MPIproc: 2.45e+00 GB                     |
+----------------------------------------------------------+
*: only correct if #MPIprocs*#threads == #CPUs

[94, trace: -117424.924710+461.980786, variance: 1296606246.381291] from fgmres : depth: 1, iter: 151, p->H(1,0) = +0.008148+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.009214+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.009962+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.007635+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.008284+0.000000i
from fgmres : depth: 1, iter: 301, p->H(1,0) = +0.008926+0.000000i
from fgmres : depth: 1, iter: 401, p->H(1,0) = +0.008097+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.009987+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.008586+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.009109+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.009446+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.007682+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.009620+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.009803+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.009717+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.008063+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.009944+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.008544+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.008979+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.009292+0.000000i
from fgmres : depth: 1, iter: 501, p->H(1,0) = +0.008567+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.008360+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.009530+0.000000i
+----------------------------------------------------------+
|       FGMRES iterations: 99     coarse average: 493.08   |
| exact relative residual: ||r||/||b|| = 6.068998e-09      |
| elapsed wall clock time: 1624.1087 seconds                |
|        coarse grid time: 1537.7239 seconds (94.7%)        |
|        coarsest grid time: 0.0000   seconds (00.0%)        |
| coarsest grid matmul time: 0.0000   seconds (00.0%)        |
|  consumed core minutes*: 8.66e+02 (solve only)           |
|    max used mem/MPIproc: 2.45e+00 GB                     |
+----------------------------------------------------------+
*: only correct if #MPIprocs*#threads == #CPUs

[95, trace: -115348.613477+566.661943, variance: 1290798674.244819] from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.007879+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.007805+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.009465+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.009124+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.008399+0.000000i
from fgmres : depth: 1, iter: 401, p->H(1,0) = +0.008800+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.009340+0.000000i
from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.009184+0.000000i
from fgmres : depth: 1, iter: 501, p->H(1,0) = +0.008632+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.008744+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.009999+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.009825+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.008849+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.007397+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.008471+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.009292+0.000000i
from fgmres : depth: 1, iter: 501, p->H(1,0) = +0.008994+0.000000i
+----------------------------------------------------------+
|       FGMRES iterations: 68     coarse average: 479.90   |
| exact relative residual: ||r||/||b|| = 8.270933e-09      |
| elapsed wall clock time: 1085.1738 seconds                |
|        coarse grid time: 1026.6223 seconds (94.6%)        |
|        coarsest grid time: 0.0000   seconds (00.0%)        |
| coarsest grid matmul time: 0.0000   seconds (00.0%)        |
|  consumed core minutes*: 5.79e+02 (solve only)           |
|    max used mem/MPIproc: 2.45e+00 GB                     |
+----------------------------------------------------------+
*: only correct if #MPIprocs*#threads == #CPUs

[96, trace: -115584.359880+557.295774, variance: 1683724029.301014] from fgmres : depth: 1, iter: 501, p->H(1,0) = +0.009645+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.009321+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.008997+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.007889+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.006446+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.008232+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.007702+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.009507+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.009070+0.000000i
+----------------------------------------------------------+
|       FGMRES iterations: 51     coarse average: 513.14   |
| exact relative residual: ||r||/||b|| = 5.818514e-09      |
| elapsed wall clock time: 865.8771 seconds                |
|        coarse grid time: 822.0366 seconds (94.9%)        |
|        coarsest grid time: 0.0000   seconds (00.0%)        |
| coarsest grid matmul time: 0.0000   seconds (00.0%)        |
|  consumed core minutes*: 4.62e+02 (solve only)           |
|    max used mem/MPIproc: 2.45e+00 GB                     |
+----------------------------------------------------------+
*: only correct if #MPIprocs*#threads == #CPUs

[97, trace: -115768.554289+556.667503, variance: 1671688640.186591] from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.007287+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.009894+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.008988+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.007512+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.009620+0.000000i
from fgmres : depth: 1, iter: 401, p->H(1,0) = +0.008636+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.009892+0.000000i
from fgmres : depth: 1, iter: 401, p->H(1,0) = +0.009671+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.009566+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.009527+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.009264+0.000000i
from fgmres : depth: 1, iter: 101, p->H(1,0) = +0.008960+0.000000i
from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.009616+0.000000i
from fgmres : depth: 1, iter: 501, p->H(1,0) = +0.007822+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.008836+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.009834+0.000000i
from fgmres : depth: 1, iter: 351, p->H(1,0) = +0.006399+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.008748+0.000000i
from fgmres : depth: 1, iter: 151, p->H(1,0) = +0.007708+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.008587+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.008475+0.000000i
+----------------------------------------------------------+
|       FGMRES iterations: 88     coarse average: 532.47   |
| exact relative residual: ||r||/||b|| = 5.992733e-09      |
| elapsed wall clock time: 1547.7115 seconds                |
|        coarse grid time: 1472.3306 seconds (95.1%)        |
|        coarsest grid time: 0.0000   seconds (00.0%)        |
| coarsest grid matmul time: 0.0000   seconds (00.0%)        |
|  consumed core minutes*: 8.25e+02 (solve only)           |
|    max used mem/MPIproc: 2.45e+00 GB                     |
+----------------------------------------------------------+
*: only correct if #MPIprocs*#threads == #CPUs

[98, trace: -116053.677899+556.974981, variance: 1657969320.212528] from fgmres : depth: 1, iter: 401, p->H(1,0) = +0.009501+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.008918+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.007288+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.009099+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.008924+0.000000i
from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.008201+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.009117+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.008708+0.000000i
from fgmres : depth: 1, iter: 151, p->H(1,0) = +0.009429+0.000000i
from fgmres : depth: 1, iter: 501, p->H(1,0) = +0.008128+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.008396+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.009068+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.007462+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.009098+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.009937+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.009434+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.008632+0.000000i
from fgmres : depth: 1, iter: 401, p->H(1,0) = +0.009364+0.000000i
from fgmres : depth: 1, iter: 501, p->H(1,0) = +0.009145+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.009620+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.009554+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.008855+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.007120+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.009346+0.000000i
+----------------------------------------------------------+
|       FGMRES iterations: 95     coarse average: 506.43   |
| exact relative residual: ||r||/||b|| = 5.041579e-09      |
| elapsed wall clock time: 1593.6826 seconds                |
|        coarse grid time: 1512.2799 seconds (94.9%)        |
|        coarsest grid time: 0.0000   seconds (00.0%)        |
| coarsest grid matmul time: 0.0000   seconds (00.0%)        |
|  consumed core minutes*: 8.50e+02 (solve only)           |
|    max used mem/MPIproc: 2.45e+00 GB                     |
+----------------------------------------------------------+
*: only correct if #MPIprocs*#threads == #CPUs

[99, trace: -116153.914591+585.827816, variance: 1649119526.437396] from fgmres : depth: 1, iter: 351, p->H(1,0) = +0.009799+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.008330+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.006952+0.000000i
from fgmres : depth: 1, iter: 351, p->H(1,0) = +0.007857+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.007547+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.009416+0.000000i
from fgmres : depth: 1, iter: 401, p->H(1,0) = +0.008534+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.008575+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.008355+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.009702+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.007730+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.009947+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.009300+0.000000i
from fgmres : depth: 1, iter: 201, p->H(1,0) = +0.009286+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.008880+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.009950+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.008872+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.007853+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.008871+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.009269+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.009747+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.009975+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.008529+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.008556+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.008916+0.000000i
from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.009582+0.000000i
+----------------------------------------------------------+
|       FGMRES iterations: 97     coarse average: 543.48   |
| exact relative residual: ||r||/||b|| = 9.730768e-09      |
| elapsed wall clock time: 1738.8212 seconds                |
|        coarse grid time: 1655.7657 seconds (95.2%)        |
|        coarsest grid time: 0.0000   seconds (00.0%)        |
| coarsest grid matmul time: 0.0000   seconds (00.0%)        |
|  consumed core minutes*: 9.27e+02 (solve only)           |
|    max used mem/MPIproc: 2.45e+00 GB                     |
+----------------------------------------------------------+
*: only correct if #MPIprocs*#threads == #CPUs

[100, trace: -116240.299609+559.222637, variance: 1633702838.478527] from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.009843+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.009769+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.009727+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.008753+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.009178+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.007570+0.000000i
from fgmres : depth: 1, iter: 401, p->H(1,0) = +0.009668+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.009651+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.006978+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.009487+0.000000i
from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.008703+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.009359+0.000000i
from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.006948+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.007385+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.006929+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.009096+0.000000i
from fgmres : depth: 1, iter: 501, p->H(1,0) = +0.009987+0.000000i
from fgmres : depth: 1, iter: 151, p->H(1,0) = +0.009311+0.000000i
from fgmres : depth: 1, iter: 301, p->H(1,0) = +0.009989+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.009635+0.000000i
+----------------------------------------------------------+
|       FGMRES iterations: 69     coarse average: 458.33   |
| exact relative residual: ||r||/||b|| = 9.918945e-09      |
| elapsed wall clock time: 1052.8219 seconds                |
|        coarse grid time: 993.7706 seconds (94.4%)        |
|        coarsest grid time: 0.0000   seconds (00.0%)        |
| coarsest grid matmul time: 0.0000   seconds (00.0%)        |
|  consumed core minutes*: 5.62e+02 (solve only)           |
|    max used mem/MPIproc: 2.45e+00 GB                     |
+----------------------------------------------------------+
*: only correct if #MPIprocs*#threads == #CPUs

[101, trace: -116083.268824+626.745712, variance: 1618365712.245798] from fgmres : depth: 1, iter: 351, p->H(1,0) = +0.008370+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.009878+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.009928+0.000000i
from fgmres : depth: 1, iter: 101, p->H(1,0) = +0.009617+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.008888+0.000000i
from fgmres : depth: 1, iter: 401, p->H(1,0) = +0.008917+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.009169+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.008604+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.009534+0.000000i
+----------------------------------------------------------+
|       FGMRES iterations: 53     coarse average: 521.51   |
| exact relative residual: ||r||/||b|| = 9.266116e-09      |
| elapsed wall clock time: 913.2038 seconds                |
|        coarse grid time: 867.8509 seconds (95.0%)        |
|        coarsest grid time: 0.0000   seconds (00.0%)        |
| coarsest grid matmul time: 0.0000   seconds (00.0%)        |
|  consumed core minutes*: 4.87e+02 (solve only)           |
|    max used mem/MPIproc: 2.45e+00 GB                     |
+----------------------------------------------------------+
*: only correct if #MPIprocs*#threads == #CPUs

[102, trace: -115967.352606+595.913186, variance: 1605435858.692027] from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.009129+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.007705+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.009457+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.008708+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.007624+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.006725+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.008483+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.009625+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.009695+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.008101+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.008973+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.007760+0.000000i
from fgmres : depth: 1, iter: 401, p->H(1,0) = +0.008829+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.009851+0.000000i
from fgmres : depth: 1, iter: 301, p->H(1,0) = +0.009068+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.008196+0.000000i
+----------------------------------------------------------+
|       FGMRES iterations: 79     coarse average: 468.80   |
| exact relative residual: ||r||/||b|| = 9.455342e-09      |
| elapsed wall clock time: 1230.2254 seconds                |
|        coarse grid time: 1162.6012 seconds (94.5%)        |
|        coarsest grid time: 0.0000   seconds (00.0%)        |
| coarsest grid matmul time: 0.0000   seconds (00.0%)        |
|  consumed core minutes*: 6.56e+02 (solve only)           |
|    max used mem/MPIproc: 2.45e+00 GB                     |
+----------------------------------------------------------+
*: only correct if #MPIprocs*#threads == #CPUs

[103, trace: -116081.176171+612.735148, variance: 1591315589.895441] from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.009700+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.009907+0.000000i
+----------------------------------------------------------+
|       FGMRES iterations: 36     coarse average: 531.44   |
| exact relative residual: ||r||/||b|| = 9.124445e-09      |
| elapsed wall clock time: 630.9137 seconds                |
|        coarse grid time: 600.2286 seconds (95.1%)        |
|        coarsest grid time: 0.0000   seconds (00.0%)        |
| coarsest grid matmul time: 0.0000   seconds (00.0%)        |
|  consumed core minutes*: 3.36e+02 (solve only)           |
|    max used mem/MPIproc: 2.45e+00 GB                     |
+----------------------------------------------------------+
*: only correct if #MPIprocs*#threads == #CPUs

[104, trace: -116069.770240+628.934255, variance: 1577365354.046607] from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.007280+0.000000i
from fgmres : depth: 1, iter: 151, p->H(1,0) = +0.008788+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.009152+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.009111+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.008514+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.009771+0.000000i
from fgmres : depth: 1, iter: 351, p->H(1,0) = +0.009009+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.008372+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.009946+0.000000i
from fgmres : depth: 1, iter: 251, p->H(1,0) = +0.009740+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.009219+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.009731+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.009943+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.009314+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.009060+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.008369+0.000000i
from fgmres : depth: 1, iter: 351, p->H(1,0) = +0.009357+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.009935+0.000000i
from fgmres : depth: 1, iter: 301, p->H(1,0) = +0.009533+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.009711+0.000000i
from fgmres : depth: 1, iter: 201, p->H(1,0) = +0.009552+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.009842+0.000000i
from fgmres : depth: 1, iter: 201, p->H(1,0) = +0.009608+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.009487+0.000000i
from fgmres : depth: 1, iter: 501, p->H(1,0) = +0.008591+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.009151+0.000000i
from fgmres : depth: 1, iter: 201, p->H(1,0) = +0.009391+0.000000i
+----------------------------------------------------------+
|       FGMRES iterations: 118    coarse average: 488.68   |
| exact relative residual: ||r||/||b|| = 9.780039e-09      |
| elapsed wall clock time: 1911.0053 seconds                |
|        coarse grid time: 1809.9074 seconds (94.7%)        |
|        coarsest grid time: 0.0000   seconds (00.0%)        |
| coarsest grid matmul time: 0.0000   seconds (00.0%)        |
|  consumed core minutes*: 1.02e+03 (solve only)           |
|    max used mem/MPIproc: 2.45e+00 GB                     |
+----------------------------------------------------------+
*: only correct if #MPIprocs*#threads == #CPUs

[105, trace: -115958.634287+635.488860, variance: 1562395652.918386] from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.009639+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.009168+0.000000i
from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.009964+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.007251+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.007167+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.009967+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.009519+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.009303+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.007570+0.000000i
from fgmres : depth: 1, iter: 501, p->H(1,0) = +0.009743+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.008152+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.008252+0.000000i
from fgmres : depth: 1, iter: 201, p->H(1,0) = +0.008577+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.009752+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.009215+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.009918+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.009800+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.009166+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.009171+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.009747+0.000000i
+----------------------------------------------------------+
|       FGMRES iterations: 78     coarse average: 489.29   |
| exact relative residual: ||r||/||b|| = 6.069600e-09      |
| elapsed wall clock time: 1264.2329 seconds                |
|        coarse grid time: 1197.5140 seconds (94.7%)        |
|        coarsest grid time: 0.0000   seconds (00.0%)        |
| coarsest grid matmul time: 0.0000   seconds (00.0%)        |
|  consumed core minutes*: 6.74e+02 (solve only)           |
|    max used mem/MPIproc: 2.45e+00 GB                     |
+----------------------------------------------------------+
*: only correct if #MPIprocs*#threads == #CPUs

[106, trace: -116184.116002+623.601969, variance: 1548996164.450453] from fgmres : depth: 1, iter: 151, p->H(1,0) = +0.009939+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.009047+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.008972+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.008852+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.009043+0.000000i
from fgmres : depth: 1, iter: 251, p->H(1,0) = +0.009592+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.008451+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.008284+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.007968+0.000000i
+----------------------------------------------------------+
|       FGMRES iterations: 51     coarse average: 548.25   |
| exact relative residual: ||r||/||b|| = 9.530335e-09      |
| elapsed wall clock time: 920.8046 seconds                |
|        coarse grid time: 877.0820 seconds (95.3%)        |
|        coarsest grid time: 0.0000   seconds (00.0%)        |
| coarsest grid matmul time: 0.0000   seconds (00.0%)        |
|  consumed core minutes*: 4.91e+02 (solve only)           |
|    max used mem/MPIproc: 2.45e+00 GB                     |
+----------------------------------------------------------+
*: only correct if #MPIprocs*#threads == #CPUs

[107, trace: -116324.962138+577.739341, variance: 1539895228.967704] from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.009719+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.008570+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.009669+0.000000i
from fgmres : depth: 1, iter: 201, p->H(1,0) = +0.009294+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.008004+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.008067+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.008117+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.008868+0.000000i
from fgmres : depth: 1, iter: 151, p->H(1,0) = +0.008756+0.000000i
from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.009871+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.009535+0.000000i
+----------------------------------------------------------+
|       FGMRES iterations: 59     coarse average: 587.56   |
| exact relative residual: ||r||/||b|| = 8.613949e-09      |
| elapsed wall clock time: 1137.5159 seconds                |
|        coarse grid time: 1087.0790 seconds (95.6%)        |
|        coarsest grid time: 0.0000   seconds (00.0%)        |
| coarsest grid matmul time: 0.0000   seconds (00.0%)        |
|  consumed core minutes*: 6.07e+02 (solve only)           |
|    max used mem/MPIproc: 2.45e+00 GB                     |
+----------------------------------------------------------+
*: only correct if #MPIprocs*#threads == #CPUs

[108, trace: -116492.318469+566.917214, variance: 1527991015.792987] from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.009265+0.000000i
from fgmres : depth: 1, iter: 401, p->H(1,0) = +0.009459+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.009469+0.000000i
from fgmres : depth: 1, iter: 401, p->H(1,0) = +0.009663+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.008492+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.009698+0.000000i
from fgmres : depth: 1, iter: 351, p->H(1,0) = +0.007384+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.008728+0.000000i
from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.008634+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.008071+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.007810+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.009894+0.000000i
+----------------------------------------------------------+
|       FGMRES iterations: 66     coarse average: 574.98   |
| exact relative residual: ||r||/||b|| = 8.325706e-09      |
| elapsed wall clock time: 1245.8754 seconds                |
|        coarse grid time: 1189.4731 seconds (95.5%)        |
|        coarsest grid time: 0.0000   seconds (00.0%)        |
| coarsest grid matmul time: 0.0000   seconds (00.0%)        |
|  consumed core minutes*: 6.64e+02 (solve only)           |
|    max used mem/MPIproc: 2.45e+00 GB                     |
+----------------------------------------------------------+
*: only correct if #MPIprocs*#threads == #CPUs

[109, trace: -116835.337674+504.847915, variance: 1517103925.193761] from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.008740+0.000000i
from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.007807+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.009721+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.008854+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.009886+0.000000i
from fgmres : depth: 1, iter: 351, p->H(1,0) = +0.008408+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.008277+0.000000i
from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.009157+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.009311+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.008931+0.000000i
from fgmres : depth: 1, iter: 351, p->H(1,0) = +0.009450+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.008862+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.007917+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.009423+0.000000i
from fgmres : depth: 1, iter: 251, p->H(1,0) = +0.008751+0.000000i
+----------------------------------------------------------+
|       FGMRES iterations: 62     coarse average: 459.11   |
| exact relative residual: ||r||/||b|| = 9.944836e-09      |
| elapsed wall clock time: 945.4729 seconds                |
|        coarse grid time: 892.3821 seconds (94.4%)        |
|        coarsest grid time: 0.0000   seconds (00.0%)        |
| coarsest grid matmul time: 0.0000   seconds (00.0%)        |
|  consumed core minutes*: 5.04e+02 (solve only)           |
|    max used mem/MPIproc: 2.45e+00 GB                     |
+----------------------------------------------------------+
*: only correct if #MPIprocs*#threads == #CPUs

[110, trace: -117237.403516+498.449338, variance: 1516598469.406772] from fgmres : depth: 1, iter: 201, p->H(1,0) = +0.008997+0.000000i
from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.007345+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.009556+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.009488+0.000000i
from fgmres : depth: 1, iter: 301, p->H(1,0) = +0.008511+0.000000i
from fgmres : depth: 1, iter: 501, p->H(1,0) = +0.009701+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.009068+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.009918+0.000000i
from fgmres : depth: 1, iter: 501, p->H(1,0) = +0.009741+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.009617+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.009810+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.009016+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.009448+0.000000i
+----------------------------------------------------------+
|       FGMRES iterations: 63     coarse average: 589.00   |
| exact relative residual: ||r||/||b|| = 9.740836e-09      |
| elapsed wall clock time: 1217.1811 seconds                |
|        coarse grid time: 1163.2557 seconds (95.6%)        |
|        coarsest grid time: 0.0000   seconds (00.0%)        |
| coarsest grid matmul time: 0.0000   seconds (00.0%)        |
|  consumed core minutes*: 6.49e+02 (solve only)           |
|    max used mem/MPIproc: 2.45e+00 GB                     |
+----------------------------------------------------------+
*: only correct if #MPIprocs*#threads == #CPUs

[111, trace: -116966.266239+515.283982, variance: 1520635744.898760] from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.009802+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.006430+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.008673+0.000000i
from fgmres : depth: 1, iter: 301, p->H(1,0) = +0.009704+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.009801+0.000000i
from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.009867+0.000000i
from fgmres : depth: 1, iter: 501, p->H(1,0) = +0.009210+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.008690+0.000000i
from fgmres : depth: 1, iter: 301, p->H(1,0) = +0.007713+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.009393+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.009410+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.008393+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.009996+0.000000i
from fgmres : depth: 1, iter: 151, p->H(1,0) = +0.009629+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.009409+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.008827+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.009511+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.009643+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.008738+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.007451+0.000000i
from fgmres : depth: 1, iter: 351, p->H(1,0) = +0.009587+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.009358+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.009647+0.000000i
from fgmres : depth: 1, iter: 401, p->H(1,0) = +0.009886+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.008792+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.007416+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.009741+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.007263+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.008622+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.009016+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.009537+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.009261+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.008617+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.008171+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.009443+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.009093+0.000000i
+----------------------------------------------------------+
|       FGMRES iterations: 142    coarse average: 497.90   |
| exact relative residual: ||r||/||b|| = 9.808145e-09      |
| elapsed wall clock time: 2338.5249 seconds                |
|        coarse grid time: 2216.8112 seconds (94.8%)        |
|        coarsest grid time: 0.0000   seconds (00.0%)        |
| coarsest grid matmul time: 0.0000   seconds (00.0%)        |
|  consumed core minutes*: 1.25e+03 (solve only)           |
|    max used mem/MPIproc: 2.45e+00 GB                     |
+----------------------------------------------------------+
*: only correct if #MPIprocs*#threads == #CPUs

[112, trace: -117168.815817+512.716528, variance: 1515218202.971207] from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.008132+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.008067+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.007288+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.008862+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.009738+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.007687+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.008584+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.009230+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.009124+0.000000i
+----------------------------------------------------------+
|       FGMRES iterations: 50     coarse average: 560.36   |
| exact relative residual: ||r||/||b|| = 4.876901e-09      |
| elapsed wall clock time: 920.7650 seconds                |
|        coarse grid time: 877.9483 seconds (95.3%)        |
|        coarsest grid time: 0.0000   seconds (00.0%)        |
| coarsest grid matmul time: 0.0000   seconds (00.0%)        |
|  consumed core minutes*: 4.91e+02 (solve only)           |
|    max used mem/MPIproc: 2.45e+00 GB                     |
+----------------------------------------------------------+
*: only correct if #MPIprocs*#threads == #CPUs

[113, trace: -117097.770710+519.661507, variance: 1506369305.593752] from fgmres : depth: 1, iter: 201, p->H(1,0) = +0.009734+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.009873+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.009910+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.006531+0.000000i
from fgmres : depth: 1, iter: 501, p->H(1,0) = +0.009737+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.007973+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.007808+0.000000i
from fgmres : depth: 1, iter: 351, p->H(1,0) = +0.008349+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.008617+0.000000i
from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.009460+0.000000i
from fgmres : depth: 1, iter: 251, p->H(1,0) = +0.009697+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.008123+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.009529+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.009875+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.009460+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.009777+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.008402+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.008021+0.000000i
+----------------------------------------------------------+
|       FGMRES iterations: 79     coarse average: 547.37   |
| exact relative residual: ||r||/||b|| = 9.758569e-09      |
| elapsed wall clock time: 1422.4685 seconds                |
|        coarse grid time: 1354.8713 seconds (95.2%)        |
|        coarsest grid time: 0.0000   seconds (00.0%)        |
| coarsest grid matmul time: 0.0000   seconds (00.0%)        |
|  consumed core minutes*: 7.59e+02 (solve only)           |
|    max used mem/MPIproc: 2.45e+00 GB                     |
+----------------------------------------------------------+
*: only correct if #MPIprocs*#threads == #CPUs

[114, trace: -117243.775223+515.628682, variance: 1493747629.705907] from fgmres : depth: 1, iter: 201, p->H(1,0) = +0.007664+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.007054+0.000000i
from fgmres : depth: 1, iter: 351, p->H(1,0) = +0.007700+0.000000i
from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.008661+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.007710+0.000000i
from fgmres : depth: 1, iter: 501, p->H(1,0) = +0.009519+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.009122+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.009481+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.009956+0.000000i
from fgmres : depth: 1, iter: 251, p->H(1,0) = +0.007105+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.009115+0.000000i
from fgmres : depth: 1, iter: 301, p->H(1,0) = +0.008675+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.009311+0.000000i
+----------------------------------------------------------+
|       FGMRES iterations: 65     coarse average: 478.91   |
| exact relative residual: ||r||/||b|| = 6.447302e-09      |
| elapsed wall clock time: 1031.6474 seconds                |
|        coarse grid time: 976.1235 seconds (94.6%)        |
|        coarsest grid time: 0.0000   seconds (00.0%)        |
| coarsest grid matmul time: 0.0000   seconds (00.0%)        |
|  consumed core minutes*: 5.50e+02 (solve only)           |
|    max used mem/MPIproc: 2.45e+00 GB                     |
+----------------------------------------------------------+
*: only correct if #MPIprocs*#threads == #CPUs

[115, trace: -117267.552643+500.671461, variance: 1483170189.172848] from fgmres : depth: 1, iter: 201, p->H(1,0) = +0.009345+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.009020+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.009966+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.007641+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.008419+0.000000i
+----------------------------------------------------------+
|       FGMRES iterations: 43     coarse average: 512.21   |
| exact relative residual: ||r||/||b|| = 9.111080e-09      |
| elapsed wall clock time: 727.3129 seconds                |
|        coarse grid time: 690.5732 seconds (94.9%)        |
|        coarsest grid time: 0.0000   seconds (00.0%)        |
| coarsest grid matmul time: 0.0000   seconds (00.0%)        |
|  consumed core minutes*: 3.88e+02 (solve only)           |
|    max used mem/MPIproc: 2.45e+00 GB                     |
+----------------------------------------------------------+
*: only correct if #MPIprocs*#threads == #CPUs

[116, trace: -117087.548269+525.528619, variance: 1470507221.119064] from fgmres : depth: 1, iter: 401, p->H(1,0) = +0.009027+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.009474+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.007963+0.000000i
from fgmres : depth: 1, iter: 401, p->H(1,0) = +0.008128+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.007284+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.008617+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.007514+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.006860+0.000000i
from fgmres : depth: 1, iter: 501, p->H(1,0) = +0.009656+0.000000i
