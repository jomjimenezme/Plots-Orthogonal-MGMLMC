lun oct  9 09:44:42 CEST 2023
sed -f double.sed src/operator_generic.c > build/gsrc/operator_double.c
cp src/dirac.h build/gsrc/dirac.h
cp src/sse_float_intrinsic.h build/gsrc/sse_float_intrinsic.h
cp src/sse_double_intrinsic.h build/gsrc/sse_double_intrinsic.h
cp src/blas_vectorized.h build/gsrc/blas_vectorized.h
cp src/DDalphaAMG.h build/gsrc/DDalphaAMG.h
cp src/io.h build/gsrc/io.h
cp src/sse_complex_float_intrinsic.h build/gsrc/sse_complex_float_intrinsic.h
cp src/top_level.h build/gsrc/top_level.h
cp src/sse_complex_double_intrinsic.h build/gsrc/sse_complex_double_intrinsic.h
cp src/sse_blas_vectorized.h build/gsrc/sse_blas_vectorized.h
cp src/main.h build/gsrc/main.h
cp src/sse_linalg.h build/gsrc/sse_linalg.h
cp src/init.h build/gsrc/init.h
cp src/solver_analysis.h build/gsrc/solver_analysis.h
cp src/var_table.h build/gsrc/var_table.h
cp src/data_layout.h build/gsrc/data_layout.h
cp src/sse_coarse_operator.h build/gsrc/sse_coarse_operator.h
cp src/vectorization_control.h build/gsrc/vectorization_control.h
cp src/linalg.h build/gsrc/linalg.h
cp src/sse_dirac_su3local.h build/gsrc/sse_dirac_su3local.h
cp src/linsolve.h build/gsrc/linsolve.h
cp src/ghost.h build/gsrc/ghost.h
cp src/sse_dirac.h build/gsrc/sse_dirac.h
cp src/threading.h build/gsrc/threading.h
cp src/lime_io.h build/gsrc/lime_io.h
cp src/preconditioner.h build/gsrc/preconditioner.h
cp src/clifford.h build/gsrc/clifford.h
sed -f float.sed src/sse_interpolation_generic.h > build/gsrc/sse_interpolation_float.h
sed -f float.sed src/main_post_def_generic.h > build/gsrc/main_post_def_float.h
sed -f float.sed src/block_jacobi_generic.h > build/gsrc/block_jacobi_float.h
sed -f float.sed src/coarse_operator_generic.h > build/gsrc/coarse_operator_float.h
sed -f float.sed src/coarse_oddeven_generic.h > build/gsrc/coarse_oddeven_float.h
sed -f float.sed src/vcycle_generic.h > build/gsrc/vcycle_float.h
sed -f float.sed src/gathering_generic.h > build/gsrc/gathering_float.h
sed -f float.sed src/main_pre_def_generic.h > build/gsrc/main_pre_def_float.h
sed -f float.sed src/vectorization_dirac_generic.h > build/gsrc/vectorization_dirac_float.h
sed -f float.sed src/oddeven_generic.h > build/gsrc/oddeven_float.h
sed -f float.sed src/powerit_generic.h > build/gsrc/powerit_float.h
sed -f float.sed src/hutchinson_generic.h > build/gsrc/hutchinson_float.h
sed -f float.sed src/dirac_generic.h > build/gsrc/dirac_float.h
sed -f float.sed src/linalg_generic.h > build/gsrc/linalg_float.h
sed -f float.sed src/sse_linalg_generic.h > build/gsrc/sse_linalg_float.h
sed -f float.sed src/coarsening_generic.h > build/gsrc/coarsening_float.h
sed -f float.sed src/interpolation_generic.h > build/gsrc/interpolation_float.h
sed -f float.sed src/gcrodr_generic.h > build/gsrc/gcrodr_float.h
sed -f float.sed src/lapackwrap_generic.h > build/gsrc/lapackwrap_float.h
sed -f float.sed src/data_generic.h > build/gsrc/data_float.h
sed -f float.sed src/local_polyprec_generic.h > build/gsrc/local_polyprec_float.h
sed -f float.sed src/sse_coarse_operator_generic.h > build/gsrc/sse_coarse_operator_float.h
sed -f float.sed src/schwarz_generic.h > build/gsrc/schwarz_float.h
sed -f float.sed src/init_generic.h > build/gsrc/init_float.h
sed -f float.sed src/linsolve_generic.h > build/gsrc/linsolve_float.h
sed -f float.sed src/operator_generic.h > build/gsrc/operator_float.h
sed -f float.sed src/ghost_generic.h > build/gsrc/ghost_float.h
sed -f float.sed src/setup_generic.h > build/gsrc/setup_float.h
sed -f float.sed src/polyprec_generic.h > build/gsrc/polyprec_float.h
sed -f double.sed src/sse_interpolation_generic.h > build/gsrc/sse_interpolation_double.h
sed -f double.sed src/main_post_def_generic.h > build/gsrc/main_post_def_double.h
sed -f double.sed src/block_jacobi_generic.h > build/gsrc/block_jacobi_double.h
sed -f double.sed src/coarse_operator_generic.h > build/gsrc/coarse_operator_double.h
sed -f double.sed src/coarse_oddeven_generic.h > build/gsrc/coarse_oddeven_double.h
sed -f double.sed src/vcycle_generic.h > build/gsrc/vcycle_double.h
sed -f double.sed src/gathering_generic.h > build/gsrc/gathering_double.h
sed -f double.sed src/main_pre_def_generic.h > build/gsrc/main_pre_def_double.h
sed -f double.sed src/vectorization_dirac_generic.h > build/gsrc/vectorization_dirac_double.h
sed -f double.sed src/oddeven_generic.h > build/gsrc/oddeven_double.h
sed -f double.sed src/powerit_generic.h > build/gsrc/powerit_double.h
sed -f double.sed src/hutchinson_generic.h > build/gsrc/hutchinson_double.h
sed -f double.sed src/dirac_generic.h > build/gsrc/dirac_double.h
sed -f double.sed src/linalg_generic.h > build/gsrc/linalg_double.h
sed -f double.sed src/sse_linalg_generic.h > build/gsrc/sse_linalg_double.h
sed -f double.sed src/coarsening_generic.h > build/gsrc/coarsening_double.h
sed -f double.sed src/interpolation_generic.h > build/gsrc/interpolation_double.h
sed -f double.sed src/gcrodr_generic.h > build/gsrc/gcrodr_double.h
sed -f double.sed src/lapackwrap_generic.h > build/gsrc/lapackwrap_double.h
sed -f double.sed src/data_generic.h > build/gsrc/data_double.h
sed -f double.sed src/local_polyprec_generic.h > build/gsrc/local_polyprec_double.h
sed -f double.sed src/sse_coarse_operator_generic.h > build/gsrc/sse_coarse_operator_double.h
sed -f double.sed src/schwarz_generic.h > build/gsrc/schwarz_double.h
sed -f double.sed src/init_generic.h > build/gsrc/init_double.h
sed -f double.sed src/linsolve_generic.h > build/gsrc/linsolve_double.h
sed -f double.sed src/operator_generic.h > build/gsrc/operator_double.h
sed -f double.sed src/ghost_generic.h > build/gsrc/ghost_double.h
sed -f double.sed src/setup_generic.h > build/gsrc/setup_double.h
sed -f double.sed src/polyprec_generic.h > build/gsrc/polyprec_double.h
cpp -MM build/gsrc/operator_double.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/operator_double.dep : ,g' > build/gsrc/operator_double.dep
cpp -MM build/gsrc/operator_double.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/operator_double.dep : ,g' >> build/gsrc/operator_double.dep
sed -f double.sed src/local_polyprec_generic.c > build/gsrc/local_polyprec_double.c
cpp -MM build/gsrc/local_polyprec_double.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/local_polyprec_double.dep : ,g' > build/gsrc/local_polyprec_double.dep
cpp -MM build/gsrc/local_polyprec_double.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/local_polyprec_double.dep : ,g' >> build/gsrc/local_polyprec_double.dep
sed -f double.sed src/data_generic.c > build/gsrc/data_double.c
cpp -MM build/gsrc/data_double.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/data_double.dep : ,g' > build/gsrc/data_double.dep
cpp -MM build/gsrc/data_double.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/data_double.dep : ,g' >> build/gsrc/data_double.dep
sed -f double.sed src/lapackwrap_generic.c > build/gsrc/lapackwrap_double.c
cpp -MM build/gsrc/lapackwrap_double.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/lapackwrap_double.dep : ,g' > build/gsrc/lapackwrap_double.dep
cpp -MM build/gsrc/lapackwrap_double.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/lapackwrap_double.dep : ,g' >> build/gsrc/lapackwrap_double.dep
sed -f double.sed src/gcrodr_generic.c > build/gsrc/gcrodr_double.c
cpp -MM build/gsrc/gcrodr_double.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/gcrodr_double.dep : ,g' > build/gsrc/gcrodr_double.dep
cpp -MM build/gsrc/gcrodr_double.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/gcrodr_double.dep : ,g' >> build/gsrc/gcrodr_double.dep
sed -f double.sed src/sse_interpolation_generic.c > build/gsrc/sse_interpolation_double.c
cpp -MM build/gsrc/sse_interpolation_double.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/sse_interpolation_double.dep : ,g' > build/gsrc/sse_interpolation_double.dep
cpp -MM build/gsrc/sse_interpolation_double.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/sse_interpolation_double.dep : ,g' >> build/gsrc/sse_interpolation_double.dep
sed -f double.sed src/interpolation_generic.c > build/gsrc/interpolation_double.c
cpp -MM build/gsrc/interpolation_double.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/interpolation_double.dep : ,g' > build/gsrc/interpolation_double.dep
cpp -MM build/gsrc/interpolation_double.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/interpolation_double.dep : ,g' >> build/gsrc/interpolation_double.dep
sed -f double.sed src/coarsening_generic.c > build/gsrc/coarsening_double.c
cpp -MM build/gsrc/coarsening_double.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/coarsening_double.dep : ,g' > build/gsrc/coarsening_double.dep
cpp -MM build/gsrc/coarsening_double.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/coarsening_double.dep : ,g' >> build/gsrc/coarsening_double.dep
sed -f double.sed src/sse_linalg_generic.c > build/gsrc/sse_linalg_double.c
cpp -MM build/gsrc/sse_linalg_double.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/sse_linalg_double.dep : ,g' > build/gsrc/sse_linalg_double.dep
cpp -MM build/gsrc/sse_linalg_double.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/sse_linalg_double.dep : ,g' >> build/gsrc/sse_linalg_double.dep
sed -f double.sed src/linalg_generic.c > build/gsrc/linalg_double.c
cpp -MM build/gsrc/linalg_double.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/linalg_double.dep : ,g' > build/gsrc/linalg_double.dep
cpp -MM build/gsrc/linalg_double.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/linalg_double.dep : ,g' >> build/gsrc/linalg_double.dep
sed -f double.sed src/hutchinson_generic.c > build/gsrc/hutchinson_double.c
cpp -MM build/gsrc/hutchinson_double.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/hutchinson_double.dep : ,g' > build/gsrc/hutchinson_double.dep
cpp -MM build/gsrc/hutchinson_double.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/hutchinson_double.dep : ,g' >> build/gsrc/hutchinson_double.dep
sed -f double.sed src/vectorization_dirac_generic.c > build/gsrc/vectorization_dirac_double.c
cpp -MM build/gsrc/vectorization_dirac_double.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/vectorization_dirac_double.dep : ,g' > build/gsrc/vectorization_dirac_double.dep
cpp -MM build/gsrc/vectorization_dirac_double.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/vectorization_dirac_double.dep : ,g' >> build/gsrc/vectorization_dirac_double.dep
sed -f double.sed src/init_generic.c > build/gsrc/init_double.c
cpp -MM build/gsrc/init_double.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/init_double.dep : ,g' > build/gsrc/init_double.dep
cpp -MM build/gsrc/init_double.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/init_double.dep : ,g' >> build/gsrc/init_double.dep
sed -f double.sed src/oddeven_generic.c > build/gsrc/oddeven_double.c
cpp -MM build/gsrc/oddeven_double.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/oddeven_double.dep : ,g' > build/gsrc/oddeven_double.dep
cpp -MM build/gsrc/oddeven_double.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/oddeven_double.dep : ,g' >> build/gsrc/oddeven_double.dep
sed -f double.sed src/vcycle_generic.c > build/gsrc/vcycle_double.c
cpp -MM build/gsrc/vcycle_double.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/vcycle_double.dep : ,g' > build/gsrc/vcycle_double.dep
cpp -MM build/gsrc/vcycle_double.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/vcycle_double.dep : ,g' >> build/gsrc/vcycle_double.dep
sed -f double.sed src/coarse_oddeven_generic.c > build/gsrc/coarse_oddeven_double.c
cpp -MM build/gsrc/coarse_oddeven_double.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/coarse_oddeven_double.dep : ,g' > build/gsrc/coarse_oddeven_double.dep
cpp -MM build/gsrc/coarse_oddeven_double.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/coarse_oddeven_double.dep : ,g' >> build/gsrc/coarse_oddeven_double.dep
sed -f double.sed src/coarse_operator_generic.c > build/gsrc/coarse_operator_double.c
cpp -MM build/gsrc/coarse_operator_double.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/coarse_operator_double.dep : ,g' > build/gsrc/coarse_operator_double.dep
cpp -MM build/gsrc/coarse_operator_double.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/coarse_operator_double.dep : ,g' >> build/gsrc/coarse_operator_double.dep
sed -f double.sed src/setup_generic.c > build/gsrc/setup_double.c
cpp -MM build/gsrc/setup_double.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/setup_double.dep : ,g' > build/gsrc/setup_double.dep
cpp -MM build/gsrc/setup_double.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/setup_double.dep : ,g' >> build/gsrc/setup_double.dep
sed -f double.sed src/schwarz_generic.c > build/gsrc/schwarz_double.c
cpp -MM build/gsrc/schwarz_double.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/schwarz_double.dep : ,g' > build/gsrc/schwarz_double.dep
cpp -MM build/gsrc/schwarz_double.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/schwarz_double.dep : ,g' >> build/gsrc/schwarz_double.dep
sed -f double.sed src/block_jacobi_generic.c > build/gsrc/block_jacobi_double.c
cpp -MM build/gsrc/block_jacobi_double.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/block_jacobi_double.dep : ,g' > build/gsrc/block_jacobi_double.dep
cpp -MM build/gsrc/block_jacobi_double.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/block_jacobi_double.dep : ,g' >> build/gsrc/block_jacobi_double.dep
sed -f double.sed src/dirac_generic.c > build/gsrc/dirac_double.c
cpp -MM build/gsrc/dirac_double.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/dirac_double.dep : ,g' > build/gsrc/dirac_double.dep
cpp -MM build/gsrc/dirac_double.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/dirac_double.dep : ,g' >> build/gsrc/dirac_double.dep
sed -f double.sed src/sse_coarse_operator_generic.c > build/gsrc/sse_coarse_operator_double.c
cpp -MM build/gsrc/sse_coarse_operator_double.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/sse_coarse_operator_double.dep : ,g' > build/gsrc/sse_coarse_operator_double.dep
cpp -MM build/gsrc/sse_coarse_operator_double.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/sse_coarse_operator_double.dep : ,g' >> build/gsrc/sse_coarse_operator_double.dep
sed -f double.sed src/powerit_generic.c > build/gsrc/powerit_double.c
cpp -MM build/gsrc/powerit_double.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/powerit_double.dep : ,g' > build/gsrc/powerit_double.dep
cpp -MM build/gsrc/powerit_double.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/powerit_double.dep : ,g' >> build/gsrc/powerit_double.dep
sed -f double.sed src/polyprec_generic.c > build/gsrc/polyprec_double.c
cpp -MM build/gsrc/polyprec_double.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/polyprec_double.dep : ,g' > build/gsrc/polyprec_double.dep
cpp -MM build/gsrc/polyprec_double.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/polyprec_double.dep : ,g' >> build/gsrc/polyprec_double.dep
sed -f double.sed src/ghost_generic.c > build/gsrc/ghost_double.c
cpp -MM build/gsrc/ghost_double.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/ghost_double.dep : ,g' > build/gsrc/ghost_double.dep
cpp -MM build/gsrc/ghost_double.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/ghost_double.dep : ,g' >> build/gsrc/ghost_double.dep
sed -f double.sed src/gathering_generic.c > build/gsrc/gathering_double.c
cpp -MM build/gsrc/gathering_double.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/gathering_double.dep : ,g' > build/gsrc/gathering_double.dep
cpp -MM build/gsrc/gathering_double.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/gathering_double.dep : ,g' >> build/gsrc/gathering_double.dep
sed -f double.sed src/linsolve_generic.c > build/gsrc/linsolve_double.c
cpp -MM build/gsrc/linsolve_double.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/linsolve_double.dep : ,g' > build/gsrc/linsolve_double.dep
cpp -MM build/gsrc/linsolve_double.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/linsolve_double.dep : ,g' >> build/gsrc/linsolve_double.dep
sed -f float.sed src/operator_generic.c > build/gsrc/operator_float.c
cpp -MM build/gsrc/operator_float.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/operator_float.dep : ,g' > build/gsrc/operator_float.dep
cpp -MM build/gsrc/operator_float.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/operator_float.dep : ,g' >> build/gsrc/operator_float.dep
sed -f float.sed src/local_polyprec_generic.c > build/gsrc/local_polyprec_float.c
cpp -MM build/gsrc/local_polyprec_float.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/local_polyprec_float.dep : ,g' > build/gsrc/local_polyprec_float.dep
cpp -MM build/gsrc/local_polyprec_float.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/local_polyprec_float.dep : ,g' >> build/gsrc/local_polyprec_float.dep
sed -f float.sed src/data_generic.c > build/gsrc/data_float.c
cpp -MM build/gsrc/data_float.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/data_float.dep : ,g' > build/gsrc/data_float.dep
cpp -MM build/gsrc/data_float.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/data_float.dep : ,g' >> build/gsrc/data_float.dep
sed -f float.sed src/lapackwrap_generic.c > build/gsrc/lapackwrap_float.c
cpp -MM build/gsrc/lapackwrap_float.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/lapackwrap_float.dep : ,g' > build/gsrc/lapackwrap_float.dep
cpp -MM build/gsrc/lapackwrap_float.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/lapackwrap_float.dep : ,g' >> build/gsrc/lapackwrap_float.dep
sed -f float.sed src/gcrodr_generic.c > build/gsrc/gcrodr_float.c
cpp -MM build/gsrc/gcrodr_float.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/gcrodr_float.dep : ,g' > build/gsrc/gcrodr_float.dep
cpp -MM build/gsrc/gcrodr_float.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/gcrodr_float.dep : ,g' >> build/gsrc/gcrodr_float.dep
sed -f float.sed src/sse_interpolation_generic.c > build/gsrc/sse_interpolation_float.c
cpp -MM build/gsrc/sse_interpolation_float.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/sse_interpolation_float.dep : ,g' > build/gsrc/sse_interpolation_float.dep
cpp -MM build/gsrc/sse_interpolation_float.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/sse_interpolation_float.dep : ,g' >> build/gsrc/sse_interpolation_float.dep
sed -f float.sed src/interpolation_generic.c > build/gsrc/interpolation_float.c
cpp -MM build/gsrc/interpolation_float.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/interpolation_float.dep : ,g' > build/gsrc/interpolation_float.dep
cpp -MM build/gsrc/interpolation_float.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/interpolation_float.dep : ,g' >> build/gsrc/interpolation_float.dep
sed -f float.sed src/coarsening_generic.c > build/gsrc/coarsening_float.c
cpp -MM build/gsrc/coarsening_float.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/coarsening_float.dep : ,g' > build/gsrc/coarsening_float.dep
cpp -MM build/gsrc/coarsening_float.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/coarsening_float.dep : ,g' >> build/gsrc/coarsening_float.dep
sed -f float.sed src/sse_linalg_generic.c > build/gsrc/sse_linalg_float.c
cpp -MM build/gsrc/sse_linalg_float.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/sse_linalg_float.dep : ,g' > build/gsrc/sse_linalg_float.dep
cpp -MM build/gsrc/sse_linalg_float.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/sse_linalg_float.dep : ,g' >> build/gsrc/sse_linalg_float.dep
sed -f float.sed src/linalg_generic.c > build/gsrc/linalg_float.c
cpp -MM build/gsrc/linalg_float.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/linalg_float.dep : ,g' > build/gsrc/linalg_float.dep
cpp -MM build/gsrc/linalg_float.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/linalg_float.dep : ,g' >> build/gsrc/linalg_float.dep
sed -f float.sed src/hutchinson_generic.c > build/gsrc/hutchinson_float.c
cpp -MM build/gsrc/hutchinson_float.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/hutchinson_float.dep : ,g' > build/gsrc/hutchinson_float.dep
cpp -MM build/gsrc/hutchinson_float.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/hutchinson_float.dep : ,g' >> build/gsrc/hutchinson_float.dep
sed -f float.sed src/vectorization_dirac_generic.c > build/gsrc/vectorization_dirac_float.c
cpp -MM build/gsrc/vectorization_dirac_float.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/vectorization_dirac_float.dep : ,g' > build/gsrc/vectorization_dirac_float.dep
cpp -MM build/gsrc/vectorization_dirac_float.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/vectorization_dirac_float.dep : ,g' >> build/gsrc/vectorization_dirac_float.dep
sed -f float.sed src/init_generic.c > build/gsrc/init_float.c
cpp -MM build/gsrc/init_float.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/init_float.dep : ,g' > build/gsrc/init_float.dep
cpp -MM build/gsrc/init_float.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/init_float.dep : ,g' >> build/gsrc/init_float.dep
sed -f float.sed src/oddeven_generic.c > build/gsrc/oddeven_float.c
cpp -MM build/gsrc/oddeven_float.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/oddeven_float.dep : ,g' > build/gsrc/oddeven_float.dep
cpp -MM build/gsrc/oddeven_float.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/oddeven_float.dep : ,g' >> build/gsrc/oddeven_float.dep
sed -f float.sed src/vcycle_generic.c > build/gsrc/vcycle_float.c
cpp -MM build/gsrc/vcycle_float.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/vcycle_float.dep : ,g' > build/gsrc/vcycle_float.dep
cpp -MM build/gsrc/vcycle_float.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/vcycle_float.dep : ,g' >> build/gsrc/vcycle_float.dep
sed -f float.sed src/coarse_oddeven_generic.c > build/gsrc/coarse_oddeven_float.c
cpp -MM build/gsrc/coarse_oddeven_float.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/coarse_oddeven_float.dep : ,g' > build/gsrc/coarse_oddeven_float.dep
cpp -MM build/gsrc/coarse_oddeven_float.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/coarse_oddeven_float.dep : ,g' >> build/gsrc/coarse_oddeven_float.dep
sed -f float.sed src/coarse_operator_generic.c > build/gsrc/coarse_operator_float.c
cpp -MM build/gsrc/coarse_operator_float.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/coarse_operator_float.dep : ,g' > build/gsrc/coarse_operator_float.dep
cpp -MM build/gsrc/coarse_operator_float.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/coarse_operator_float.dep : ,g' >> build/gsrc/coarse_operator_float.dep
sed -f float.sed src/setup_generic.c > build/gsrc/setup_float.c
cpp -MM build/gsrc/setup_float.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/setup_float.dep : ,g' > build/gsrc/setup_float.dep
cpp -MM build/gsrc/setup_float.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/setup_float.dep : ,g' >> build/gsrc/setup_float.dep
sed -f float.sed src/schwarz_generic.c > build/gsrc/schwarz_float.c
cpp -MM build/gsrc/schwarz_float.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/schwarz_float.dep : ,g' > build/gsrc/schwarz_float.dep
cpp -MM build/gsrc/schwarz_float.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/schwarz_float.dep : ,g' >> build/gsrc/schwarz_float.dep
sed -f float.sed src/block_jacobi_generic.c > build/gsrc/block_jacobi_float.c
cpp -MM build/gsrc/block_jacobi_float.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/block_jacobi_float.dep : ,g' > build/gsrc/block_jacobi_float.dep
cpp -MM build/gsrc/block_jacobi_float.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/block_jacobi_float.dep : ,g' >> build/gsrc/block_jacobi_float.dep
sed -f float.sed src/dirac_generic.c > build/gsrc/dirac_float.c
cpp -MM build/gsrc/dirac_float.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/dirac_float.dep : ,g' > build/gsrc/dirac_float.dep
cpp -MM build/gsrc/dirac_float.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/dirac_float.dep : ,g' >> build/gsrc/dirac_float.dep
sed -f float.sed src/sse_coarse_operator_generic.c > build/gsrc/sse_coarse_operator_float.c
cpp -MM build/gsrc/sse_coarse_operator_float.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/sse_coarse_operator_float.dep : ,g' > build/gsrc/sse_coarse_operator_float.dep
cpp -MM build/gsrc/sse_coarse_operator_float.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/sse_coarse_operator_float.dep : ,g' >> build/gsrc/sse_coarse_operator_float.dep
sed -f float.sed src/powerit_generic.c > build/gsrc/powerit_float.c
cpp -MM build/gsrc/powerit_float.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/powerit_float.dep : ,g' > build/gsrc/powerit_float.dep
cpp -MM build/gsrc/powerit_float.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/powerit_float.dep : ,g' >> build/gsrc/powerit_float.dep
sed -f float.sed src/polyprec_generic.c > build/gsrc/polyprec_float.c
cpp -MM build/gsrc/polyprec_float.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/polyprec_float.dep : ,g' > build/gsrc/polyprec_float.dep
cpp -MM build/gsrc/polyprec_float.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/polyprec_float.dep : ,g' >> build/gsrc/polyprec_float.dep
sed -f float.sed src/ghost_generic.c > build/gsrc/ghost_float.c
cpp -MM build/gsrc/ghost_float.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/ghost_float.dep : ,g' > build/gsrc/ghost_float.dep
cpp -MM build/gsrc/ghost_float.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/ghost_float.dep : ,g' >> build/gsrc/ghost_float.dep
sed -f float.sed src/gathering_generic.c > build/gsrc/gathering_float.c
cpp -MM build/gsrc/gathering_float.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/gathering_float.dep : ,g' > build/gsrc/gathering_float.dep
cpp -MM build/gsrc/gathering_float.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/gathering_float.dep : ,g' >> build/gsrc/gathering_float.dep
sed -f float.sed src/linsolve_generic.c > build/gsrc/linsolve_float.c
cpp -MM build/gsrc/linsolve_float.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/linsolve_float.dep : ,g' > build/gsrc/linsolve_float.dep
cpp -MM build/gsrc/linsolve_float.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/linsolve_float.dep : ,g' >> build/gsrc/linsolve_float.dep
cp src/linsolve.c build/gsrc/linsolve.c
cpp -MM build/gsrc/linsolve.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/linsolve.dep : ,g' > build/gsrc/linsolve.dep
cpp -MM build/gsrc/linsolve.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/linsolve.dep : ,g' >> build/gsrc/linsolve.dep
cp src/data_layout.c build/gsrc/data_layout.c
cpp -MM build/gsrc/data_layout.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/data_layout.dep : ,g' > build/gsrc/data_layout.dep
cpp -MM build/gsrc/data_layout.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/data_layout.dep : ,g' >> build/gsrc/data_layout.dep
cp src/var_table.c build/gsrc/var_table.c
cpp -MM build/gsrc/var_table.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/var_table.dep : ,g' > build/gsrc/var_table.dep
cpp -MM build/gsrc/var_table.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/var_table.dep : ,g' >> build/gsrc/var_table.dep
cp src/sse_linalg.c build/gsrc/sse_linalg.c
cpp -MM build/gsrc/sse_linalg.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/sse_linalg.dep : ,g' > build/gsrc/sse_linalg.dep
cpp -MM build/gsrc/sse_linalg.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/sse_linalg.dep : ,g' >> build/gsrc/sse_linalg.dep
cp src/main.c build/gsrc/main.c
cpp -MM build/gsrc/main.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/main.dep : ,g' > build/gsrc/main.dep
cpp -MM build/gsrc/main.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/main.dep : ,g' >> build/gsrc/main.dep
cp src/threading.c build/gsrc/threading.c
cpp -MM build/gsrc/threading.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/threading.dep : ,g' > build/gsrc/threading.dep
cpp -MM build/gsrc/threading.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/threading.dep : ,g' >> build/gsrc/threading.dep
cp src/preconditioner.c build/gsrc/preconditioner.c
cpp -MM build/gsrc/preconditioner.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/preconditioner.dep : ,g' > build/gsrc/preconditioner.dep
cpp -MM build/gsrc/preconditioner.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/preconditioner.dep : ,g' >> build/gsrc/preconditioner.dep
cp src/DDalphaAMG_interface.c build/gsrc/DDalphaAMG_interface.c
cpp -MM build/gsrc/DDalphaAMG_interface.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/DDalphaAMG_interface.dep : ,g' > build/gsrc/DDalphaAMG_interface.dep
cpp -MM build/gsrc/DDalphaAMG_interface.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/DDalphaAMG_interface.dep : ,g' >> build/gsrc/DDalphaAMG_interface.dep
cp src/linalg.c build/gsrc/linalg.c
cpp -MM build/gsrc/linalg.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/linalg.dep : ,g' > build/gsrc/linalg.dep
cpp -MM build/gsrc/linalg.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/linalg.dep : ,g' >> build/gsrc/linalg.dep
cp src/top_level.c build/gsrc/top_level.c
cpp -MM build/gsrc/top_level.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/top_level.dep : ,g' > build/gsrc/top_level.dep
cpp -MM build/gsrc/top_level.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/top_level.dep : ,g' >> build/gsrc/top_level.dep
cp src/sse_dirac.c build/gsrc/sse_dirac.c
cpp -MM build/gsrc/sse_dirac.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/sse_dirac.dep : ,g' > build/gsrc/sse_dirac.dep
cpp -MM build/gsrc/sse_dirac.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/sse_dirac.dep : ,g' >> build/gsrc/sse_dirac.dep
cp src/io.c build/gsrc/io.c
cpp -MM build/gsrc/io.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/io.dep : ,g' > build/gsrc/io.dep
cpp -MM build/gsrc/io.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/io.dep : ,g' >> build/gsrc/io.dep
cp src/solver_analysis.c build/gsrc/solver_analysis.c
cpp -MM build/gsrc/solver_analysis.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/solver_analysis.dep : ,g' > build/gsrc/solver_analysis.dep
cpp -MM build/gsrc/solver_analysis.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/solver_analysis.dep : ,g' >> build/gsrc/solver_analysis.dep
cp src/init.c build/gsrc/init.c
cpp -MM build/gsrc/init.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/init.dep : ,g' > build/gsrc/init.dep
cpp -MM build/gsrc/init.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/init.dep : ,g' >> build/gsrc/init.dep
cp src/dirac.c build/gsrc/dirac.c
cpp -MM build/gsrc/dirac.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/dirac.dep : ,g' > build/gsrc/dirac.dep
cpp -MM build/gsrc/dirac.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/dirac.dep : ,g' >> build/gsrc/dirac.dep
cp src/lime_io.c build/gsrc/lime_io.c
cpp -MM build/gsrc/lime_io.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/lime_io.dep : ,g' > build/gsrc/lime_io.dep
cpp -MM build/gsrc/lime_io.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/lime_io.dep : ,g' >> build/gsrc/lime_io.dep
cp src/ghost.c build/gsrc/ghost.c
cpp -MM build/gsrc/ghost.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/ghost.dep : ,g' > build/gsrc/ghost.dep
cpp -MM build/gsrc/ghost.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/ghost.dep : ,g' >> build/gsrc/ghost.dep
rm -f build/*.o
rm -f build/gsrc/*
sed -f double.sed src/operator_generic.c > build/gsrc/operator_double.c
cp src/dirac.h build/gsrc/dirac.h
cp src/sse_float_intrinsic.h build/gsrc/sse_float_intrinsic.h
cp src/sse_double_intrinsic.h build/gsrc/sse_double_intrinsic.h
cp src/blas_vectorized.h build/gsrc/blas_vectorized.h
cp src/DDalphaAMG.h build/gsrc/DDalphaAMG.h
cp src/io.h build/gsrc/io.h
cp src/sse_complex_float_intrinsic.h build/gsrc/sse_complex_float_intrinsic.h
cp src/top_level.h build/gsrc/top_level.h
cp src/sse_complex_double_intrinsic.h build/gsrc/sse_complex_double_intrinsic.h
cp src/sse_blas_vectorized.h build/gsrc/sse_blas_vectorized.h
cp src/main.h build/gsrc/main.h
cp src/sse_linalg.h build/gsrc/sse_linalg.h
cp src/init.h build/gsrc/init.h
cp src/solver_analysis.h build/gsrc/solver_analysis.h
cp src/var_table.h build/gsrc/var_table.h
cp src/data_layout.h build/gsrc/data_layout.h
cp src/sse_coarse_operator.h build/gsrc/sse_coarse_operator.h
cp src/vectorization_control.h build/gsrc/vectorization_control.h
cp src/linalg.h build/gsrc/linalg.h
cp src/sse_dirac_su3local.h build/gsrc/sse_dirac_su3local.h
cp src/linsolve.h build/gsrc/linsolve.h
cp src/ghost.h build/gsrc/ghost.h
cp src/sse_dirac.h build/gsrc/sse_dirac.h
cp src/threading.h build/gsrc/threading.h
cp src/lime_io.h build/gsrc/lime_io.h
cp src/preconditioner.h build/gsrc/preconditioner.h
cp src/clifford.h build/gsrc/clifford.h
sed -f float.sed src/sse_interpolation_generic.h > build/gsrc/sse_interpolation_float.h
sed -f float.sed src/main_post_def_generic.h > build/gsrc/main_post_def_float.h
sed -f float.sed src/block_jacobi_generic.h > build/gsrc/block_jacobi_float.h
sed -f float.sed src/coarse_operator_generic.h > build/gsrc/coarse_operator_float.h
sed -f float.sed src/coarse_oddeven_generic.h > build/gsrc/coarse_oddeven_float.h
sed -f float.sed src/vcycle_generic.h > build/gsrc/vcycle_float.h
sed -f float.sed src/gathering_generic.h > build/gsrc/gathering_float.h
sed -f float.sed src/main_pre_def_generic.h > build/gsrc/main_pre_def_float.h
sed -f float.sed src/vectorization_dirac_generic.h > build/gsrc/vectorization_dirac_float.h
sed -f float.sed src/oddeven_generic.h > build/gsrc/oddeven_float.h
sed -f float.sed src/powerit_generic.h > build/gsrc/powerit_float.h
sed -f float.sed src/hutchinson_generic.h > build/gsrc/hutchinson_float.h
sed -f float.sed src/dirac_generic.h > build/gsrc/dirac_float.h
sed -f float.sed src/linalg_generic.h > build/gsrc/linalg_float.h
sed -f float.sed src/sse_linalg_generic.h > build/gsrc/sse_linalg_float.h
sed -f float.sed src/coarsening_generic.h > build/gsrc/coarsening_float.h
sed -f float.sed src/interpolation_generic.h > build/gsrc/interpolation_float.h
sed -f float.sed src/gcrodr_generic.h > build/gsrc/gcrodr_float.h
sed -f float.sed src/lapackwrap_generic.h > build/gsrc/lapackwrap_float.h
sed -f float.sed src/data_generic.h > build/gsrc/data_float.h
sed -f float.sed src/local_polyprec_generic.h > build/gsrc/local_polyprec_float.h
sed -f float.sed src/sse_coarse_operator_generic.h > build/gsrc/sse_coarse_operator_float.h
sed -f float.sed src/schwarz_generic.h > build/gsrc/schwarz_float.h
sed -f float.sed src/init_generic.h > build/gsrc/init_float.h
sed -f float.sed src/linsolve_generic.h > build/gsrc/linsolve_float.h
sed -f float.sed src/operator_generic.h > build/gsrc/operator_float.h
sed -f float.sed src/ghost_generic.h > build/gsrc/ghost_float.h
sed -f float.sed src/setup_generic.h > build/gsrc/setup_float.h
sed -f float.sed src/polyprec_generic.h > build/gsrc/polyprec_float.h
sed -f double.sed src/sse_interpolation_generic.h > build/gsrc/sse_interpolation_double.h
sed -f double.sed src/main_post_def_generic.h > build/gsrc/main_post_def_double.h
sed -f double.sed src/block_jacobi_generic.h > build/gsrc/block_jacobi_double.h
sed -f double.sed src/coarse_operator_generic.h > build/gsrc/coarse_operator_double.h
sed -f double.sed src/coarse_oddeven_generic.h > build/gsrc/coarse_oddeven_double.h
sed -f double.sed src/vcycle_generic.h > build/gsrc/vcycle_double.h
sed -f double.sed src/gathering_generic.h > build/gsrc/gathering_double.h
sed -f double.sed src/main_pre_def_generic.h > build/gsrc/main_pre_def_double.h
sed -f double.sed src/vectorization_dirac_generic.h > build/gsrc/vectorization_dirac_double.h
sed -f double.sed src/oddeven_generic.h > build/gsrc/oddeven_double.h
sed -f double.sed src/powerit_generic.h > build/gsrc/powerit_double.h
sed -f double.sed src/hutchinson_generic.h > build/gsrc/hutchinson_double.h
sed -f double.sed src/dirac_generic.h > build/gsrc/dirac_double.h
sed -f double.sed src/linalg_generic.h > build/gsrc/linalg_double.h
sed -f double.sed src/sse_linalg_generic.h > build/gsrc/sse_linalg_double.h
sed -f double.sed src/coarsening_generic.h > build/gsrc/coarsening_double.h
sed -f double.sed src/interpolation_generic.h > build/gsrc/interpolation_double.h
sed -f double.sed src/gcrodr_generic.h > build/gsrc/gcrodr_double.h
sed -f double.sed src/lapackwrap_generic.h > build/gsrc/lapackwrap_double.h
sed -f double.sed src/data_generic.h > build/gsrc/data_double.h
sed -f double.sed src/local_polyprec_generic.h > build/gsrc/local_polyprec_double.h
sed -f double.sed src/sse_coarse_operator_generic.h > build/gsrc/sse_coarse_operator_double.h
sed -f double.sed src/schwarz_generic.h > build/gsrc/schwarz_double.h
sed -f double.sed src/init_generic.h > build/gsrc/init_double.h
sed -f double.sed src/linsolve_generic.h > build/gsrc/linsolve_double.h
sed -f double.sed src/operator_generic.h > build/gsrc/operator_double.h
sed -f double.sed src/ghost_generic.h > build/gsrc/ghost_double.h
sed -f double.sed src/setup_generic.h > build/gsrc/setup_double.h
sed -f double.sed src/polyprec_generic.h > build/gsrc/polyprec_double.h
sed -f double.sed src/local_polyprec_generic.c > build/gsrc/local_polyprec_double.c
sed -f double.sed src/data_generic.c > build/gsrc/data_double.c
sed -f double.sed src/lapackwrap_generic.c > build/gsrc/lapackwrap_double.c
sed -f double.sed src/gcrodr_generic.c > build/gsrc/gcrodr_double.c
sed -f double.sed src/sse_interpolation_generic.c > build/gsrc/sse_interpolation_double.c
sed -f double.sed src/interpolation_generic.c > build/gsrc/interpolation_double.c
sed -f double.sed src/coarsening_generic.c > build/gsrc/coarsening_double.c
sed -f double.sed src/sse_linalg_generic.c > build/gsrc/sse_linalg_double.c
sed -f double.sed src/linalg_generic.c > build/gsrc/linalg_double.c
sed -f double.sed src/hutchinson_generic.c > build/gsrc/hutchinson_double.c
sed -f double.sed src/vectorization_dirac_generic.c > build/gsrc/vectorization_dirac_double.c
sed -f double.sed src/init_generic.c > build/gsrc/init_double.c
sed -f double.sed src/oddeven_generic.c > build/gsrc/oddeven_double.c
sed -f double.sed src/vcycle_generic.c > build/gsrc/vcycle_double.c
sed -f double.sed src/coarse_oddeven_generic.c > build/gsrc/coarse_oddeven_double.c
sed -f double.sed src/coarse_operator_generic.c > build/gsrc/coarse_operator_double.c
sed -f double.sed src/setup_generic.c > build/gsrc/setup_double.c
sed -f double.sed src/schwarz_generic.c > build/gsrc/schwarz_double.c
sed -f double.sed src/block_jacobi_generic.c > build/gsrc/block_jacobi_double.c
sed -f double.sed src/dirac_generic.c > build/gsrc/dirac_double.c
sed -f double.sed src/sse_coarse_operator_generic.c > build/gsrc/sse_coarse_operator_double.c
sed -f double.sed src/powerit_generic.c > build/gsrc/powerit_double.c
sed -f double.sed src/polyprec_generic.c > build/gsrc/polyprec_double.c
sed -f double.sed src/ghost_generic.c > build/gsrc/ghost_double.c
sed -f double.sed src/gathering_generic.c > build/gsrc/gathering_double.c
sed -f double.sed src/linsolve_generic.c > build/gsrc/linsolve_double.c
sed -f float.sed src/operator_generic.c > build/gsrc/operator_float.c
sed -f float.sed src/local_polyprec_generic.c > build/gsrc/local_polyprec_float.c
sed -f float.sed src/data_generic.c > build/gsrc/data_float.c
sed -f float.sed src/lapackwrap_generic.c > build/gsrc/lapackwrap_float.c
sed -f float.sed src/gcrodr_generic.c > build/gsrc/gcrodr_float.c
sed -f float.sed src/sse_interpolation_generic.c > build/gsrc/sse_interpolation_float.c
sed -f float.sed src/interpolation_generic.c > build/gsrc/interpolation_float.c
sed -f float.sed src/coarsening_generic.c > build/gsrc/coarsening_float.c
sed -f float.sed src/sse_linalg_generic.c > build/gsrc/sse_linalg_float.c
sed -f float.sed src/linalg_generic.c > build/gsrc/linalg_float.c
sed -f float.sed src/hutchinson_generic.c > build/gsrc/hutchinson_float.c
sed -f float.sed src/vectorization_dirac_generic.c > build/gsrc/vectorization_dirac_float.c
sed -f float.sed src/init_generic.c > build/gsrc/init_float.c
sed -f float.sed src/oddeven_generic.c > build/gsrc/oddeven_float.c
sed -f float.sed src/vcycle_generic.c > build/gsrc/vcycle_float.c
sed -f float.sed src/coarse_oddeven_generic.c > build/gsrc/coarse_oddeven_float.c
sed -f float.sed src/coarse_operator_generic.c > build/gsrc/coarse_operator_float.c
sed -f float.sed src/setup_generic.c > build/gsrc/setup_float.c
sed -f float.sed src/schwarz_generic.c > build/gsrc/schwarz_float.c
sed -f float.sed src/block_jacobi_generic.c > build/gsrc/block_jacobi_float.c
sed -f float.sed src/dirac_generic.c > build/gsrc/dirac_float.c
sed -f float.sed src/sse_coarse_operator_generic.c > build/gsrc/sse_coarse_operator_float.c
sed -f float.sed src/powerit_generic.c > build/gsrc/powerit_float.c
sed -f float.sed src/polyprec_generic.c > build/gsrc/polyprec_float.c
sed -f float.sed src/ghost_generic.c > build/gsrc/ghost_float.c
sed -f float.sed src/gathering_generic.c > build/gsrc/gathering_float.c
sed -f float.sed src/linsolve_generic.c > build/gsrc/linsolve_float.c
cp src/linsolve.c build/gsrc/linsolve.c
cp src/data_layout.c build/gsrc/data_layout.c
cp src/var_table.c build/gsrc/var_table.c
cp src/sse_linalg.c build/gsrc/sse_linalg.c
cp src/main.c build/gsrc/main.c
cp src/threading.c build/gsrc/threading.c
cp src/preconditioner.c build/gsrc/preconditioner.c
cp src/DDalphaAMG_interface.c build/gsrc/DDalphaAMG_interface.c
cp src/linalg.c build/gsrc/linalg.c
cp src/top_level.c build/gsrc/top_level.c
cp src/sse_dirac.c build/gsrc/sse_dirac.c
cp src/io.c build/gsrc/io.c
cp src/solver_analysis.c build/gsrc/solver_analysis.c
cp src/init.c build/gsrc/init.c
cp src/dirac.c build/gsrc/dirac.c
cp src/lime_io.c build/gsrc/lime_io.c
cp src/ghost.c build/gsrc/ghost.c
cpp -MM build/gsrc/operator_double.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/operator_double.dep : ,g' > build/gsrc/operator_double.dep
cpp -MM build/gsrc/local_polyprec_double.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/local_polyprec_double.dep : ,g' > build/gsrc/local_polyprec_double.dep
cpp -MM build/gsrc/data_double.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/data_double.dep : ,g' > build/gsrc/data_double.dep
cpp -MM build/gsrc/lapackwrap_double.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/lapackwrap_double.dep : ,g' > build/gsrc/lapackwrap_double.dep
cpp -MM build/gsrc/gcrodr_double.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/gcrodr_double.dep : ,g' > build/gsrc/gcrodr_double.dep
cpp -MM build/gsrc/sse_interpolation_double.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/sse_interpolation_double.dep : ,g' > build/gsrc/sse_interpolation_double.dep
cpp -MM build/gsrc/interpolation_double.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/interpolation_double.dep : ,g' > build/gsrc/interpolation_double.dep
cpp -MM build/gsrc/coarsening_double.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/coarsening_double.dep : ,g' > build/gsrc/coarsening_double.dep
cpp -MM build/gsrc/sse_linalg_double.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/sse_linalg_double.dep : ,g' > build/gsrc/sse_linalg_double.dep
cpp -MM build/gsrc/linalg_double.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/linalg_double.dep : ,g' > build/gsrc/linalg_double.dep
cpp -MM build/gsrc/hutchinson_double.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/hutchinson_double.dep : ,g' > build/gsrc/hutchinson_double.dep
cpp -MM build/gsrc/vectorization_dirac_double.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/vectorization_dirac_double.dep : ,g' > build/gsrc/vectorization_dirac_double.dep
cpp -MM build/gsrc/init_double.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/init_double.dep : ,g' > build/gsrc/init_double.dep
cpp -MM build/gsrc/oddeven_double.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/oddeven_double.dep : ,g' > build/gsrc/oddeven_double.dep
cpp -MM build/gsrc/vcycle_double.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/vcycle_double.dep : ,g' > build/gsrc/vcycle_double.dep
cpp -MM build/gsrc/coarse_oddeven_double.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/coarse_oddeven_double.dep : ,g' > build/gsrc/coarse_oddeven_double.dep
cpp -MM build/gsrc/coarse_operator_double.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/coarse_operator_double.dep : ,g' > build/gsrc/coarse_operator_double.dep
cpp -MM build/gsrc/setup_double.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/setup_double.dep : ,g' > build/gsrc/setup_double.dep
cpp -MM build/gsrc/schwarz_double.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/schwarz_double.dep : ,g' > build/gsrc/schwarz_double.dep
cpp -MM build/gsrc/block_jacobi_double.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/block_jacobi_double.dep : ,g' > build/gsrc/block_jacobi_double.dep
cpp -MM build/gsrc/dirac_double.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/dirac_double.dep : ,g' > build/gsrc/dirac_double.dep
cpp -MM build/gsrc/sse_coarse_operator_double.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/sse_coarse_operator_double.dep : ,g' > build/gsrc/sse_coarse_operator_double.dep
cpp -MM build/gsrc/powerit_double.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/powerit_double.dep : ,g' > build/gsrc/powerit_double.dep
cpp -MM build/gsrc/polyprec_double.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/polyprec_double.dep : ,g' > build/gsrc/polyprec_double.dep
cpp -MM build/gsrc/ghost_double.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/ghost_double.dep : ,g' > build/gsrc/ghost_double.dep
cpp -MM build/gsrc/gathering_double.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/gathering_double.dep : ,g' > build/gsrc/gathering_double.dep
cpp -MM build/gsrc/linsolve_double.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/linsolve_double.dep : ,g' > build/gsrc/linsolve_double.dep
cpp -MM build/gsrc/operator_float.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/operator_float.dep : ,g' > build/gsrc/operator_float.dep
cpp -MM build/gsrc/local_polyprec_float.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/local_polyprec_float.dep : ,g' > build/gsrc/local_polyprec_float.dep
cpp -MM build/gsrc/data_float.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/data_float.dep : ,g' > build/gsrc/data_float.dep
cpp -MM build/gsrc/lapackwrap_float.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/lapackwrap_float.dep : ,g' > build/gsrc/lapackwrap_float.dep
cpp -MM build/gsrc/gcrodr_float.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/gcrodr_float.dep : ,g' > build/gsrc/gcrodr_float.dep
cpp -MM build/gsrc/sse_interpolation_float.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/sse_interpolation_float.dep : ,g' > build/gsrc/sse_interpolation_float.dep
cpp -MM build/gsrc/interpolation_float.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/interpolation_float.dep : ,g' > build/gsrc/interpolation_float.dep
cpp -MM build/gsrc/coarsening_float.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/coarsening_float.dep : ,g' > build/gsrc/coarsening_float.dep
cpp -MM build/gsrc/sse_linalg_float.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/sse_linalg_float.dep : ,g' > build/gsrc/sse_linalg_float.dep
cpp -MM build/gsrc/linalg_float.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/linalg_float.dep : ,g' > build/gsrc/linalg_float.dep
cpp -MM build/gsrc/hutchinson_float.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/hutchinson_float.dep : ,g' > build/gsrc/hutchinson_float.dep
cpp -MM build/gsrc/vectorization_dirac_float.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/vectorization_dirac_float.dep : ,g' > build/gsrc/vectorization_dirac_float.dep
cpp -MM build/gsrc/init_float.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/init_float.dep : ,g' > build/gsrc/init_float.dep
cpp -MM build/gsrc/oddeven_float.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/oddeven_float.dep : ,g' > build/gsrc/oddeven_float.dep
cpp -MM build/gsrc/vcycle_float.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/vcycle_float.dep : ,g' > build/gsrc/vcycle_float.dep
cpp -MM build/gsrc/coarse_oddeven_float.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/coarse_oddeven_float.dep : ,g' > build/gsrc/coarse_oddeven_float.dep
cpp -MM build/gsrc/coarse_operator_float.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/coarse_operator_float.dep : ,g' > build/gsrc/coarse_operator_float.dep
cpp -MM build/gsrc/setup_float.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/setup_float.dep : ,g' > build/gsrc/setup_float.dep
cpp -MM build/gsrc/schwarz_float.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/schwarz_float.dep : ,g' > build/gsrc/schwarz_float.dep
cpp -MM build/gsrc/block_jacobi_float.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/block_jacobi_float.dep : ,g' > build/gsrc/block_jacobi_float.dep
cpp -MM build/gsrc/dirac_float.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/dirac_float.dep : ,g' > build/gsrc/dirac_float.dep
cpp -MM build/gsrc/sse_coarse_operator_float.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/sse_coarse_operator_float.dep : ,g' > build/gsrc/sse_coarse_operator_float.dep
cpp -MM build/gsrc/powerit_float.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/powerit_float.dep : ,g' > build/gsrc/powerit_float.dep
cpp -MM build/gsrc/polyprec_float.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/polyprec_float.dep : ,g' > build/gsrc/polyprec_float.dep
cpp -MM build/gsrc/ghost_float.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/ghost_float.dep : ,g' > build/gsrc/ghost_float.dep
cpp -MM build/gsrc/gathering_float.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/gathering_float.dep : ,g' > build/gsrc/gathering_float.dep
cpp -MM build/gsrc/linsolve_float.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/linsolve_float.dep : ,g' > build/gsrc/linsolve_float.dep
cpp -MM build/gsrc/linsolve.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/linsolve.dep : ,g' > build/gsrc/linsolve.dep
cpp -MM build/gsrc/data_layout.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/data_layout.dep : ,g' > build/gsrc/data_layout.dep
cpp -MM build/gsrc/var_table.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/var_table.dep : ,g' > build/gsrc/var_table.dep
cpp -MM build/gsrc/sse_linalg.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/sse_linalg.dep : ,g' > build/gsrc/sse_linalg.dep
cpp -MM build/gsrc/main.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/main.dep : ,g' > build/gsrc/main.dep
cpp -MM build/gsrc/threading.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/threading.dep : ,g' > build/gsrc/threading.dep
cpp -MM build/gsrc/preconditioner.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/preconditioner.dep : ,g' > build/gsrc/preconditioner.dep
cpp -MM build/gsrc/DDalphaAMG_interface.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/DDalphaAMG_interface.dep : ,g' > build/gsrc/DDalphaAMG_interface.dep
cpp -MM build/gsrc/linalg.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/linalg.dep : ,g' > build/gsrc/linalg.dep
cpp -MM build/gsrc/top_level.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/top_level.dep : ,g' > build/gsrc/top_level.dep
cpp -MM build/gsrc/preconditioner.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/preconditioner.dep : ,g' >> build/gsrc/preconditioner.dep
cpp -MM build/gsrc/lapackwrap_float.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/lapackwrap_float.dep : ,g' >> build/gsrc/lapackwrap_float.dep
cpp -MM build/gsrc/schwarz_double.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/schwarz_double.dep : ,g' >> build/gsrc/schwarz_double.dep
cpp -MM build/gsrc/setup_double.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/setup_double.dep : ,g' >> build/gsrc/setup_double.dep
cpp -MM build/gsrc/init_double.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/init_double.dep : ,g' >> build/gsrc/init_double.dep
cpp -MM build/gsrc/dirac_float.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/dirac_float.dep : ,g' >> build/gsrc/dirac_float.dep
cpp -MM build/gsrc/sse_interpolation_double.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/sse_interpolation_double.dep : ,g' >> build/gsrc/sse_interpolation_double.dep
cpp -MM build/gsrc/DDalphaAMG_interface.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/DDalphaAMG_interface.dep : ,g' >> build/gsrc/DDalphaAMG_interface.dep
cpp -MM build/gsrc/vcycle_float.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/vcycle_float.dep : ,g' >> build/gsrc/vcycle_float.dep
cpp -MM build/gsrc/operator_double.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/operator_double.dep : ,g' >> build/gsrc/operator_double.dep
cpp -MM build/gsrc/block_jacobi_double.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/block_jacobi_double.dep : ,g' >> build/gsrc/block_jacobi_double.dep
cpp -MM build/gsrc/lapackwrap_double.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/lapackwrap_double.dep : ,g' >> build/gsrc/lapackwrap_double.dep
cpp -MM build/gsrc/polyprec_double.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/polyprec_double.dep : ,g' >> build/gsrc/polyprec_double.dep
cpp -MM build/gsrc/data_float.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/data_float.dep : ,g' >> build/gsrc/data_float.dep
cpp -MM build/gsrc/data_layout.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/data_layout.dep : ,g' >> build/gsrc/data_layout.dep
cpp -MM build/gsrc/dirac_double.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/dirac_double.dep : ,g' >> build/gsrc/dirac_double.dep
cpp -MM build/gsrc/hutchinson_double.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/hutchinson_double.dep : ,g' >> build/gsrc/hutchinson_double.dep
cpp -MM build/gsrc/var_table.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/var_table.dep : ,g' >> build/gsrc/var_table.dep
cpp -MM build/gsrc/coarse_operator_double.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/coarse_operator_double.dep : ,g' >> build/gsrc/coarse_operator_double.dep
cpp -MM build/gsrc/gathering_float.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/gathering_float.dep : ,g' >> build/gsrc/gathering_float.dep
cpp -MM build/gsrc/top_level.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/top_level.dep : ,g' >> build/gsrc/top_level.dep
cpp -MM build/gsrc/gcrodr_float.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/gcrodr_float.dep : ,g' >> build/gsrc/gcrodr_float.dep
cpp -MM build/gsrc/local_polyprec_double.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/local_polyprec_double.dep : ,g' >> build/gsrc/local_polyprec_double.dep
cpp -MM build/gsrc/sse_coarse_operator_double.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/sse_coarse_operator_double.dep : ,g' >> build/gsrc/sse_coarse_operator_double.dep
cpp -MM build/gsrc/vcycle_double.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/vcycle_double.dep : ,g' >> build/gsrc/vcycle_double.dep
cpp -MM build/gsrc/local_polyprec_float.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/local_polyprec_float.dep : ,g' >> build/gsrc/local_polyprec_float.dep
cpp -MM build/gsrc/init_float.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/init_float.dep : ,g' >> build/gsrc/init_float.dep
cpp -MM build/gsrc/block_jacobi_float.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/block_jacobi_float.dep : ,g' >> build/gsrc/block_jacobi_float.dep
cpp -MM build/gsrc/linsolve_float.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/linsolve_float.dep : ,g' >> build/gsrc/linsolve_float.dep
cpp -MM build/gsrc/vectorization_dirac_double.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/vectorization_dirac_double.dep : ,g' >> build/gsrc/vectorization_dirac_double.dep
cpp -MM build/gsrc/oddeven_double.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/oddeven_double.dep : ,g' >> build/gsrc/oddeven_double.dep
cpp -MM build/gsrc/schwarz_float.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/schwarz_float.dep : ,g' >> build/gsrc/schwarz_float.dep
cpp -MM build/gsrc/ghost_float.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/ghost_float.dep : ,g' >> build/gsrc/ghost_float.dep
cpp -MM build/gsrc/sse_linalg_float.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/sse_linalg_float.dep : ,g' >> build/gsrc/sse_linalg_float.dep
cpp -MM build/gsrc/operator_float.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/operator_float.dep : ,g' >> build/gsrc/operator_float.dep
cpp -MM build/gsrc/vectorization_dirac_float.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/vectorization_dirac_float.dep : ,g' >> build/gsrc/vectorization_dirac_float.dep
cpp -MM build/gsrc/data_double.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/data_double.dep : ,g' >> build/gsrc/data_double.dep
cpp -MM build/gsrc/coarsening_float.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/coarsening_float.dep : ,g' >> build/gsrc/coarsening_float.dep
cpp -MM build/gsrc/sse_linalg.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/sse_linalg.dep : ,g' >> build/gsrc/sse_linalg.dep
cpp -MM build/gsrc/linalg.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/linalg.dep : ,g' >> build/gsrc/linalg.dep
cpp -MM build/gsrc/powerit_double.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/powerit_double.dep : ,g' >> build/gsrc/powerit_double.dep
cpp -MM build/gsrc/linsolve_double.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/linsolve_double.dep : ,g' >> build/gsrc/linsolve_double.dep
cpp -MM build/gsrc/powerit_float.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/powerit_float.dep : ,g' >> build/gsrc/powerit_float.dep
cpp -MM build/gsrc/ghost_double.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/ghost_double.dep : ,g' >> build/gsrc/ghost_double.dep
cpp -MM build/gsrc/interpolation_float.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/interpolation_float.dep : ,g' >> build/gsrc/interpolation_float.dep
cpp -MM build/gsrc/linalg_double.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/linalg_double.dep : ,g' >> build/gsrc/linalg_double.dep
cpp -MM build/gsrc/interpolation_double.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/interpolation_double.dep : ,g' >> build/gsrc/interpolation_double.dep
cpp -MM build/gsrc/coarse_oddeven_double.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/coarse_oddeven_double.dep : ,g' >> build/gsrc/coarse_oddeven_double.dep
cpp -MM build/gsrc/gathering_double.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/gathering_double.dep : ,g' >> build/gsrc/gathering_double.dep
cpp -MM build/gsrc/sse_interpolation_float.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/sse_interpolation_float.dep : ,g' >> build/gsrc/sse_interpolation_float.dep
cpp -MM build/gsrc/gcrodr_double.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/gcrodr_double.dep : ,g' >> build/gsrc/gcrodr_double.dep
cpp -MM build/gsrc/coarsening_double.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/coarsening_double.dep : ,g' >> build/gsrc/coarsening_double.dep
cpp -MM build/gsrc/sse_linalg_double.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/sse_linalg_double.dep : ,g' >> build/gsrc/sse_linalg_double.dep
cpp -MM build/gsrc/linalg_float.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/linalg_float.dep : ,g' >> build/gsrc/linalg_float.dep
cpp -MM build/gsrc/oddeven_float.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/oddeven_float.dep : ,g' >> build/gsrc/oddeven_float.dep
cpp -MM build/gsrc/coarse_oddeven_float.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/coarse_oddeven_float.dep : ,g' >> build/gsrc/coarse_oddeven_float.dep
cpp -MM build/gsrc/coarse_operator_float.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/coarse_operator_float.dep : ,g' >> build/gsrc/coarse_operator_float.dep
cpp -MM build/gsrc/setup_float.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/setup_float.dep : ,g' >> build/gsrc/setup_float.dep
cpp -MM build/gsrc/sse_coarse_operator_float.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/sse_coarse_operator_float.dep : ,g' >> build/gsrc/sse_coarse_operator_float.dep
cpp -MM build/gsrc/polyprec_float.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/polyprec_float.dep : ,g' >> build/gsrc/polyprec_float.dep
cpp -MM build/gsrc/linsolve.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/linsolve.dep : ,g' >> build/gsrc/linsolve.dep
cpp -MM build/gsrc/hutchinson_float.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/hutchinson_float.dep : ,g' >> build/gsrc/hutchinson_float.dep
cpp -MM build/gsrc/main.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/main.dep : ,g' >> build/gsrc/main.dep
cpp -MM build/gsrc/threading.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/threading.dep : ,g' >> build/gsrc/threading.dep
cpp -MM build/gsrc/sse_dirac.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/sse_dirac.dep : ,g' > build/gsrc/sse_dirac.dep
cpp -MM build/gsrc/io.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/io.dep : ,g' > build/gsrc/io.dep
cpp -MM build/gsrc/solver_analysis.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/solver_analysis.dep : ,g' > build/gsrc/solver_analysis.dep
cpp -MM build/gsrc/init.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/init.dep : ,g' > build/gsrc/init.dep
cpp -MM build/gsrc/dirac.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/dirac.dep : ,g' > build/gsrc/dirac.dep
cpp -MM build/gsrc/lime_io.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/lime_io.dep : ,g' > build/gsrc/lime_io.dep
cpp -MM build/gsrc/ghost.c | sed 's,\(.*\)\.o[ :]*,build/\1.o build/gsrc/ghost.dep : ,g' > build/gsrc/ghost.dep
cpp -MM build/gsrc/sse_dirac.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/sse_dirac.dep : ,g' >> build/gsrc/sse_dirac.dep
cpp -MM build/gsrc/io.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/io.dep : ,g' >> build/gsrc/io.dep
cpp -MM build/gsrc/init.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/init.dep : ,g' >> build/gsrc/init.dep
cpp -MM build/gsrc/solver_analysis.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/solver_analysis.dep : ,g' >> build/gsrc/solver_analysis.dep
cpp -MM build/gsrc/dirac.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/dirac.dep : ,g' >> build/gsrc/dirac.dep
cpp -MM build/gsrc/lime_io.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/lime_io.dep : ,g' >> build/gsrc/lime_io.dep
cpp -MM build/gsrc/ghost.c | sed 's,\(.*\)\.o[ :]*,build/\1_devel.o build/gsrc/ghost.dep : ,g' >> build/gsrc/ghost.dep
mpicc -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp    -DPARAMOUTPUT -DTRACK_RES -DPROFILING  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/ghost.c -o build/ghost.o
mpicc -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp    -DPARAMOUTPUT -DTRACK_RES -DPROFILING  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/lime_io.c -o build/lime_io.o
mpicc -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp    -DPARAMOUTPUT -DTRACK_RES -DPROFILING  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/dirac.c -o build/dirac.o
mpicc -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp    -DPARAMOUTPUT -DTRACK_RES -DPROFILING  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/init.c -o build/init.o
mpicc -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp    -DPARAMOUTPUT -DTRACK_RES -DPROFILING  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/solver_analysis.c -o build/solver_analysis.o
mpicc -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp    -DPARAMOUTPUT -DTRACK_RES -DPROFILING  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/io.c -o build/io.o
mpicc -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp    -DPARAMOUTPUT -DTRACK_RES -DPROFILING  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/sse_dirac.c -o build/sse_dirac.o
mpicc -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp    -DPARAMOUTPUT -DTRACK_RES -DPROFILING  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/top_level.c -o build/top_level.o
mpicc -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp    -DPARAMOUTPUT -DTRACK_RES -DPROFILING  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/linalg.c -o build/linalg.o
mpicc -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp    -DPARAMOUTPUT -DTRACK_RES -DPROFILING  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/DDalphaAMG_interface.c -o build/DDalphaAMG_interface.o
mpicc -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp    -DPARAMOUTPUT -DTRACK_RES -DPROFILING  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/preconditioner.c -o build/preconditioner.o
mpicc -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp    -DPARAMOUTPUT -DTRACK_RES -DPROFILING  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/threading.c -o build/threading.o
mpicc -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp    -DPARAMOUTPUT -DTRACK_RES -DPROFILING  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/main.c -o build/main.o
mpicc -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp    -DPARAMOUTPUT -DTRACK_RES -DPROFILING  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/sse_linalg.c -o build/sse_linalg.o
mpicc -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp    -DPARAMOUTPUT -DTRACK_RES -DPROFILING  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/var_table.c -o build/var_table.o
mpicc -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp    -DPARAMOUTPUT -DTRACK_RES -DPROFILING  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/data_layout.c -o build/data_layout.o
mpicc -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp    -DPARAMOUTPUT -DTRACK_RES -DPROFILING  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/linsolve.c -o build/linsolve.o
mpicc -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp    -DPARAMOUTPUT -DTRACK_RES -DPROFILING  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/linsolve_float.c -o build/linsolve_float.o
mpicc -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp    -DPARAMOUTPUT -DTRACK_RES -DPROFILING  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/gathering_float.c -o build/gathering_float.o
mpicc -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp    -DPARAMOUTPUT -DTRACK_RES -DPROFILING  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/ghost_float.c -o build/ghost_float.o
mpicc -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp    -DPARAMOUTPUT -DTRACK_RES -DPROFILING  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/polyprec_float.c -o build/polyprec_float.o
mpicc -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp    -DPARAMOUTPUT -DTRACK_RES -DPROFILING  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/powerit_float.c -o build/powerit_float.o
mpicc -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp    -DPARAMOUTPUT -DTRACK_RES -DPROFILING  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/sse_coarse_operator_float.c -o build/sse_coarse_operator_float.o
mpicc -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp    -DPARAMOUTPUT -DTRACK_RES -DPROFILING  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/dirac_float.c -o build/dirac_float.o
mpicc -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp    -DPARAMOUTPUT -DTRACK_RES -DPROFILING  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/block_jacobi_float.c -o build/block_jacobi_float.o
mpicc -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp    -DPARAMOUTPUT -DTRACK_RES -DPROFILING  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/schwarz_float.c -o build/schwarz_float.o
mpicc -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp    -DPARAMOUTPUT -DTRACK_RES -DPROFILING  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/setup_float.c -o build/setup_float.o
mpicc -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp    -DPARAMOUTPUT -DTRACK_RES -DPROFILING  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/coarse_operator_float.c -o build/coarse_operator_float.o
mpicc -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp    -DPARAMOUTPUT -DTRACK_RES -DPROFILING  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/coarse_oddeven_float.c -o build/coarse_oddeven_float.o
mpicc -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp    -DPARAMOUTPUT -DTRACK_RES -DPROFILING  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/vcycle_float.c -o build/vcycle_float.o
mpicc -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp    -DPARAMOUTPUT -DTRACK_RES -DPROFILING  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/oddeven_float.c -o build/oddeven_float.o
mpicc -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp    -DPARAMOUTPUT -DTRACK_RES -DPROFILING  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/init_float.c -o build/init_float.o
mpicc -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp    -DPARAMOUTPUT -DTRACK_RES -DPROFILING  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/vectorization_dirac_float.c -o build/vectorization_dirac_float.o
mpicc -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp    -DPARAMOUTPUT -DTRACK_RES -DPROFILING  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/hutchinson_float.c -o build/hutchinson_float.o
mpicc -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp    -DPARAMOUTPUT -DTRACK_RES -DPROFILING  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/linalg_float.c -o build/linalg_float.o
mpicc -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp    -DPARAMOUTPUT -DTRACK_RES -DPROFILING  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/sse_linalg_float.c -o build/sse_linalg_float.o
mpicc -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp    -DPARAMOUTPUT -DTRACK_RES -DPROFILING  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/coarsening_float.c -o build/coarsening_float.o
mpicc -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp    -DPARAMOUTPUT -DTRACK_RES -DPROFILING  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/interpolation_float.c -o build/interpolation_float.o
mpicc -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp    -DPARAMOUTPUT -DTRACK_RES -DPROFILING  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/sse_interpolation_float.c -o build/sse_interpolation_float.o
mpicc -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp    -DPARAMOUTPUT -DTRACK_RES -DPROFILING  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/gcrodr_float.c -o build/gcrodr_float.o
mpicc -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp    -DPARAMOUTPUT -DTRACK_RES -DPROFILING  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/lapackwrap_float.c -o build/lapackwrap_float.o
mpicc -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp    -DPARAMOUTPUT -DTRACK_RES -DPROFILING  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/data_float.c -o build/data_float.o
mpicc -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp    -DPARAMOUTPUT -DTRACK_RES -DPROFILING  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/local_polyprec_float.c -o build/local_polyprec_float.o
mpicc -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp    -DPARAMOUTPUT -DTRACK_RES -DPROFILING  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/operator_float.c -o build/operator_float.o
mpicc -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp    -DPARAMOUTPUT -DTRACK_RES -DPROFILING  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/linsolve_double.c -o build/linsolve_double.o
mpicc -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp    -DPARAMOUTPUT -DTRACK_RES -DPROFILING  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/gathering_double.c -o build/gathering_double.o
mpicc -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp    -DPARAMOUTPUT -DTRACK_RES -DPROFILING  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/ghost_double.c -o build/ghost_double.o
mpicc -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp    -DPARAMOUTPUT -DTRACK_RES -DPROFILING  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/polyprec_double.c -o build/polyprec_double.o
mpicc -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp    -DPARAMOUTPUT -DTRACK_RES -DPROFILING  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/powerit_double.c -o build/powerit_double.o
mpicc -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp    -DPARAMOUTPUT -DTRACK_RES -DPROFILING  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/sse_coarse_operator_double.c -o build/sse_coarse_operator_double.o
mpicc -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp    -DPARAMOUTPUT -DTRACK_RES -DPROFILING  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/dirac_double.c -o build/dirac_double.o
mpicc -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp    -DPARAMOUTPUT -DTRACK_RES -DPROFILING  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/block_jacobi_double.c -o build/block_jacobi_double.o
mpicc -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp    -DPARAMOUTPUT -DTRACK_RES -DPROFILING  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/schwarz_double.c -o build/schwarz_double.o
mpicc -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp    -DPARAMOUTPUT -DTRACK_RES -DPROFILING  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/setup_double.c -o build/setup_double.o
mpicc -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp    -DPARAMOUTPUT -DTRACK_RES -DPROFILING  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/coarse_operator_double.c -o build/coarse_operator_double.o
mpicc -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp    -DPARAMOUTPUT -DTRACK_RES -DPROFILING  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/coarse_oddeven_double.c -o build/coarse_oddeven_double.o
mpicc -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp    -DPARAMOUTPUT -DTRACK_RES -DPROFILING  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/vcycle_double.c -o build/vcycle_double.o
mpicc -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp    -DPARAMOUTPUT -DTRACK_RES -DPROFILING  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/oddeven_double.c -o build/oddeven_double.o
mpicc -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp    -DPARAMOUTPUT -DTRACK_RES -DPROFILING  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/init_double.c -o build/init_double.o
mpicc -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp    -DPARAMOUTPUT -DTRACK_RES -DPROFILING  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/vectorization_dirac_double.c -o build/vectorization_dirac_double.o
mpicc -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp    -DPARAMOUTPUT -DTRACK_RES -DPROFILING  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/hutchinson_double.c -o build/hutchinson_double.o
mpicc -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp    -DPARAMOUTPUT -DTRACK_RES -DPROFILING  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/linalg_double.c -o build/linalg_double.o
mpicc -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp    -DPARAMOUTPUT -DTRACK_RES -DPROFILING  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/sse_linalg_double.c -o build/sse_linalg_double.o
mpicc -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp    -DPARAMOUTPUT -DTRACK_RES -DPROFILING  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/coarsening_double.c -o build/coarsening_double.o
mpicc -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp    -DPARAMOUTPUT -DTRACK_RES -DPROFILING  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/interpolation_double.c -o build/interpolation_double.o
mpicc -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp    -DPARAMOUTPUT -DTRACK_RES -DPROFILING  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/sse_interpolation_double.c -o build/sse_interpolation_double.o
mpicc -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp    -DPARAMOUTPUT -DTRACK_RES -DPROFILING  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/gcrodr_double.c -o build/gcrodr_double.o
mpicc -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp    -DPARAMOUTPUT -DTRACK_RES -DPROFILING  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/lapackwrap_double.c -o build/lapackwrap_double.o
mpicc -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp    -DPARAMOUTPUT -DTRACK_RES -DPROFILING  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/data_double.c -o build/data_double.o
mpicc -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp    -DPARAMOUTPUT -DTRACK_RES -DPROFILING  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/local_polyprec_double.c -o build/local_polyprec_double.o
mpicc -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp    -DPARAMOUTPUT -DTRACK_RES -DPROFILING  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/operator_double.c -o build/operator_double.o
mpicc -g -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp   -DDEBUG -DPARAMOUTPUT -DTRACK_RES -DFGMRES_RESTEST -DPROFILING -DCOARSE_RES -DSCHWARZ_RES -DTESTVECTOR_ANALYSIS  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/ghost.c -o build/ghost_devel.o
mpicc -g -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp   -DDEBUG -DPARAMOUTPUT -DTRACK_RES -DFGMRES_RESTEST -DPROFILING -DCOARSE_RES -DSCHWARZ_RES -DTESTVECTOR_ANALYSIS  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/lime_io.c -o build/lime_io_devel.o
mpicc -g -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp   -DDEBUG -DPARAMOUTPUT -DTRACK_RES -DFGMRES_RESTEST -DPROFILING -DCOARSE_RES -DSCHWARZ_RES -DTESTVECTOR_ANALYSIS  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/dirac.c -o build/dirac_devel.o
mpicc -g -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp   -DDEBUG -DPARAMOUTPUT -DTRACK_RES -DFGMRES_RESTEST -DPROFILING -DCOARSE_RES -DSCHWARZ_RES -DTESTVECTOR_ANALYSIS  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/init.c -o build/init_devel.o
mpicc -g -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp   -DDEBUG -DPARAMOUTPUT -DTRACK_RES -DFGMRES_RESTEST -DPROFILING -DCOARSE_RES -DSCHWARZ_RES -DTESTVECTOR_ANALYSIS  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/solver_analysis.c -o build/solver_analysis_devel.o
mpicc -g -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp   -DDEBUG -DPARAMOUTPUT -DTRACK_RES -DFGMRES_RESTEST -DPROFILING -DCOARSE_RES -DSCHWARZ_RES -DTESTVECTOR_ANALYSIS  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/io.c -o build/io_devel.o
mpicc -g -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp   -DDEBUG -DPARAMOUTPUT -DTRACK_RES -DFGMRES_RESTEST -DPROFILING -DCOARSE_RES -DSCHWARZ_RES -DTESTVECTOR_ANALYSIS  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/sse_dirac.c -o build/sse_dirac_devel.o
mpicc -g -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp   -DDEBUG -DPARAMOUTPUT -DTRACK_RES -DFGMRES_RESTEST -DPROFILING -DCOARSE_RES -DSCHWARZ_RES -DTESTVECTOR_ANALYSIS  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/top_level.c -o build/top_level_devel.o
mpicc -g -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp   -DDEBUG -DPARAMOUTPUT -DTRACK_RES -DFGMRES_RESTEST -DPROFILING -DCOARSE_RES -DSCHWARZ_RES -DTESTVECTOR_ANALYSIS  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/linalg.c -o build/linalg_devel.o
mpicc -g -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp   -DDEBUG -DPARAMOUTPUT -DTRACK_RES -DFGMRES_RESTEST -DPROFILING -DCOARSE_RES -DSCHWARZ_RES -DTESTVECTOR_ANALYSIS  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/DDalphaAMG_interface.c -o build/DDalphaAMG_interface_devel.o
mpicc -g -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp   -DDEBUG -DPARAMOUTPUT -DTRACK_RES -DFGMRES_RESTEST -DPROFILING -DCOARSE_RES -DSCHWARZ_RES -DTESTVECTOR_ANALYSIS  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/preconditioner.c -o build/preconditioner_devel.o
mpicc -g -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp   -DDEBUG -DPARAMOUTPUT -DTRACK_RES -DFGMRES_RESTEST -DPROFILING -DCOARSE_RES -DSCHWARZ_RES -DTESTVECTOR_ANALYSIS  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/threading.c -o build/threading_devel.o
mpicc -g -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp   -DDEBUG -DPARAMOUTPUT -DTRACK_RES -DFGMRES_RESTEST -DPROFILING -DCOARSE_RES -DSCHWARZ_RES -DTESTVECTOR_ANALYSIS  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/main.c -o build/main_devel.o
mpicc -g -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp   -DDEBUG -DPARAMOUTPUT -DTRACK_RES -DFGMRES_RESTEST -DPROFILING -DCOARSE_RES -DSCHWARZ_RES -DTESTVECTOR_ANALYSIS  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/sse_linalg.c -o build/sse_linalg_devel.o
mpicc -g -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp   -DDEBUG -DPARAMOUTPUT -DTRACK_RES -DFGMRES_RESTEST -DPROFILING -DCOARSE_RES -DSCHWARZ_RES -DTESTVECTOR_ANALYSIS  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/var_table.c -o build/var_table_devel.o
mpicc -g -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp   -DDEBUG -DPARAMOUTPUT -DTRACK_RES -DFGMRES_RESTEST -DPROFILING -DCOARSE_RES -DSCHWARZ_RES -DTESTVECTOR_ANALYSIS  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/data_layout.c -o build/data_layout_devel.o
mpicc -g -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp   -DDEBUG -DPARAMOUTPUT -DTRACK_RES -DFGMRES_RESTEST -DPROFILING -DCOARSE_RES -DSCHWARZ_RES -DTESTVECTOR_ANALYSIS  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/linsolve.c -o build/linsolve_devel.o
mpicc -g -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp   -DDEBUG -DPARAMOUTPUT -DTRACK_RES -DFGMRES_RESTEST -DPROFILING -DCOARSE_RES -DSCHWARZ_RES -DTESTVECTOR_ANALYSIS  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/linsolve_float.c -o build/linsolve_float_devel.o
mpicc -g -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp   -DDEBUG -DPARAMOUTPUT -DTRACK_RES -DFGMRES_RESTEST -DPROFILING -DCOARSE_RES -DSCHWARZ_RES -DTESTVECTOR_ANALYSIS  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/gathering_float.c -o build/gathering_float_devel.o
mpicc -g -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp   -DDEBUG -DPARAMOUTPUT -DTRACK_RES -DFGMRES_RESTEST -DPROFILING -DCOARSE_RES -DSCHWARZ_RES -DTESTVECTOR_ANALYSIS  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/ghost_float.c -o build/ghost_float_devel.o
mpicc -g -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp   -DDEBUG -DPARAMOUTPUT -DTRACK_RES -DFGMRES_RESTEST -DPROFILING -DCOARSE_RES -DSCHWARZ_RES -DTESTVECTOR_ANALYSIS  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/polyprec_float.c -o build/polyprec_float_devel.o
mpicc -g -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp   -DDEBUG -DPARAMOUTPUT -DTRACK_RES -DFGMRES_RESTEST -DPROFILING -DCOARSE_RES -DSCHWARZ_RES -DTESTVECTOR_ANALYSIS  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/powerit_float.c -o build/powerit_float_devel.o
mpicc -g -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp   -DDEBUG -DPARAMOUTPUT -DTRACK_RES -DFGMRES_RESTEST -DPROFILING -DCOARSE_RES -DSCHWARZ_RES -DTESTVECTOR_ANALYSIS  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/sse_coarse_operator_float.c -o build/sse_coarse_operator_float_devel.o
mpicc -g -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp   -DDEBUG -DPARAMOUTPUT -DTRACK_RES -DFGMRES_RESTEST -DPROFILING -DCOARSE_RES -DSCHWARZ_RES -DTESTVECTOR_ANALYSIS  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/dirac_float.c -o build/dirac_float_devel.o
mpicc -g -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp   -DDEBUG -DPARAMOUTPUT -DTRACK_RES -DFGMRES_RESTEST -DPROFILING -DCOARSE_RES -DSCHWARZ_RES -DTESTVECTOR_ANALYSIS  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/block_jacobi_float.c -o build/block_jacobi_float_devel.o
mpicc -g -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp   -DDEBUG -DPARAMOUTPUT -DTRACK_RES -DFGMRES_RESTEST -DPROFILING -DCOARSE_RES -DSCHWARZ_RES -DTESTVECTOR_ANALYSIS  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/schwarz_float.c -o build/schwarz_float_devel.o
mpicc -g -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp   -DDEBUG -DPARAMOUTPUT -DTRACK_RES -DFGMRES_RESTEST -DPROFILING -DCOARSE_RES -DSCHWARZ_RES -DTESTVECTOR_ANALYSIS  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/setup_float.c -o build/setup_float_devel.o
mpicc -g -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp   -DDEBUG -DPARAMOUTPUT -DTRACK_RES -DFGMRES_RESTEST -DPROFILING -DCOARSE_RES -DSCHWARZ_RES -DTESTVECTOR_ANALYSIS  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/coarse_operator_float.c -o build/coarse_operator_float_devel.o
mpicc -g -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp   -DDEBUG -DPARAMOUTPUT -DTRACK_RES -DFGMRES_RESTEST -DPROFILING -DCOARSE_RES -DSCHWARZ_RES -DTESTVECTOR_ANALYSIS  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/coarse_oddeven_float.c -o build/coarse_oddeven_float_devel.o
mpicc -g -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp   -DDEBUG -DPARAMOUTPUT -DTRACK_RES -DFGMRES_RESTEST -DPROFILING -DCOARSE_RES -DSCHWARZ_RES -DTESTVECTOR_ANALYSIS  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/vcycle_float.c -o build/vcycle_float_devel.o
mpicc -g -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp   -DDEBUG -DPARAMOUTPUT -DTRACK_RES -DFGMRES_RESTEST -DPROFILING -DCOARSE_RES -DSCHWARZ_RES -DTESTVECTOR_ANALYSIS  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/oddeven_float.c -o build/oddeven_float_devel.o
mpicc -g -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp   -DDEBUG -DPARAMOUTPUT -DTRACK_RES -DFGMRES_RESTEST -DPROFILING -DCOARSE_RES -DSCHWARZ_RES -DTESTVECTOR_ANALYSIS  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/init_float.c -o build/init_float_devel.o
mpicc -g -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp   -DDEBUG -DPARAMOUTPUT -DTRACK_RES -DFGMRES_RESTEST -DPROFILING -DCOARSE_RES -DSCHWARZ_RES -DTESTVECTOR_ANALYSIS  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/vectorization_dirac_float.c -o build/vectorization_dirac_float_devel.o
mpicc -g -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp   -DDEBUG -DPARAMOUTPUT -DTRACK_RES -DFGMRES_RESTEST -DPROFILING -DCOARSE_RES -DSCHWARZ_RES -DTESTVECTOR_ANALYSIS  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/hutchinson_float.c -o build/hutchinson_float_devel.o
mpicc -g -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp   -DDEBUG -DPARAMOUTPUT -DTRACK_RES -DFGMRES_RESTEST -DPROFILING -DCOARSE_RES -DSCHWARZ_RES -DTESTVECTOR_ANALYSIS  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/linalg_float.c -o build/linalg_float_devel.o
mpicc -g -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp   -DDEBUG -DPARAMOUTPUT -DTRACK_RES -DFGMRES_RESTEST -DPROFILING -DCOARSE_RES -DSCHWARZ_RES -DTESTVECTOR_ANALYSIS  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/sse_linalg_float.c -o build/sse_linalg_float_devel.o
mpicc -g -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp   -DDEBUG -DPARAMOUTPUT -DTRACK_RES -DFGMRES_RESTEST -DPROFILING -DCOARSE_RES -DSCHWARZ_RES -DTESTVECTOR_ANALYSIS  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/coarsening_float.c -o build/coarsening_float_devel.o
mpicc -g -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp   -DDEBUG -DPARAMOUTPUT -DTRACK_RES -DFGMRES_RESTEST -DPROFILING -DCOARSE_RES -DSCHWARZ_RES -DTESTVECTOR_ANALYSIS  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/interpolation_float.c -o build/interpolation_float_devel.o
mpicc -g -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp   -DDEBUG -DPARAMOUTPUT -DTRACK_RES -DFGMRES_RESTEST -DPROFILING -DCOARSE_RES -DSCHWARZ_RES -DTESTVECTOR_ANALYSIS  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/sse_interpolation_float.c -o build/sse_interpolation_float_devel.o
mpicc -g -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp   -DDEBUG -DPARAMOUTPUT -DTRACK_RES -DFGMRES_RESTEST -DPROFILING -DCOARSE_RES -DSCHWARZ_RES -DTESTVECTOR_ANALYSIS  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/gcrodr_float.c -o build/gcrodr_float_devel.o
mpicc -g -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp   -DDEBUG -DPARAMOUTPUT -DTRACK_RES -DFGMRES_RESTEST -DPROFILING -DCOARSE_RES -DSCHWARZ_RES -DTESTVECTOR_ANALYSIS  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/lapackwrap_float.c -o build/lapackwrap_float_devel.o
mpicc -g -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp   -DDEBUG -DPARAMOUTPUT -DTRACK_RES -DFGMRES_RESTEST -DPROFILING -DCOARSE_RES -DSCHWARZ_RES -DTESTVECTOR_ANALYSIS  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/data_float.c -o build/data_float_devel.o
mpicc -g -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp   -DDEBUG -DPARAMOUTPUT -DTRACK_RES -DFGMRES_RESTEST -DPROFILING -DCOARSE_RES -DSCHWARZ_RES -DTESTVECTOR_ANALYSIS  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/local_polyprec_float.c -o build/local_polyprec_float_devel.o
mpicc -g -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp   -DDEBUG -DPARAMOUTPUT -DTRACK_RES -DFGMRES_RESTEST -DPROFILING -DCOARSE_RES -DSCHWARZ_RES -DTESTVECTOR_ANALYSIS  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/operator_float.c -o build/operator_float_devel.o
mpicc -g -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp   -DDEBUG -DPARAMOUTPUT -DTRACK_RES -DFGMRES_RESTEST -DPROFILING -DCOARSE_RES -DSCHWARZ_RES -DTESTVECTOR_ANALYSIS  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/linsolve_double.c -o build/linsolve_double_devel.o
mpicc -g -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp   -DDEBUG -DPARAMOUTPUT -DTRACK_RES -DFGMRES_RESTEST -DPROFILING -DCOARSE_RES -DSCHWARZ_RES -DTESTVECTOR_ANALYSIS  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/gathering_double.c -o build/gathering_double_devel.o
mpicc -g -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp   -DDEBUG -DPARAMOUTPUT -DTRACK_RES -DFGMRES_RESTEST -DPROFILING -DCOARSE_RES -DSCHWARZ_RES -DTESTVECTOR_ANALYSIS  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/ghost_double.c -o build/ghost_double_devel.o
mpicc -g -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp   -DDEBUG -DPARAMOUTPUT -DTRACK_RES -DFGMRES_RESTEST -DPROFILING -DCOARSE_RES -DSCHWARZ_RES -DTESTVECTOR_ANALYSIS  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/polyprec_double.c -o build/polyprec_double_devel.o
mpicc -g -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp   -DDEBUG -DPARAMOUTPUT -DTRACK_RES -DFGMRES_RESTEST -DPROFILING -DCOARSE_RES -DSCHWARZ_RES -DTESTVECTOR_ANALYSIS  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/powerit_double.c -o build/powerit_double_devel.o
mpicc -g -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp   -DDEBUG -DPARAMOUTPUT -DTRACK_RES -DFGMRES_RESTEST -DPROFILING -DCOARSE_RES -DSCHWARZ_RES -DTESTVECTOR_ANALYSIS  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/sse_coarse_operator_double.c -o build/sse_coarse_operator_double_devel.o
mpicc -g -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp   -DDEBUG -DPARAMOUTPUT -DTRACK_RES -DFGMRES_RESTEST -DPROFILING -DCOARSE_RES -DSCHWARZ_RES -DTESTVECTOR_ANALYSIS  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/dirac_double.c -o build/dirac_double_devel.o
mpicc -g -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp   -DDEBUG -DPARAMOUTPUT -DTRACK_RES -DFGMRES_RESTEST -DPROFILING -DCOARSE_RES -DSCHWARZ_RES -DTESTVECTOR_ANALYSIS  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/block_jacobi_double.c -o build/block_jacobi_double_devel.o
mpicc -g -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp   -DDEBUG -DPARAMOUTPUT -DTRACK_RES -DFGMRES_RESTEST -DPROFILING -DCOARSE_RES -DSCHWARZ_RES -DTESTVECTOR_ANALYSIS  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/schwarz_double.c -o build/schwarz_double_devel.o
mpicc -g -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp   -DDEBUG -DPARAMOUTPUT -DTRACK_RES -DFGMRES_RESTEST -DPROFILING -DCOARSE_RES -DSCHWARZ_RES -DTESTVECTOR_ANALYSIS  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/setup_double.c -o build/setup_double_devel.o
mpicc -g -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp   -DDEBUG -DPARAMOUTPUT -DTRACK_RES -DFGMRES_RESTEST -DPROFILING -DCOARSE_RES -DSCHWARZ_RES -DTESTVECTOR_ANALYSIS  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/coarse_operator_double.c -o build/coarse_operator_double_devel.o
mpicc -g -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp   -DDEBUG -DPARAMOUTPUT -DTRACK_RES -DFGMRES_RESTEST -DPROFILING -DCOARSE_RES -DSCHWARZ_RES -DTESTVECTOR_ANALYSIS  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/coarse_oddeven_double.c -o build/coarse_oddeven_double_devel.o
mpicc -g -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp   -DDEBUG -DPARAMOUTPUT -DTRACK_RES -DFGMRES_RESTEST -DPROFILING -DCOARSE_RES -DSCHWARZ_RES -DTESTVECTOR_ANALYSIS  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/vcycle_double.c -o build/vcycle_double_devel.o
mpicc -g -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp   -DDEBUG -DPARAMOUTPUT -DTRACK_RES -DFGMRES_RESTEST -DPROFILING -DCOARSE_RES -DSCHWARZ_RES -DTESTVECTOR_ANALYSIS  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/oddeven_double.c -o build/oddeven_double_devel.o
mpicc -g -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp   -DDEBUG -DPARAMOUTPUT -DTRACK_RES -DFGMRES_RESTEST -DPROFILING -DCOARSE_RES -DSCHWARZ_RES -DTESTVECTOR_ANALYSIS  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/init_double.c -o build/init_double_devel.o
mpicc -g -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp   -DDEBUG -DPARAMOUTPUT -DTRACK_RES -DFGMRES_RESTEST -DPROFILING -DCOARSE_RES -DSCHWARZ_RES -DTESTVECTOR_ANALYSIS  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/vectorization_dirac_double.c -o build/vectorization_dirac_double_devel.o
mpicc -g -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp   -DDEBUG -DPARAMOUTPUT -DTRACK_RES -DFGMRES_RESTEST -DPROFILING -DCOARSE_RES -DSCHWARZ_RES -DTESTVECTOR_ANALYSIS  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/hutchinson_double.c -o build/hutchinson_double_devel.o
mpicc -g -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp   -DDEBUG -DPARAMOUTPUT -DTRACK_RES -DFGMRES_RESTEST -DPROFILING -DCOARSE_RES -DSCHWARZ_RES -DTESTVECTOR_ANALYSIS  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/linalg_double.c -o build/linalg_double_devel.o
mpicc -g -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp   -DDEBUG -DPARAMOUTPUT -DTRACK_RES -DFGMRES_RESTEST -DPROFILING -DCOARSE_RES -DSCHWARZ_RES -DTESTVECTOR_ANALYSIS  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/sse_linalg_double.c -o build/sse_linalg_double_devel.o
mpicc -g -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp   -DDEBUG -DPARAMOUTPUT -DTRACK_RES -DFGMRES_RESTEST -DPROFILING -DCOARSE_RES -DSCHWARZ_RES -DTESTVECTOR_ANALYSIS  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/coarsening_double.c -o build/coarsening_double_devel.o
mpicc -g -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp   -DDEBUG -DPARAMOUTPUT -DTRACK_RES -DFGMRES_RESTEST -DPROFILING -DCOARSE_RES -DSCHWARZ_RES -DTESTVECTOR_ANALYSIS  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/interpolation_double.c -o build/interpolation_double_devel.o
mpicc -g -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp   -DDEBUG -DPARAMOUTPUT -DTRACK_RES -DFGMRES_RESTEST -DPROFILING -DCOARSE_RES -DSCHWARZ_RES -DTESTVECTOR_ANALYSIS  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/sse_interpolation_double.c -o build/sse_interpolation_double_devel.o
mpicc -g -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp   -DDEBUG -DPARAMOUTPUT -DTRACK_RES -DFGMRES_RESTEST -DPROFILING -DCOARSE_RES -DSCHWARZ_RES -DTESTVECTOR_ANALYSIS  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/gcrodr_double.c -o build/gcrodr_double_devel.o
mpicc -g -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp   -DDEBUG -DPARAMOUTPUT -DTRACK_RES -DFGMRES_RESTEST -DPROFILING -DCOARSE_RES -DSCHWARZ_RES -DTESTVECTOR_ANALYSIS  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/lapackwrap_double.c -o build/lapackwrap_double_devel.o
mpicc -g -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp   -DDEBUG -DPARAMOUTPUT -DTRACK_RES -DFGMRES_RESTEST -DPROFILING -DCOARSE_RES -DSCHWARZ_RES -DTESTVECTOR_ANALYSIS  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/data_double.c -o build/data_double_devel.o
mpicc -g -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp   -DDEBUG -DPARAMOUTPUT -DTRACK_RES -DFGMRES_RESTEST -DPROFILING -DCOARSE_RES -DSCHWARZ_RES -DTESTVECTOR_ANALYSIS  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/local_polyprec_double.c -o build/local_polyprec_double_devel.o
mpicc -g -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp   -DDEBUG -DPARAMOUTPUT -DTRACK_RES -DFGMRES_RESTEST -DPROFILING -DCOARSE_RES -DSCHWARZ_RES -DTESTVECTOR_ANALYSIS  -Idependencies/lapack-3.9.0/LAPACKE/include -c build/gsrc/operator_double.c -o build/operator_double_devel.o
cp src/`basename include/DDalphaAMG.h` include/DDalphaAMG.h
mpicc -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp    -DPARAMOUTPUT -DTRACK_RES -DPROFILING  -o bin/DDalphaAMG build/DDalphaAMG_interface.o build/solver_analysis.o build/io.o build/top_level.o build/preconditioner.o build/linalg.o build/main.o build/sse_linalg.o build/data_layout.o build/threading.o build/ghost.o build/lime_io.o build/init.o build/dirac.o build/sse_dirac.o build/var_table.o build/linsolve.o build/dirac_float.o build/block_jacobi_float.o build/schwarz_float.o build/linsolve_float.o build/coarse_operator_float.o build/coarse_oddeven_float.o build/linalg_float.o build/sse_linalg_float.o build/lapackwrap_float.o build/data_float.o build/operator_float.o build/oddeven_float.o build/ghost_float.o build/setup_float.o build/polyprec_float.o build/sse_coarse_operator_float.o build/init_float.o build/powerit_float.o build/gathering_float.o build/hutchinson_float.o build/vcycle_float.o build/vectorization_dirac_float.o build/coarsening_float.o build/interpolation_float.o build/sse_interpolation_float.o build/gcrodr_float.o build/local_polyprec_float.o build/dirac_double.o build/block_jacobi_double.o build/schwarz_double.o build/linsolve_double.o build/coarse_operator_double.o build/coarse_oddeven_double.o build/linalg_double.o build/sse_linalg_double.o build/lapackwrap_double.o build/data_double.o build/operator_double.o build/oddeven_double.o build/ghost_double.o build/setup_double.o build/polyprec_double.o build/sse_coarse_operator_double.o build/init_double.o build/powerit_double.o build/gathering_double.o build/hutchinson_double.o build/vcycle_double.o build/vectorization_dirac_double.o build/coarsening_double.o build/interpolation_double.o build/sse_interpolation_double.o build/gcrodr_double.o build/local_polyprec_double.o    dependencies/lapack-3.9.0/liblapacke.a dependencies/lapack-3.9.0/liblapack.a dependencies/lapack-3.9.0/librefblas.a -lm -lgfortran
ar rc lib/libDDalphaAMG.a build/DDalphaAMG_interface.o build/solver_analysis.o build/io.o build/top_level.o build/preconditioner.o build/linalg.o build/main.o build/sse_linalg.o build/data_layout.o build/threading.o build/ghost.o build/lime_io.o build/init.o build/dirac.o build/sse_dirac.o build/var_table.o build/linsolve.o build/dirac_float.o build/block_jacobi_float.o build/schwarz_float.o build/linsolve_float.o build/coarse_operator_float.o build/coarse_oddeven_float.o build/linalg_float.o build/sse_linalg_float.o build/lapackwrap_float.o build/data_float.o build/operator_float.o build/oddeven_float.o build/ghost_float.o build/setup_float.o build/polyprec_float.o build/sse_coarse_operator_float.o build/init_float.o build/powerit_float.o build/gathering_float.o build/hutchinson_float.o build/vcycle_float.o build/vectorization_dirac_float.o build/coarsening_float.o build/interpolation_float.o build/sse_interpolation_float.o build/gcrodr_float.o build/local_polyprec_float.o build/dirac_double.o build/block_jacobi_double.o build/schwarz_double.o build/linsolve_double.o build/coarse_operator_double.o build/coarse_oddeven_double.o build/linalg_double.o build/sse_linalg_double.o build/lapackwrap_double.o build/data_double.o build/operator_double.o build/oddeven_double.o build/ghost_double.o build/setup_double.o build/polyprec_double.o build/sse_coarse_operator_double.o build/init_double.o build/powerit_double.o build/gathering_double.o build/hutchinson_double.o build/vcycle_double.o build/vectorization_dirac_double.o build/coarsening_double.o build/interpolation_double.o build/sse_interpolation_double.o build/gcrodr_double.o build/local_polyprec_double.o
ar d lib/libDDalphaAMG.a main.o
ranlib lib/libDDalphaAMG.a
mpicc -g -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp   -DDEBUG -DPARAMOUTPUT -DTRACK_RES -DFGMRES_RESTEST -DPROFILING -DCOARSE_RES -DSCHWARZ_RES -DTESTVECTOR_ANALYSIS  -o bin/DDalphaAMG_devel build/DDalphaAMG_interface_devel.o build/solver_analysis_devel.o build/io_devel.o build/top_level_devel.o build/preconditioner_devel.o build/linalg_devel.o build/main_devel.o build/sse_linalg_devel.o build/data_layout_devel.o build/threading_devel.o build/ghost_devel.o build/lime_io_devel.o build/init_devel.o build/dirac_devel.o build/sse_dirac_devel.o build/var_table_devel.o build/linsolve_devel.o build/dirac_float_devel.o build/block_jacobi_float_devel.o build/schwarz_float_devel.o build/linsolve_float_devel.o build/coarse_operator_float_devel.o build/coarse_oddeven_float_devel.o build/linalg_float_devel.o build/sse_linalg_float_devel.o build/lapackwrap_float_devel.o build/data_float_devel.o build/operator_float_devel.o build/oddeven_float_devel.o build/ghost_float_devel.o build/setup_float_devel.o build/polyprec_float_devel.o build/sse_coarse_operator_float_devel.o build/init_float_devel.o build/powerit_float_devel.o build/gathering_float_devel.o build/hutchinson_float_devel.o build/vcycle_float_devel.o build/vectorization_dirac_float_devel.o build/coarsening_float_devel.o build/interpolation_float_devel.o build/sse_interpolation_float_devel.o build/gcrodr_float_devel.o build/local_polyprec_float_devel.o build/dirac_double_devel.o build/block_jacobi_double_devel.o build/schwarz_double_devel.o build/linsolve_double_devel.o build/coarse_operator_double_devel.o build/coarse_oddeven_double_devel.o build/linalg_double_devel.o build/sse_linalg_double_devel.o build/lapackwrap_double_devel.o build/data_double_devel.o build/operator_double_devel.o build/oddeven_double_devel.o build/ghost_double_devel.o build/setup_double_devel.o build/polyprec_double_devel.o build/sse_coarse_operator_double_devel.o build/init_double_devel.o build/powerit_double_devel.o build/gathering_double_devel.o build/hutchinson_double_devel.o build/vcycle_double_devel.o build/vectorization_dirac_double_devel.o build/coarsening_double_devel.o build/interpolation_double_devel.o build/sse_interpolation_double_devel.o build/gcrodr_double_devel.o build/local_polyprec_double_devel.o    dependencies/lapack-3.9.0/liblapacke.a dependencies/lapack-3.9.0/liblapack.a dependencies/lapack-3.9.0/librefblas.a -lm -lgfortran
ar rc lib/libDDalphaAMG_devel.a build/DDalphaAMG_interface_devel.o build/solver_analysis_devel.o build/io_devel.o build/top_level_devel.o build/preconditioner_devel.o build/linalg_devel.o build/main_devel.o build/sse_linalg_devel.o build/data_layout_devel.o build/threading_devel.o build/ghost_devel.o build/lime_io_devel.o build/init_devel.o build/dirac_devel.o build/sse_dirac_devel.o build/var_table_devel.o build/linsolve_devel.o build/dirac_float_devel.o build/block_jacobi_float_devel.o build/schwarz_float_devel.o build/linsolve_float_devel.o build/coarse_operator_float_devel.o build/coarse_oddeven_float_devel.o build/linalg_float_devel.o build/sse_linalg_float_devel.o build/lapackwrap_float_devel.o build/data_float_devel.o build/operator_float_devel.o build/oddeven_float_devel.o build/ghost_float_devel.o build/setup_float_devel.o build/polyprec_float_devel.o build/sse_coarse_operator_float_devel.o build/init_float_devel.o build/powerit_float_devel.o build/gathering_float_devel.o build/hutchinson_float_devel.o build/vcycle_float_devel.o build/vectorization_dirac_float_devel.o build/coarsening_float_devel.o build/interpolation_float_devel.o build/sse_interpolation_float_devel.o build/gcrodr_float_devel.o build/local_polyprec_float_devel.o build/dirac_double_devel.o build/block_jacobi_double_devel.o build/schwarz_double_devel.o build/linsolve_double_devel.o build/coarse_operator_double_devel.o build/coarse_oddeven_double_devel.o build/linalg_double_devel.o build/sse_linalg_double_devel.o build/lapackwrap_double_devel.o build/data_double_devel.o build/operator_double_devel.o build/oddeven_double_devel.o build/ghost_double_devel.o build/setup_double_devel.o build/polyprec_double_devel.o build/sse_coarse_operator_double_devel.o build/init_double_devel.o build/powerit_double_devel.o build/gathering_double_devel.o build/hutchinson_double_devel.o build/vcycle_double_devel.o build/vectorization_dirac_double_devel.o build/coarsening_double_devel.o build/interpolation_double_devel.o build/sse_interpolation_double_devel.o build/gcrodr_double_devel.o build/local_polyprec_double_devel.o
ar d lib/libDDalphaAMG_devel.a main.o
ranlib lib/libDDalphaAMG_devel.a
mpicc -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp  -o tests/DDalphaAMG_sample tests/DDalphaAMG_sample.c -Iinclude -Idependencies/lapack-3.9.0/LAPACKE/include -Llib -lDDalphaAMG   dependencies/lapack-3.9.0/liblapacke.a dependencies/lapack-3.9.0/liblapack.a dependencies/lapack-3.9.0/librefblas.a -lm -lgfortran
mpicc -std=gnu99 -Wall -pedantic -O3 -ffast-math -fopenmp  -o tests/DDalphaAMG_proj_test tests/DDalphaAMG_proj_test.c -Iinclude -Idependencies/lapack-3.9.0/LAPACKE/include -Llib -lDDalphaAMG   dependencies/lapack-3.9.0/liblapacke.a dependencies/lapack-3.9.0/liblapack.a dependencies/lapack-3.9.0/librefblas.a -lm -lgfortran

+- subspace correction methods for QCD applications -+
|                                                    |
|  Use option >> -? << for help                      |
|                                                    |
+----------------------------------------------------+


Number of Processes: 32
Program is being started...



+----------------------------------------------------------+
| The DDalphaAMG solver library.                           |
| Copyright (C) 2016, Matthias Rottmann, Artur Strebel,    |
|       Simon Heybrock, Simone Bacchio, Bjoern Leder.      |
|                                                          |
| This program comes with ABSOLUTELY NO WARRANTY.          |
+----------------------------------------------------------+

configuration: ../../../configs/qcdsf.632.01000.mg2

Desired average plaquette: 1.6479691428981 in [0,3]
periodic in time boundary conditions
malloc of "op->odd_proj" failed: pointer is not NULL (build/gsrc/operator_double.c:128).
malloc of "op->odd_proj" failed: pointer is not NULL (build/gsrc/operator_double.c:128).
malloc of "op->odd_proj" failed: pointer is not NULL (build/gsrc/operator_double.c:128).

initial coarse grid correction is defined
elapsed time: 67.484848 seconds
Time for initial phase of DDalphaAMG : 67.486922
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.008006+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.009454+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.009393+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.009070+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.009947+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.009091+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.007686+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.005205+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.007983+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.007608+0.000000i
from fgmres : depth: 1, iter: 1, p->H(1,0) = +0.009070+0.000000i
from fgmres : depth: 1, iter: 1, p->H(1,0) = +0.007250+0.000000i
from fgmres : depth: 1, iter: 1, p->H(1,0) = +0.007382+0.000000i
from fgmres : depth: 1, iter: 1, p->H(1,0) = +0.009001+0.000000i
from fgmres : depth: 1, iter: 1, p->H(1,0) = +0.009243+0.000000i
from fgmres : depth: 1, iter: 1, p->H(1,0) = +0.009894+0.000000i
from fgmres : depth: 1, iter: 1, p->H(1,0) = +0.008794+0.000000i

performed 8 iterative setup steps
elapsed time: 3725.754710 seconds (3194.529679 seconds on coarse grid)

Time for iterative phase of DDalphaAMG : 3725.754795

BPI : level 0, request 0
BPI : level 1, request 2































................................
................................
................................
................................
................................
Time for block power iteration : 5697.808863

Using (split) MGMLMC for computing the trace
from fgmres : depth: 1, iter: 301, p->H(1,0) = +0.007382+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.008229+0.000000i
from fgmres : depth: 1, iter: 401, p->H(1,0) = +0.008429+0.000000i
from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.007538+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.009914+0.000000i
from fgmres : depth: 1, iter: 301, p->H(1,0) = +0.008801+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.008410+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.008512+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.009909+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.007125+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.008070+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.009583+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.009384+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.009487+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.009984+0.000000i
from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.008549+0.000000i
from fgmres : depth: 1, iter: 201, p->H(1,0) = +0.009742+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.009751+0.000000i
from fgmres : depth: 1, iter: 351, p->H(1,0) = +0.008644+0.000000i
from fgmres : depth: 1, iter: 201, p->H(1,0) = +0.009383+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.009292+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.009156+0.000000i
from fgmres : depth: 1, iter: 151, p->H(1,0) = +0.009666+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.006757+0.000000i
from fgmres : depth: 1, iter: 301, p->H(1,0) = +0.008450+0.000000i
from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.008195+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.009973+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.008956+0.000000i
from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.005793+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.009071+0.000000i
+----------------------------------------------------------+
|       FGMRES iterations: 111    coarse average: 442.61   |
| exact relative residual: ||r||/||b|| = 8.005214e-09      |
| elapsed wall clock time: 1849.8679 seconds                |
|        coarse grid time: 1743.8486 seconds (94.3%)        |
|        coarsest grid time: 0.0000   seconds (00.0%)        |
| coarsest grid matmul time: 0.0000   seconds (00.0%)        |
|  consumed core minutes*: 9.87e+02 (solve only)           |
|    max used mem/MPIproc: 2.45e+00 GB                     |
+----------------------------------------------------------+
*: only correct if #MPIprocs*#threads == #CPUs

from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.007662+0.000000i
from fgmres : depth: 1, iter: 301, p->H(1,0) = +0.006453+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.009242+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.008702+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.009092+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.009064+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.009595+0.000000i
from fgmres : depth: 1, iter: 301, p->H(1,0) = +0.009666+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.006628+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.009444+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.008101+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.009293+0.000000i
from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.008535+0.000000i
from fgmres : depth: 1, iter: 401, p->H(1,0) = +0.009043+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.008121+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.008486+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.009584+0.000000i
from fgmres : depth: 1, iter: 501, p->H(1,0) = +0.009103+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.009862+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.009783+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.005418+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.009316+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.007331+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.009078+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.008805+0.000000i
from fgmres : depth: 1, iter: 351, p->H(1,0) = +0.009590+0.000000i
+----------------------------------------------------------+
|       FGMRES iterations: 100    coarse average: 448.70   |
| exact relative residual: ||r||/||b|| = 8.503295e-09      |
| elapsed wall clock time: 1688.3651 seconds                |
|        coarse grid time: 1592.4830 seconds (94.3%)        |
|        coarsest grid time: 0.0000   seconds (00.0%)        |
| coarsest grid matmul time: 0.0000   seconds (00.0%)        |
|  consumed core minutes*: 9.00e+02 (solve only)           |
|    max used mem/MPIproc: 2.45e+00 GB                     |
+----------------------------------------------------------+
*: only correct if #MPIprocs*#threads == #CPUs

[1, trace: -131690.706128+-1220.054560, variance: 32388880.298539] from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.009437+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.007604+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.009955+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.009797+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.008039+0.000000i
from fgmres : depth: 1, iter: 351, p->H(1,0) = +0.009390+0.000000i
from fgmres : depth: 1, iter: 501, p->H(1,0) = +0.008693+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.008748+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.009706+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.009394+0.000000i
from fgmres : depth: 1, iter: 151, p->H(1,0) = +0.009744+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.007419+0.000000i
from fgmres : depth: 1, iter: 401, p->H(1,0) = +0.008812+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.009152+0.000000i
from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.009693+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.008248+0.000000i
from fgmres : depth: 1, iter: 351, p->H(1,0) = +0.008494+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.007985+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.008589+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.007386+0.000000i
from fgmres : depth: 1, iter: 351, p->H(1,0) = +0.008871+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.009733+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.009739+0.000000i
from fgmres : depth: 1, iter: 501, p->H(1,0) = +0.008962+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.009622+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.009828+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.008674+0.000000i
from fgmres : depth: 1, iter: 351, p->H(1,0) = +0.009003+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.009314+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.009887+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.009555+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.008386+0.000000i
from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.009819+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.009344+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.008783+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.009600+0.000000i
from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.007204+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.009832+0.000000i
+----------------------------------------------------------+
|       FGMRES iterations: 124    coarse average: 415.04   |
| exact relative residual: ||r||/||b|| = 7.232618e-09      |
| elapsed wall clock time: 1941.5757 seconds                |
|        coarse grid time: 1823.1760 seconds (93.9%)        |
|        coarsest grid time: 0.0000   seconds (00.0%)        |
| coarsest grid matmul time: 0.0000   seconds (00.0%)        |
|  consumed core minutes*: 1.04e+03 (solve only)           |
|    max used mem/MPIproc: 2.45e+00 GB                     |
+----------------------------------------------------------+
*: only correct if #MPIprocs*#threads == #CPUs

[2, trace: -133704.356070+-864.988051, variance: 36569738.611022] from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.009921+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.008914+0.000000i
from fgmres : depth: 1, iter: 501, p->H(1,0) = +0.008324+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.008474+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.008110+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.009894+0.000000i
from fgmres : depth: 1, iter: 501, p->H(1,0) = +0.007693+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.008671+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.009326+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.009052+0.000000i
from fgmres : depth: 1, iter: 501, p->H(1,0) = +0.009134+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.009730+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.007726+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.008892+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.008401+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.009312+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.009410+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.007641+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.006468+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.006568+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.009292+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.008728+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.009387+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.008124+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.008538+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.008661+0.000000i
from fgmres : depth: 1, iter: 401, p->H(1,0) = +0.006848+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.009401+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.009778+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.007978+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.009876+0.000000i
from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.009804+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.008389+0.000000i
from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.008917+0.000000i
from fgmres : depth: 1, iter: 501, p->H(1,0) = +0.009555+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.008915+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.008944+0.000000i
from fgmres : depth: 1, iter: 401, p->H(1,0) = +0.009130+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.008433+0.000000i
+----------------------------------------------------------+
|       FGMRES iterations: 131    coarse average: 438.43   |
| exact relative residual: ||r||/||b|| = 7.429366e-09      |
| elapsed wall clock time: 2161.8569 seconds                |
|        coarse grid time: 2036.7131 seconds (94.2%)        |
|        coarsest grid time: 0.0000   seconds (00.0%)        |
| coarsest grid matmul time: 0.0000   seconds (00.0%)        |
|  consumed core minutes*: 1.15e+03 (solve only)           |
|    max used mem/MPIproc: 2.45e+00 GB                     |
+----------------------------------------------------------+
*: only correct if #MPIprocs*#threads == #CPUs

[3, trace: -134881.698652+-685.254220, variance: 31372743.297420] from fgmres : depth: 1, iter: 501, p->H(1,0) = +0.007656+0.000000i
from fgmres : depth: 1, iter: 401, p->H(1,0) = +0.009923+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.009734+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.009382+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.009664+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.009536+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.008597+0.000000i
from fgmres : depth: 1, iter: 251, p->H(1,0) = +0.009795+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.009514+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.009572+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.007154+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.009990+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.009277+0.000000i
from fgmres : depth: 1, iter: 301, p->H(1,0) = +0.009669+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.009787+0.000000i
+----------------------------------------------------------+
|       FGMRES iterations: 69     coarse average: 509.61   |
| exact relative residual: ||r||/||b|| = 9.929724e-09      |
| elapsed wall clock time: 1312.9060 seconds                |
|        coarse grid time: 1247.1574 seconds (95.0%)        |
|        coarsest grid time: 0.0000   seconds (00.0%)        |
| coarsest grid matmul time: 0.0000   seconds (00.0%)        |
|  consumed core minutes*: 7.00e+02 (solve only)           |
|    max used mem/MPIproc: 2.45e+00 GB                     |
+----------------------------------------------------------+
*: only correct if #MPIprocs*#threads == #CPUs

[4, trace: -133981.084839+-686.439598, variance: 27532153.684102] from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.009282+0.000000i
from fgmres : depth: 1, iter: 501, p->H(1,0) = +0.009387+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.008071+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.009313+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.008647+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.007531+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.008506+0.000000i
from fgmres : depth: 1, iter: 501, p->H(1,0) = +0.007228+0.000000i
from fgmres : depth: 1, iter: 401, p->H(1,0) = +0.009659+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.009723+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.009273+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.009887+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.008223+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.008139+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.008830+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.009962+0.000000i
from fgmres : depth: 1, iter: 201, p->H(1,0) = +0.009751+0.000000i
from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.006642+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.007074+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.008870+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.008661+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.009433+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.007988+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.009176+0.000000i
from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.008868+0.000000i
from fgmres : depth: 1, iter: 301, p->H(1,0) = +0.008195+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.007242+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.009968+0.000000i
+----------------------------------------------------------+
|       FGMRES iterations: 95     coarse average: 533.91   |
| exact relative residual: ||r||/||b|| = 9.345940e-09      |
| elapsed wall clock time: 1888.8215 seconds                |
|        coarse grid time: 1798.5238 seconds (95.2%)        |
|        coarsest grid time: 0.0000   seconds (00.0%)        |
| coarsest grid matmul time: 0.0000   seconds (00.0%)        |
|  consumed core minutes*: 1.01e+03 (solve only)           |
|    max used mem/MPIproc: 2.45e+00 GB                     |
+----------------------------------------------------------+
*: only correct if #MPIprocs*#threads == #CPUs

[5, trace: -134094.433276+-587.507147, variance: 24643899.711899] from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.009000+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.009011+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.007542+0.000000i
+----------------------------------------------------------+
|       FGMRES iterations: 29     coarse average: 563.93   |
| exact relative residual: ||r||/||b|| = 8.723574e-09      |
| elapsed wall clock time: 606.5438 seconds                |
|        coarse grid time: 578.9711 seconds (95.5%)        |
|        coarsest grid time: 0.0000   seconds (00.0%)        |
| coarsest grid matmul time: 0.0000   seconds (00.0%)        |
|  consumed core minutes*: 3.23e+02 (solve only)           |
|    max used mem/MPIproc: 2.45e+00 GB                     |
+----------------------------------------------------------+
*: only correct if #MPIprocs*#threads == #CPUs

[6, trace: -129573.395757+-649.634698, variance: 41074537.748132] from fgmres : depth: 1, iter: 401, p->H(1,0) = +0.008471+0.000000i
+----------------------------------------------------------+
|       FGMRES iterations: 30     coarse average: 564.53   |
| exact relative residual: ||r||/||b|| = 5.428918e-09      |
| elapsed wall clock time: 628.3877 seconds                |
|        coarse grid time: 599.8171 seconds (95.5%)        |
|        coarsest grid time: 0.0000   seconds (00.0%)        |
| coarsest grid matmul time: 0.0000   seconds (00.0%)        |
|  consumed core minutes*: 3.35e+02 (solve only)           |
|    max used mem/MPIproc: 2.45e+00 GB                     |
+----------------------------------------------------------+
*: only correct if #MPIprocs*#threads == #CPUs

[7, trace: -130624.831761+-521.124901, variance: 141467499.491535] from fgmres : depth: 1, iter: 401, p->H(1,0) = +0.008416+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.007718+0.000000i
from fgmres : depth: 1, iter: 301, p->H(1,0) = +0.006255+0.000000i
from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.008965+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.009590+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.008921+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.007784+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.009846+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.008755+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.007881+0.000000i
from fgmres : depth: 1, iter: 401, p->H(1,0) = +0.006616+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.009796+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.009656+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.007784+0.000000i
from fgmres : depth: 1, iter: 401, p->H(1,0) = +0.009993+0.000000i
from fgmres : depth: 1, iter: 251, p->H(1,0) = +0.009896+0.000000i
from fgmres : depth: 1, iter: 401, p->H(1,0) = +0.009396+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.007962+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.007827+0.000000i
from fgmres : depth: 1, iter: 301, p->H(1,0) = +0.009483+0.000000i
from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.009398+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.007064+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.009815+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.009573+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.008634+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.009992+0.000000i
from fgmres : depth: 1, iter: 351, p->H(1,0) = +0.009098+0.000000i
+----------------------------------------------------------+
|       FGMRES iterations: 116    coarse average: 507.32   |
| exact relative residual: ||r||/||b|| = 9.730027e-09      |
| elapsed wall clock time: 2198.1640 seconds                |
|        coarse grid time: 2087.6344 seconds (95.0%)        |
|        coarsest grid time: 0.0000   seconds (00.0%)        |
| coarsest grid matmul time: 0.0000   seconds (00.0%)        |
|  consumed core minutes*: 1.17e+03 (solve only)           |
|    max used mem/MPIproc: 2.45e+00 GB                     |
+----------------------------------------------------------+
*: only correct if #MPIprocs*#threads == #CPUs

[8, trace: -131561.700029+-355.623353, variance: 131561623.658002] from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.009081+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.009352+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.009543+0.000000i
from fgmres : depth: 1, iter: 401, p->H(1,0) = +0.009930+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.009294+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.008218+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.009782+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.008180+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.009470+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.007954+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.008644+0.000000i
from fgmres : depth: 1, iter: 501, p->H(1,0) = +0.007752+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.009460+0.000000i
from fgmres : depth: 1, iter: 501, p->H(1,0) = +0.008635+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.007710+0.000000i
from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.009064+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.008504+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.008028+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.008025+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.008634+0.000000i
from fgmres : depth: 1, iter: 401, p->H(1,0) = +0.009949+0.000000i
from fgmres : depth: 1, iter: 101, p->H(1,0) = +0.008455+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.008717+0.000000i
from fgmres : depth: 1, iter: 301, p->H(1,0) = +0.009257+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.009172+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.009873+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.006050+0.000000i
from fgmres : depth: 1, iter: 401, p->H(1,0) = +0.009566+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.008493+0.000000i
from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.007931+0.000000i
from fgmres : depth: 1, iter: 351, p->H(1,0) = +0.008414+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.008636+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.009956+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.009014+0.000000i
+----------------------------------------------------------+
|       FGMRES iterations: 121    coarse average: 527.50   |
| exact relative residual: ||r||/||b|| = 7.291972e-09      |
| elapsed wall clock time: 2377.7320 seconds                |
|        coarse grid time: 2262.1616 seconds (95.1%)        |
|        coarsest grid time: 0.0000   seconds (00.0%)        |
| coarsest grid matmul time: 0.0000   seconds (00.0%)        |
|  consumed core minutes*: 1.27e+03 (solve only)           |
|    max used mem/MPIproc: 2.45e+00 GB                     |
+----------------------------------------------------------+
*: only correct if #MPIprocs*#threads == #CPUs

[9, trace: -131697.610386+-120.507687, variance: 123453774.973217] from fgmres : depth: 1, iter: 501, p->H(1,0) = +0.009892+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.006287+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.009389+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.009807+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.006849+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.009588+0.000000i
from fgmres : depth: 1, iter: 151, p->H(1,0) = +0.009544+0.000000i
from fgmres : depth: 1, iter: 301, p->H(1,0) = +0.008006+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.009270+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.009948+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.008725+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.009676+0.000000i
from fgmres : depth: 1, iter: 301, p->H(1,0) = +0.007300+0.000000i
from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.007994+0.000000i
from fgmres : depth: 1, iter: 401, p->H(1,0) = +0.009651+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.009013+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.007883+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.009565+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.009220+0.000000i
from fgmres : depth: 1, iter: 501, p->H(1,0) = +0.008263+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.009287+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.009347+0.000000i
from fgmres : depth: 1, iter: 401, p->H(1,0) = +0.009023+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.007744+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.009483+0.000000i
from fgmres : depth: 1, iter: 301, p->H(1,0) = +0.008822+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.009557+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.008694+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.009795+0.000000i
+----------------------------------------------------------+
|       FGMRES iterations: 106    coarse average: 368.48   |
| exact relative residual: ||r||/||b|| = 7.523318e-09      |
| elapsed wall clock time: 1485.5436 seconds                |
|        coarse grid time: 1384.6058 seconds (93.2%)        |
|        coarsest grid time: 0.0000   seconds (00.0%)        |
| coarsest grid matmul time: 0.0000   seconds (00.0%)        |
|  consumed core minutes*: 7.92e+02 (solve only)           |
|    max used mem/MPIproc: 2.45e+00 GB                     |
+----------------------------------------------------------+
*: only correct if #MPIprocs*#threads == #CPUs

[10, trace: -125408.501167+362.950585, variance: 151492407.264446] from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.009674+0.000000i
from fgmres : depth: 1, iter: 501, p->H(1,0) = +0.008442+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.007242+0.000000i
from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.008807+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.008957+0.000000i
from fgmres : depth: 1, iter: 401, p->H(1,0) = +0.009581+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.009778+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.009777+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.009101+0.000000i
from fgmres : depth: 1, iter: 501, p->H(1,0) = +0.008519+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.008699+0.000000i
from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.008127+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.009658+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.009008+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.009968+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.009324+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.008879+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.007856+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.008581+0.000000i
from fgmres : depth: 1, iter: 501, p->H(1,0) = +0.009604+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.008500+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.008572+0.000000i
from fgmres : depth: 1, iter: 151, p->H(1,0) = +0.009247+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.008998+0.000000i
from fgmres : depth: 1, iter: 401, p->H(1,0) = +0.006973+0.000000i
from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.006294+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.009125+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.009503+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.008143+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.008544+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.008759+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.005827+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.009549+0.000000i
from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.009663+0.000000i
from fgmres : depth: 1, iter: 501, p->H(1,0) = +0.009900+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.006729+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.009900+0.000000i
from fgmres : depth: 1, iter: 401, p->H(1,0) = +0.007638+0.000000i
+----------------------------------------------------------+
|       FGMRES iterations: 133    coarse average: 423.37   |
| exact relative residual: ||r||/||b|| = 9.336469e-09      |
| elapsed wall clock time: 2110.5783 seconds                |
|        coarse grid time: 1984.1373 seconds (94.0%)        |
|        coarsest grid time: 0.0000   seconds (00.0%)        |
| coarsest grid matmul time: 0.0000   seconds (00.0%)        |
|  consumed core minutes*: 1.13e+03 (solve only)           |
|    max used mem/MPIproc: 2.45e+00 GB                     |
+----------------------------------------------------------+
*: only correct if #MPIprocs*#threads == #CPUs

[11, trace: -127077.784364+459.653605, variance: 502212834.237873] from fgmres : depth: 1, iter: 501, p->H(1,0) = +0.008989+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.009719+0.000000i
from fgmres : depth: 1, iter: 251, p->H(1,0) = +0.009625+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.009101+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.007869+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.008531+0.000000i
from fgmres : depth: 1, iter: 501, p->H(1,0) = +0.009381+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.009954+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.009692+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.009023+0.000000i
from fgmres : depth: 1, iter: 501, p->H(1,0) = +0.007030+0.000000i
from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.009250+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.009632+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.008911+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.009248+0.000000i
+----------------------------------------------------------+
|       FGMRES iterations: 64     coarse average: 467.14   |
| exact relative residual: ||r||/||b|| = 7.239343e-09      |
| elapsed wall clock time: 1112.2636 seconds                |
|        coarse grid time: 1051.6748 seconds (94.6%)        |
|        coarsest grid time: 0.0000   seconds (00.0%)        |
| coarsest grid matmul time: 0.0000   seconds (00.0%)        |
|  consumed core minutes*: 5.93e+02 (solve only)           |
|    max used mem/MPIproc: 2.45e+00 GB                     |
+----------------------------------------------------------+
*: only correct if #MPIprocs*#threads == #CPUs

[12, trace: -128968.340476+209.818818, variance: 492189951.390001] from fgmres : depth: 1, iter: 251, p->H(1,0) = +0.007877+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.006907+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.009297+0.000000i
from fgmres : depth: 1, iter: 351, p->H(1,0) = +0.005960+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.008282+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.007969+0.000000i
from fgmres : depth: 1, iter: 401, p->H(1,0) = +0.006890+0.000000i
from fgmres : depth: 1, iter: 501, p->H(1,0) = +0.005601+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.007698+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.006894+0.000000i
from fgmres : depth: 1, iter: 401, p->H(1,0) = +0.008502+0.000000i
from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.007099+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.006471+0.000000i
from fgmres : depth: 1, iter: 401, p->H(1,0) = +0.008874+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.008762+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.009667+0.000000i
from fgmres : depth: 1, iter: 351, p->H(1,0) = +0.008817+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.008320+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.009393+0.000000i
from fgmres : depth: 1, iter: 351, p->H(1,0) = +0.005832+0.000000i
from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.009934+0.000000i
from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.009672+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.009936+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.009837+0.000000i
from fgmres : depth: 1, iter: 501, p->H(1,0) = +0.009400+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.008808+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.009474+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.007679+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.009408+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.008828+0.000000i
from fgmres : depth: 1, iter: 401, p->H(1,0) = +0.009735+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.007120+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.009551+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.008577+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.006292+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.009364+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.009822+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.009632+0.000000i
+----------------------------------------------------------+
|       FGMRES iterations: 126    coarse average: 497.91   |
| exact relative residual: ||r||/||b|| = 9.858985e-09      |
| elapsed wall clock time: 2332.7828 seconds                |
|        coarse grid time: 2212.7463 seconds (94.9%)        |
|        coarsest grid time: 0.0000   seconds (00.0%)        |
| coarsest grid matmul time: 0.0000   seconds (00.0%)        |
|  consumed core minutes*: 1.24e+03 (solve only)           |
|    max used mem/MPIproc: 2.45e+00 GB                     |
+----------------------------------------------------------+
*: only correct if #MPIprocs*#threads == #CPUs

[13, trace: -129693.851366+252.398914, variance: 495139923.159984] from fgmres : depth: 1, iter: 501, p->H(1,0) = +0.009364+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.008577+0.000000i
from fgmres : depth: 1, iter: 351, p->H(1,0) = +0.006885+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.009037+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.009113+0.000000i
from fgmres : depth: 1, iter: 501, p->H(1,0) = +0.007547+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.009351+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.007574+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.007370+0.000000i
from fgmres : depth: 1, iter: 401, p->H(1,0) = +0.009697+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.009127+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.009949+0.000000i
+----------------------------------------------------------+
|       FGMRES iterations: 60     coarse average: 543.90   |
| exact relative residual: ||r||/||b|| = 3.926015e-09      |
| elapsed wall clock time: 1204.9661 seconds                |
|        coarse grid time: 1148.2691 seconds (95.3%)        |
|        coarsest grid time: 0.0000   seconds (00.0%)        |
| coarsest grid matmul time: 0.0000   seconds (00.0%)        |
|  consumed core minutes*: 6.43e+02 (solve only)           |
|    max used mem/MPIproc: 2.45e+00 GB                     |
+----------------------------------------------------------+
*: only correct if #MPIprocs*#threads == #CPUs

[14, trace: -128220.338103+113.603695, variance: 468339167.710711] from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.009931+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.009906+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.009348+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.007130+0.000000i
from fgmres : depth: 1, iter: 401, p->H(1,0) = +0.006162+0.000000i
from fgmres : depth: 1, iter: 301, p->H(1,0) = +0.009603+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.008820+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.008956+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.009460+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.009642+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.008783+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.009844+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.009520+0.000000i
from fgmres : depth: 1, iter: 401, p->H(1,0) = +0.008304+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.007724+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.009197+0.000000i
from fgmres : depth: 1, iter: 351, p->H(1,0) = +0.007340+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.009781+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.007483+0.000000i
from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.009339+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.006746+0.000000i
from fgmres : depth: 1, iter: 501, p->H(1,0) = +0.006398+0.000000i
from fgmres : depth: 1, iter: 401, p->H(1,0) = +0.008655+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.009377+0.000000i
from fgmres : depth: 1, iter: 251, p->H(1,0) = +0.007131+0.000000i
from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.008459+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.008862+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.008394+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.007768+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.008772+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.008896+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.008563+0.000000i
from fgmres : depth: 1, iter: 301, p->H(1,0) = +0.007983+0.000000i
from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.008160+0.000000i
from fgmres : depth: 1, iter: 501, p->H(1,0) = +0.009394+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.009375+0.000000i
from fgmres : depth: 1, iter: 501, p->H(1,0) = +0.009816+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.009257+0.000000i
+----------------------------------------------------------+
|       FGMRES iterations: 126    coarse average: 486.13   |
| exact relative residual: ||r||/||b|| = 9.182916e-09      |
| elapsed wall clock time: 2281.9591 seconds                |
|        coarse grid time: 2162.3594 seconds (94.8%)        |
|        coarsest grid time: 0.0000   seconds (00.0%)        |
| coarsest grid matmul time: 0.0000   seconds (00.0%)        |
|  consumed core minutes*: 1.22e+03 (solve only)           |
|    max used mem/MPIproc: 2.45e+00 GB                     |
+----------------------------------------------------------+
*: only correct if #MPIprocs*#threads == #CPUs

[15, trace: -126200.490585+-7.910176, variance: 469833710.685795] from fgmres : depth: 1, iter: 351, p->H(1,0) = +0.009064+0.000000i
from fgmres : depth: 1, iter: 401, p->H(1,0) = +0.008016+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.008147+0.000000i
from fgmres : depth: 1, iter: 351, p->H(1,0) = +0.008458+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.009130+0.000000i
from fgmres : depth: 1, iter: 401, p->H(1,0) = +0.008418+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.009060+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.008168+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.009173+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.007327+0.000000i
+----------------------------------------------------------+
|       FGMRES iterations: 53     coarse average: 580.04   |
| exact relative residual: ||r||/||b|| = 9.582004e-09      |
| elapsed wall clock time: 1130.5980 seconds                |
|        coarse grid time: 1080.3903 seconds (95.6%)        |
|        coarsest grid time: 0.0000   seconds (00.0%)        |
| coarsest grid matmul time: 0.0000   seconds (00.0%)        |
|  consumed core minutes*: 6.03e+02 (solve only)           |
|    max used mem/MPIproc: 2.45e+00 GB                     |
+----------------------------------------------------------+
*: only correct if #MPIprocs*#threads == #CPUs

[16, trace: -123763.003951+163.512384, variance: 504019434.508432] from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.008846+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.007274+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.008740+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.007277+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.007886+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.009299+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.007598+0.000000i
from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.009869+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.007879+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.009496+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.006860+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.008883+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.008753+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.008896+0.000000i
from fgmres : depth: 1, iter: 501, p->H(1,0) = +0.009877+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.008084+0.000000i
from fgmres : depth: 1, iter: 501, p->H(1,0) = +0.009984+0.000000i
from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.009213+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.009442+0.000000i
from fgmres : depth: 1, iter: 351, p->H(1,0) = +0.009594+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.006764+0.000000i
from fgmres : depth: 1, iter: 501, p->H(1,0) = +0.008156+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.009671+0.000000i
+----------------------------------------------------------+
|       FGMRES iterations: 76     coarse average: 462.30   |
| exact relative residual: ||r||/||b|| = 4.869571e-09      |
| elapsed wall clock time: 1315.0323 seconds                |
|        coarse grid time: 1242.7224 seconds (94.5%)        |
|        coarsest grid time: 0.0000   seconds (00.0%)        |
| coarsest grid matmul time: 0.0000   seconds (00.0%)        |
|  consumed core minutes*: 7.01e+02 (solve only)           |
|    max used mem/MPIproc: 2.45e+00 GB                     |
+----------------------------------------------------------+
*: only correct if #MPIprocs*#threads == #CPUs

[17, trace: -124520.562614+128.634963, variance: 564858465.091019] from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.007324+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.009808+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.006791+0.000000i
from fgmres : depth: 1, iter: 501, p->H(1,0) = +0.009929+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.007970+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.006940+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.009343+0.000000i
from fgmres : depth: 1, iter: 351, p->H(1,0) = +0.007202+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.009764+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.009685+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.006931+0.000000i
from fgmres : depth: 1, iter: 351, p->H(1,0) = +0.008722+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.008785+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.008400+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.007274+0.000000i
from fgmres : depth: 1, iter: 501, p->H(1,0) = +0.009819+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.006733+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.008002+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.008283+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.009294+0.000000i
+----------------------------------------------------------+
|       FGMRES iterations: 81     coarse average: 484.31   |
| exact relative residual: ||r||/||b|| = 8.204420e-09      |
| elapsed wall clock time: 1475.5923 seconds                |
|        coarse grid time: 1397.8596 seconds (94.7%)        |
|        coarsest grid time: 0.0000   seconds (00.0%)        |
| coarsest grid matmul time: 0.0000   seconds (00.0%)        |
|  consumed core minutes*: 7.87e+02 (solve only)           |
|    max used mem/MPIproc: 2.45e+00 GB                     |
+----------------------------------------------------------+
*: only correct if #MPIprocs*#threads == #CPUs

[18, trace: -121443.346162+-305.337356, variance: 552368767.964808] from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.008778+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.008571+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.007962+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.008877+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.008588+0.000000i
from fgmres : depth: 1, iter: 351, p->H(1,0) = +0.009773+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.008162+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.009426+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.009523+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.009588+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.009929+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.007056+0.000000i
from fgmres : depth: 1, iter: 251, p->H(1,0) = +0.007747+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.007952+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.009951+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.008621+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.009959+0.000000i
from fgmres : depth: 1, iter: 401, p->H(1,0) = +0.006551+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.006586+0.000000i
from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.006993+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.009841+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.009100+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.009751+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.007749+0.000000i
+----------------------------------------------------------+
|       FGMRES iterations: 99     coarse average: 421.55   |
| exact relative residual: ||r||/||b|| = 7.681701e-09      |
| elapsed wall clock time: 1565.1026 seconds                |
|        coarse grid time: 1471.1417 seconds (94.0%)        |
|        coarsest grid time: 0.0000   seconds (00.0%)        |
| coarsest grid matmul time: 0.0000   seconds (00.0%)        |
|  consumed core minutes*: 8.35e+02 (solve only)           |
|    max used mem/MPIproc: 2.45e+00 GB                     |
+----------------------------------------------------------+
*: only correct if #MPIprocs*#threads == #CPUs

[19, trace: -122242.166914+-322.546562, variance: 688622514.782377] from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.007829+0.000000i
from fgmres : depth: 1, iter: 401, p->H(1,0) = +0.006822+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.006917+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.008622+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.008976+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.008895+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.007519+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.008988+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.007777+0.000000i
from fgmres : depth: 1, iter: 501, p->H(1,0) = +0.007980+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.007639+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.006465+0.000000i
from fgmres : depth: 1, iter: 301, p->H(1,0) = +0.009716+0.000000i
from fgmres : depth: 1, iter: 401, p->H(1,0) = +0.009393+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.008011+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.007915+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.007506+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.009563+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.008972+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.008582+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.007419+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.008435+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.009527+0.000000i
from fgmres : depth: 1, iter: 401, p->H(1,0) = +0.009459+0.000000i
+----------------------------------------------------------+
|       FGMRES iterations: 92     coarse average: 508.67   |
| exact relative residual: ||r||/||b|| = 8.661074e-09      |
| elapsed wall clock time: 1729.2853 seconds                |
|        coarse grid time: 1642.2007 seconds (95.0%)        |
|        coarsest grid time: 0.0000   seconds (00.0%)        |
| coarsest grid matmul time: 0.0000   seconds (00.0%)        |
|  consumed core minutes*: 9.22e+02 (solve only)           |
|    max used mem/MPIproc: 2.45e+00 GB                     |
+----------------------------------------------------------+
*: only correct if #MPIprocs*#threads == #CPUs

[20, trace: -122723.251347+-246.426568, variance: 665951939.572704] from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.007709+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.009048+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.006191+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.008734+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.009869+0.000000i
from fgmres : depth: 1, iter: 301, p->H(1,0) = +0.009433+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.009437+0.000000i
from fgmres : depth: 1, iter: 501, p->H(1,0) = +0.008409+0.000000i
from fgmres : depth: 1, iter: 401, p->H(1,0) = +0.009202+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.007825+0.000000i
from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.009511+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.007328+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.008945+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.009607+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.006990+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.009746+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.008296+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.007027+0.000000i
from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.009278+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.009189+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.009040+0.000000i
from fgmres : depth: 1, iter: 351, p->H(1,0) = +0.007790+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.008208+0.000000i
from fgmres : depth: 1, iter: 401, p->H(1,0) = +0.007447+0.000000i
from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.009899+0.000000i
from fgmres : depth: 1, iter: 301, p->H(1,0) = +0.009929+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.009837+0.000000i
from fgmres : depth: 1, iter: 501, p->H(1,0) = +0.008793+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.008505+0.000000i
from fgmres : depth: 1, iter: 501, p->H(1,0) = +0.009291+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.008907+0.000000i
from fgmres : depth: 1, iter: 501, p->H(1,0) = +0.006846+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.007948+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.009742+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.009202+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.009611+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.009171+0.000000i
from fgmres : depth: 1, iter: 351, p->H(1,0) = +0.009355+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.008377+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.009608+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.008341+0.000000i
from fgmres : depth: 1, iter: 501, p->H(1,0) = +0.006093+0.000000i
from fgmres : depth: 1, iter: 351, p->H(1,0) = +0.009215+0.000000i
+----------------------------------------------------------+
|       FGMRES iterations: 140    coarse average: 431.76   |
| exact relative residual: ||r||/||b|| = 8.903942e-09      |
| elapsed wall clock time: 2251.2276 seconds                |
|        coarse grid time: 2118.7807 seconds (94.1%)        |
|        coarsest grid time: 0.0000   seconds (00.0%)        |
| coarsest grid matmul time: 0.0000   seconds (00.0%)        |
|  consumed core minutes*: 1.20e+03 (solve only)           |
|    max used mem/MPIproc: 2.45e+00 GB                     |
+----------------------------------------------------------+
*: only correct if #MPIprocs*#threads == #CPUs

[21, trace: -123493.819363+-262.041607, variance: 639352751.542392] from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.009815+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.009246+0.000000i
from fgmres : depth: 1, iter: 251, p->H(1,0) = +0.006838+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.009546+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.009745+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.008279+0.000000i
from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.009173+0.000000i
from fgmres : depth: 1, iter: 401, p->H(1,0) = +0.008342+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.008998+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.007902+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.006910+0.000000i
from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.007118+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.009903+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.008145+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.009318+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.008834+0.000000i
from fgmres : depth: 1, iter: 501, p->H(1,0) = +0.007682+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.006965+0.000000i
from fgmres : depth: 1, iter: 401, p->H(1,0) = +0.009843+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.008879+0.000000i
from fgmres : depth: 1, iter: 501, p->H(1,0) = +0.009566+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.008399+0.000000i
from fgmres : depth: 1, iter: 501, p->H(1,0) = +0.009467+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.009254+0.000000i
+----------------------------------------------------------+
|       FGMRES iterations: 86     coarse average: 460.99   |
| exact relative residual: ||r||/||b|| = 9.968297e-09      |
| elapsed wall clock time: 1479.0675 seconds                |
|        coarse grid time: 1397.7112 seconds (94.5%)        |
|        coarsest grid time: 0.0000   seconds (00.0%)        |
| coarsest grid matmul time: 0.0000   seconds (00.0%)        |
|  consumed core minutes*: 7.89e+02 (solve only)           |
|    max used mem/MPIproc: 2.45e+00 GB                     |
+----------------------------------------------------------+
*: only correct if #MPIprocs*#threads == #CPUs

[22, trace: -117398.690671+-607.591466, variance: 659468640.094820] from fgmres : depth: 1, iter: 151, p->H(1,0) = +0.008111+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.009620+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.009428+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.007397+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.009642+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.007319+0.000000i
from fgmres : depth: 1, iter: 501, p->H(1,0) = +0.008443+0.000000i
from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.009451+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.007092+0.000000i
from fgmres : depth: 1, iter: 301, p->H(1,0) = +0.007128+0.000000i
from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.009428+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.009929+0.000000i
from fgmres : depth: 1, iter: 351, p->H(1,0) = +0.006699+0.000000i
from fgmres : depth: 1, iter: 351, p->H(1,0) = +0.005483+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.009050+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.009559+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.009044+0.000000i
from fgmres : depth: 1, iter: 151, p->H(1,0) = +0.009301+0.000000i
from fgmres : depth: 1, iter: 301, p->H(1,0) = +0.009265+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.008869+0.000000i
from fgmres : depth: 1, iter: 401, p->H(1,0) = +0.007601+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.009173+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.009591+0.000000i
from fgmres : depth: 1, iter: 351, p->H(1,0) = +0.009042+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.008243+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.009006+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.009317+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.006392+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.009805+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.008315+0.000000i
from fgmres : depth: 1, iter: 351, p->H(1,0) = +0.009727+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.006821+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.008082+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.008901+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.007221+0.000000i
from fgmres : depth: 1, iter: 501, p->H(1,0) = +0.009673+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.009962+0.000000i
from fgmres : depth: 1, iter: 301, p->H(1,0) = +0.009663+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.007629+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.007929+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.009610+0.000000i
from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.007356+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.006771+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.006294+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.008208+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.009635+0.000000i
from fgmres : depth: 1, iter: 501, p->H(1,0) = +0.008225+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.009991+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.007234+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.009795+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.006408+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.008957+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.009790+0.000000i
+----------------------------------------------------------+
|       FGMRES iterations: 165    coarse average: 476.34   |
| exact relative residual: ||r||/||b|| = 9.002112e-09      |
| elapsed wall clock time: 2937.2509 seconds                |
|        coarse grid time: 2780.3376 seconds (94.7%)        |
|        coarsest grid time: 0.0000   seconds (00.0%)        |
| coarsest grid matmul time: 0.0000   seconds (00.0%)        |
|  consumed core minutes*: 1.57e+03 (solve only)           |
|    max used mem/MPIproc: 2.45e+00 GB                     |
+----------------------------------------------------------+
*: only correct if #MPIprocs*#threads == #CPUs

[23, trace: -117415.445267+-624.897942, variance: 1415087073.466097] from fgmres : depth: 1, iter: 401, p->H(1,0) = +0.008905+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.007832+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.007961+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.007752+0.000000i
from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.008083+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.009908+0.000000i
from fgmres : depth: 1, iter: 501, p->H(1,0) = +0.005428+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.009928+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.008872+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.006230+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.008973+0.000000i
from fgmres : depth: 1, iter: 501, p->H(1,0) = +0.009217+0.000000i
from fgmres : depth: 1, iter: 501, p->H(1,0) = +0.007823+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.006615+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.007495+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.008638+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.007928+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.009899+0.000000i
from fgmres : depth: 1, iter: 351, p->H(1,0) = +0.009534+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.009165+0.000000i
from fgmres : depth: 1, iter: 301, p->H(1,0) = +0.008187+0.000000i
from fgmres : depth: 1, iter: 151, p->H(1,0) = +0.009410+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.007229+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.006894+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.009010+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.009661+0.000000i
from fgmres : depth: 1, iter: 401, p->H(1,0) = +0.008748+0.000000i
from fgmres : depth: 1, iter: 301, p->H(1,0) = +0.009924+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.009228+0.000000i
from fgmres : depth: 1, iter: 351, p->H(1,0) = +0.008634+0.000000i
from fgmres : depth: 1, iter: 501, p->H(1,0) = +0.008065+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.009993+0.000000i
from fgmres : depth: 1, iter: 401, p->H(1,0) = +0.009636+0.000000i
from fgmres : depth: 1, iter: 501, p->H(1,0) = +0.009339+0.000000i
from fgmres : depth: 1, iter: 501, p->H(1,0) = +0.009686+0.000000i
from fgmres : depth: 1, iter: 351, p->H(1,0) = +0.007830+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.009117+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.007652+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.007203+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.009059+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.008104+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.008975+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.009993+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.008358+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.008029+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.007405+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.008622+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.007666+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.007554+0.000000i
+----------------------------------------------------------+
|       FGMRES iterations: 153    coarse average: 436.39   |
| exact relative residual: ||r||/||b|| = 9.832008e-09      |
| elapsed wall clock time: 2510.9491 seconds                |
|        coarse grid time: 2365.3073 seconds (94.2%)        |
|        coarsest grid time: 0.0000   seconds (00.0%)        |
| coarsest grid matmul time: 0.0000   seconds (00.0%)        |
|  consumed core minutes*: 1.34e+03 (solve only)           |
|    max used mem/MPIproc: 2.45e+00 GB                     |
+----------------------------------------------------------+
*: only correct if #MPIprocs*#threads == #CPUs

[24, trace: -118158.297155+-602.742117, variance: 1356690221.128851] from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.008795+0.000000i
from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.009554+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.008901+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.009957+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.006888+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.008806+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.006342+0.000000i
from fgmres : depth: 1, iter: 351, p->H(1,0) = +0.009963+0.000000i
from fgmres : depth: 1, iter: 401, p->H(1,0) = +0.007869+0.000000i
from fgmres : depth: 1, iter: 401, p->H(1,0) = +0.009939+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.007943+0.000000i
from fgmres : depth: 1, iter: 401, p->H(1,0) = +0.009401+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.009941+0.000000i
from fgmres : depth: 1, iter: 501, p->H(1,0) = +0.009826+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.009688+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.009713+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.008013+0.000000i
from fgmres : depth: 1, iter: 351, p->H(1,0) = +0.009605+0.000000i
+----------------------------------------------------------+
|       FGMRES iterations: 80     coarse average: 469.38   |
| exact relative residual: ||r||/||b|| = 5.595047e-09      |
| elapsed wall clock time: 1412.6882 seconds                |
|        coarse grid time: 1336.4568 seconds (94.6%)        |
|        coarsest grid time: 0.0000   seconds (00.0%)        |
| coarsest grid matmul time: 0.0000   seconds (00.0%)        |
|  consumed core minutes*: 7.53e+02 (solve only)           |
|    max used mem/MPIproc: 2.45e+00 GB                     |
+----------------------------------------------------------+
*: only correct if #MPIprocs*#threads == #CPUs

[25, trace: -118850.611272+-498.903054, variance: 1315638142.045935] from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.009846+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.008295+0.000000i
from fgmres : depth: 1, iter: 301, p->H(1,0) = +0.007458+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.008181+0.000000i
from fgmres : depth: 1, iter: 251, p->H(1,0) = +0.007149+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.009809+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.007110+0.000000i
from fgmres : depth: 1, iter: 351, p->H(1,0) = +0.007580+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.009108+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.009092+0.000000i
from fgmres : depth: 1, iter: 501, p->H(1,0) = +0.007820+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.009614+0.000000i
from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.006892+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.009290+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.007648+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.008639+0.000000i
from fgmres : depth: 1, iter: 401, p->H(1,0) = +0.009027+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.009240+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.007765+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.007811+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.008489+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.007604+0.000000i
+----------------------------------------------------------+
|       FGMRES iterations: 86     coarse average: 519.81   |
| exact relative residual: ||r||/||b|| = 6.625224e-09      |
| elapsed wall clock time: 1662.2521 seconds                |
|        coarse grid time: 1580.9832 seconds (95.1%)        |
|        coarsest grid time: 0.0000   seconds (00.0%)        |
| coarsest grid matmul time: 0.0000   seconds (00.0%)        |
|  consumed core minutes*: 8.87e+02 (solve only)           |
|    max used mem/MPIproc: 2.45e+00 GB                     |
+----------------------------------------------------------+
*: only correct if #MPIprocs*#threads == #CPUs

[26, trace: -119546.888759+-484.737926, variance: 1277302480.606749] from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.007325+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.008620+0.000000i
from fgmres : depth: 1, iter: 351, p->H(1,0) = +0.008960+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.009231+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.006487+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.007740+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.007926+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.007209+0.000000i
from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.008258+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.008648+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.009417+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.005722+0.000000i
from fgmres : depth: 1, iter: 401, p->H(1,0) = +0.009566+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.009822+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.008938+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.009654+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.006568+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.009759+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.007762+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.007106+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.008236+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.007526+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.009333+0.000000i
from fgmres : depth: 1, iter: 401, p->H(1,0) = +0.006542+0.000000i
+----------------------------------------------------------+
|       FGMRES iterations: 97     coarse average: 574.12   |
| exact relative residual: ||r||/||b|| = 9.475507e-09      |
| elapsed wall clock time: 2052.7664 seconds                |
|        coarse grid time: 1961.0112 seconds (95.5%)        |
|        coarsest grid time: 0.0000   seconds (00.0%)        |
| coarsest grid matmul time: 0.0000   seconds (00.0%)        |
|  consumed core minutes*: 1.09e+03 (solve only)           |
|    max used mem/MPIproc: 2.45e+00 GB                     |
+----------------------------------------------------------+
*: only correct if #MPIprocs*#threads == #CPUs

[27, trace: -118390.882016+-457.109973, variance: 1243475134.048168] from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.008560+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.008993+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.008515+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.008883+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.009608+0.000000i
from fgmres : depth: 1, iter: 401, p->H(1,0) = +0.009833+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.009585+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.008496+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.009025+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.007149+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.008811+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.006902+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.009110+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.009191+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.009944+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.009213+0.000000i
+----------------------------------------------------------+
|       FGMRES iterations: 70     coarse average: 427.67   |
| exact relative residual: ||r||/||b|| = 4.826952e-09      |
| elapsed wall clock time: 1127.3442 seconds                |
|        coarse grid time: 1060.6418 seconds (94.1%)        |
|        coarsest grid time: 0.0000   seconds (00.0%)        |
| coarsest grid matmul time: 0.0000   seconds (00.0%)        |
|  consumed core minutes*: 6.01e+02 (solve only)           |
|    max used mem/MPIproc: 2.45e+00 GB                     |
+----------------------------------------------------------+
*: only correct if #MPIprocs*#threads == #CPUs

[28, trace: -114181.326566+-622.261983, variance: 1251625681.428868] from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.009874+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.008009+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.009118+0.000000i
from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.008451+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.008978+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.009926+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.007483+0.000000i
from fgmres : depth: 1, iter: 401, p->H(1,0) = +0.007473+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.009461+0.000000i
from fgmres : depth: 1, iter: 501, p->H(1,0) = +0.007994+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.006839+0.000000i
from fgmres : depth: 1, iter: 351, p->H(1,0) = +0.009352+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.008183+0.000000i
from fgmres : depth: 1, iter: 301, p->H(1,0) = +0.009977+0.000000i
from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.009151+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.008861+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.009271+0.000000i
from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.009959+0.000000i
from fgmres : depth: 1, iter: 401, p->H(1,0) = +0.009494+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.009136+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.009070+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.009836+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.009552+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.009551+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.008401+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.009859+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.009668+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.009828+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.009363+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.009306+0.000000i
from fgmres : depth: 1, iter: 401, p->H(1,0) = +0.009130+0.000000i
from fgmres : depth: 1, iter: 251, p->H(1,0) = +0.009295+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.007203+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.007177+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.008434+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.008603+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.008906+0.000000i
+----------------------------------------------------------+
|       FGMRES iterations: 125    coarse average: 450.45   |
| exact relative residual: ||r||/||b|| = 7.647060e-09      |
| elapsed wall clock time: 2109.5907 seconds                |
|        coarse grid time: 1990.6356 seconds (94.4%)        |
|        coarsest grid time: 0.0000   seconds (00.0%)        |
| coarsest grid matmul time: 0.0000   seconds (00.0%)        |
|  consumed core minutes*: 1.13e+03 (solve only)           |
|    max used mem/MPIproc: 2.45e+00 GB                     |
+----------------------------------------------------------+
*: only correct if #MPIprocs*#threads == #CPUs

[29, trace: -114726.930754+-579.146520, variance: 1688563776.916284] from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.009974+0.000000i
from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.009326+0.000000i
from fgmres : depth: 1, iter: 301, p->H(1,0) = +0.007149+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.009897+0.000000i
from fgmres : depth: 1, iter: 301, p->H(1,0) = +0.009659+0.000000i
from fgmres : depth: 1, iter: 501, p->H(1,0) = +0.008380+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.007149+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.008410+0.000000i
from fgmres : depth: 1, iter: 301, p->H(1,0) = +0.008634+0.000000i
from fgmres : depth: 1, iter: 501, p->H(1,0) = +0.008874+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.009518+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.008530+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.009840+0.000000i
from fgmres : depth: 1, iter: 301, p->H(1,0) = +0.009794+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.007730+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.008650+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.008545+0.000000i
from fgmres : depth: 1, iter: 401, p->H(1,0) = +0.007448+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.008425+0.000000i
from fgmres : depth: 1, iter: 501, p->H(1,0) = +0.010000+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.009127+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.009677+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.009677+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.008245+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.007062+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.009076+0.000000i
from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.009226+0.000000i
+----------------------------------------------------------+
|       FGMRES iterations: 99     coarse average: 464.23   |
| exact relative residual: ||r||/||b|| = 8.058199e-09      |
| elapsed wall clock time: 1725.8344 seconds                |
|        coarse grid time: 1631.4177 seconds (94.5%)        |
|        coarsest grid time: 0.0000   seconds (00.0%)        |
| coarsest grid matmul time: 0.0000   seconds (00.0%)        |
|  consumed core minutes*: 9.20e+02 (solve only)           |
|    max used mem/MPIproc: 2.45e+00 GB                     |
+----------------------------------------------------------+
*: only correct if #MPIprocs*#threads == #CPUs

[30, trace: -114985.824137+-540.062620, variance: 1640744056.224489] from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.009485+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.009189+0.000000i
from fgmres : depth: 1, iter: 501, p->H(1,0) = +0.007235+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.009831+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.007214+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.008040+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.009640+0.000000i
from fgmres : depth: 1, iter: 251, p->H(1,0) = +0.009811+0.000000i
from fgmres : depth: 1, iter: 301, p->H(1,0) = +0.009847+0.000000i
from fgmres : depth: 1, iter: 401, p->H(1,0) = +0.007958+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.009847+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.009749+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.009136+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.009546+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.007119+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.008346+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.008199+0.000000i
from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.009814+0.000000i
from fgmres : depth: 1, iter: 201, p->H(1,0) = +0.009310+0.000000i
from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.008025+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.007479+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.008514+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.005399+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.009533+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.009649+0.000000i
from fgmres : depth: 1, iter: 351, p->H(1,0) = +0.006916+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.009518+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.009006+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.007752+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.009801+0.000000i
from fgmres : depth: 1, iter: 501, p->H(1,0) = +0.008076+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.007701+0.000000i
from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.007214+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.007787+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.008563+0.000000i
+----------------------------------------------------------+
|       FGMRES iterations: 121    coarse average: 512.63   |
| exact relative residual: ||r||/||b|| = 7.699767e-09      |
| elapsed wall clock time: 2315.5150 seconds                |
|        coarse grid time: 2199.6722 seconds (95.0%)        |
|        coarsest grid time: 0.0000   seconds (00.0%)        |
| coarsest grid matmul time: 0.0000   seconds (00.0%)        |
|  consumed core minutes*: 1.23e+03 (solve only)           |
|    max used mem/MPIproc: 2.45e+00 GB                     |
+----------------------------------------------------------+
*: only correct if #MPIprocs*#threads == #CPUs

[31, trace: -115107.193403+-388.669183, variance: 1589844737.192365] from fgmres : depth: 1, iter: 501, p->H(1,0) = +0.008695+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.007294+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.008865+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.008752+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.009493+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.008983+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.008186+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.009764+0.000000i
from fgmres : depth: 1, iter: 501, p->H(1,0) = +0.008127+0.000000i
from fgmres : depth: 1, iter: 501, p->H(1,0) = +0.009678+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.008977+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.008908+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.008363+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.008733+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.006978+0.000000i
from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.009427+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.009379+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.009994+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.009210+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.009925+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.008173+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.008394+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.008136+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.009569+0.000000i
from fgmres : depth: 1, iter: 501, p->H(1,0) = +0.009424+0.000000i
from fgmres : depth: 1, iter: 351, p->H(1,0) = +0.009412+0.000000i
+----------------------------------------------------------+
|       FGMRES iterations: 109    coarse average: 562.44   |
| exact relative residual: ||r||/||b|| = 9.796839e-09      |
| elapsed wall clock time: 2285.8501 seconds                |
|        coarse grid time: 2182.0484 seconds (95.5%)        |
|        coarsest grid time: 0.0000   seconds (00.0%)        |
| coarsest grid matmul time: 0.0000   seconds (00.0%)        |
|  consumed core minutes*: 1.22e+03 (solve only)           |
|    max used mem/MPIproc: 2.45e+00 GB                     |
+----------------------------------------------------------+
*: only correct if #MPIprocs*#threads == #CPUs

[32, trace: -114948.256132+-353.117632, variance: 1541319304.843449] from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.009605+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.006647+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.008015+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.009104+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.009306+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.006905+0.000000i
from fgmres : depth: 1, iter: 501, p->H(1,0) = +0.008873+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.009437+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.008233+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.009205+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.008546+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.009171+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.008255+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.008325+0.000000i
from fgmres : depth: 1, iter: 401, p->H(1,0) = +0.009596+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.009712+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.008393+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.009768+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.008917+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.008958+0.000000i
from fgmres : depth: 1, iter: 301, p->H(1,0) = +0.006655+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.007837+0.000000i
from fgmres : depth: 1, iter: 401, p->H(1,0) = +0.007689+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.009753+0.000000i
from fgmres : depth: 1, iter: 401, p->H(1,0) = +0.007832+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.009000+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.006934+0.000000i
from fgmres : depth: 1, iter: 251, p->H(1,0) = +0.008173+0.000000i
+----------------------------------------------------------+
|       FGMRES iterations: 98     coarse average: 472.59   |
| exact relative residual: ||r||/||b|| = 9.475342e-09      |
| elapsed wall clock time: 1740.2072 seconds                |
|        coarse grid time: 1646.8810 seconds (94.6%)        |
|        coarsest grid time: 0.0000   seconds (00.0%)        |
| coarsest grid matmul time: 0.0000   seconds (00.0%)        |
|  consumed core minutes*: 9.28e+02 (solve only)           |
|    max used mem/MPIproc: 2.45e+00 GB                     |
+----------------------------------------------------------+
*: only correct if #MPIprocs*#threads == #CPUs

[33, trace: -112868.671148+-384.300212, variance: 1499761383.125445] from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.008590+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.008021+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.007502+0.000000i
from fgmres : depth: 1, iter: 351, p->H(1,0) = +0.009607+0.000000i
+----------------------------------------------------------+
|       FGMRES iterations: 39     coarse average: 519.51   |
| exact relative residual: ||r||/||b|| = 4.408861e-09      |
| elapsed wall clock time: 758.1825 seconds                |
|        coarse grid time: 721.1501 seconds (95.1%)        |
|        coarsest grid time: 0.0000   seconds (00.0%)        |
| coarsest grid matmul time: 0.0000   seconds (00.0%)        |
|  consumed core minutes*: 4.04e+02 (solve only)           |
|    max used mem/MPIproc: 2.45e+00 GB                     |
+----------------------------------------------------------+
*: only correct if #MPIprocs*#threads == #CPUs

[34, trace: -113215.955129+-401.650915, variance: 1594319560.128357] from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.009083+0.000000i
from fgmres : depth: 1, iter: 351, p->H(1,0) = +0.009069+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.008252+0.000000i
from fgmres : depth: 1, iter: 301, p->H(1,0) = +0.007865+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.008490+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.009747+0.000000i
from fgmres : depth: 1, iter: 101, p->H(1,0) = +0.007149+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.007304+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.009996+0.000000i
from fgmres : depth: 1, iter: 401, p->H(1,0) = +0.009939+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.008878+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.009503+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.008391+0.000000i
+----------------------------------------------------------+
|       FGMRES iterations: 60     coarse average: 491.18   |
| exact relative residual: ||r||/||b|| = 8.365954e-09      |
| elapsed wall clock time: 1105.8364 seconds                |
|        coarse grid time: 1048.6492 seconds (94.8%)        |
|        coarsest grid time: 0.0000   seconds (00.0%)        |
| coarsest grid matmul time: 0.0000   seconds (00.0%)        |
|  consumed core minutes*: 5.90e+02 (solve only)           |
|    max used mem/MPIproc: 2.45e+00 GB                     |
+----------------------------------------------------------+
*: only correct if #MPIprocs*#threads == #CPUs

[35, trace: -113030.645619+-307.953470, variance: 1552804083.941845] from fgmres : depth: 1, iter: 351, p->H(1,0) = +0.008615+0.000000i
from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.009635+0.000000i
from fgmres : depth: 1, iter: 401, p->H(1,0) = +0.008191+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.009826+0.000000i
from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.007696+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.008470+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.009743+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.009924+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.009932+0.000000i
from fgmres : depth: 1, iter: 301, p->H(1,0) = +0.009865+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.009948+0.000000i
from fgmres : depth: 1, iter: 501, p->H(1,0) = +0.009265+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.009489+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.009117+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.009670+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.008327+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.009132+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.009936+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.009992+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.008440+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.008962+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.006330+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.009832+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.008845+0.000000i
from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.009764+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.007494+0.000000i
+----------------------------------------------------------+
|       FGMRES iterations: 105    coarse average: 470.97   |
| exact relative residual: ||r||/||b|| = 4.598531e-09      |
| elapsed wall clock time: 1861.2667 seconds                |
|        coarse grid time: 1761.1265 seconds (94.6%)        |
|        coarsest grid time: 0.0000   seconds (00.0%)        |
| coarsest grid matmul time: 0.0000   seconds (00.0%)        |
|  consumed core minutes*: 9.93e+02 (solve only)           |
|    max used mem/MPIproc: 2.45e+00 GB                     |
+----------------------------------------------------------+
*: only correct if #MPIprocs*#threads == #CPUs

[36, trace: -114593.641496+-292.030989, variance: 1513581084.616430] from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.009040+0.000000i
from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.009315+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.006993+0.000000i
from fgmres : depth: 1, iter: 251, p->H(1,0) = +0.006946+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.009734+0.000000i
from fgmres : depth: 1, iter: 351, p->H(1,0) = +0.007195+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.009771+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.008710+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.006723+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.008765+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.007363+0.000000i
from fgmres : depth: 1, iter: 351, p->H(1,0) = +0.008888+0.000000i
from fgmres : depth: 1, iter: 401, p->H(1,0) = +0.008879+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.009305+0.000000i
from fgmres : depth: 1, iter: 501, p->H(1,0) = +0.007471+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.008830+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.008135+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.008703+0.000000i
from fgmres : depth: 1, iter: 501, p->H(1,0) = +0.009244+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.007244+0.000000i
from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.009949+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.008868+0.000000i
from fgmres : depth: 1, iter: 101, p->H(1,0) = +0.009805+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.008009+0.000000i
from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.009860+0.000000i
+----------------------------------------------------------+
|       FGMRES iterations: 101    coarse average: 432.78   |
| exact relative residual: ||r||/||b|| = 7.330165e-09      |
| elapsed wall clock time: 1654.8648 seconds                |
|        coarse grid time: 1558.4765 seconds (94.2%)        |
|        coarsest grid time: 0.0000   seconds (00.0%)        |
| coarsest grid matmul time: 0.0000   seconds (00.0%)        |
|  consumed core minutes*: 8.83e+02 (solve only)           |
|    max used mem/MPIproc: 2.45e+00 GB                     |
+----------------------------------------------------------+
*: only correct if #MPIprocs*#threads == #CPUs

[37, trace: -110136.379099+-138.605577, variance: 1578142585.136742] from fgmres : depth: 1, iter: 101, p->H(1,0) = +0.009141+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.009026+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.008329+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.008874+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.008978+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.009027+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.009270+0.000000i
from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.006937+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.009713+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.008157+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.008625+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.007384+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.006606+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.009572+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.007737+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.009722+0.000000i
from fgmres : depth: 1, iter: 301, p->H(1,0) = +0.007130+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.009577+0.000000i
from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.009193+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.008508+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.007815+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.009439+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.008022+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.009125+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.007141+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.009871+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.009647+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.006417+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.009191+0.000000i
+----------------------------------------------------------+
|       FGMRES iterations: 104    coarse average: 513.25   |
| exact relative residual: ||r||/||b|| = 6.439699e-09      |
| elapsed wall clock time: 1993.4304 seconds                |
|        coarse grid time: 1894.5264 seconds (95.0%)        |
|        coarsest grid time: 0.0000   seconds (00.0%)        |
| coarsest grid matmul time: 0.0000   seconds (00.0%)        |
|  consumed core minutes*: 1.06e+03 (solve only)           |
|    max used mem/MPIproc: 2.45e+00 GB                     |
+----------------------------------------------------------+
*: only correct if #MPIprocs*#threads == #CPUs

[38, trace: -110772.622990+-119.896154, variance: 2253607301.353283] from fgmres : depth: 1, iter: 301, p->H(1,0) = +0.006615+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.009921+0.000000i
from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.008636+0.000000i
from fgmres : depth: 1, iter: 401, p->H(1,0) = +0.008067+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.009335+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.007317+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.009461+0.000000i
from fgmres : depth: 1, iter: 351, p->H(1,0) = +0.008824+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.009024+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.009416+0.000000i
from fgmres : depth: 1, iter: 501, p->H(1,0) = +0.008672+0.000000i
from fgmres : depth: 1, iter: 501, p->H(1,0) = +0.009585+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.007430+0.000000i
+----------------------------------------------------------+
|       FGMRES iterations: 60     coarse average: 510.17   |
| exact relative residual: ||r||/||b|| = 5.698700e-09      |
| elapsed wall clock time: 1141.4378 seconds                |
|        coarse grid time: 1084.2080 seconds (95.0%)        |
|        coarsest grid time: 0.0000   seconds (00.0%)        |
| coarsest grid matmul time: 0.0000   seconds (00.0%)        |
|  consumed core minutes*: 6.09e+02 (solve only)           |
|    max used mem/MPIproc: 2.45e+00 GB                     |
+----------------------------------------------------------+
*: only correct if #MPIprocs*#threads == #CPUs

[39, trace: -110431.325100+6.899100, variance: 2210956232.927695] from fgmres : depth: 1, iter: 351, p->H(1,0) = +0.008532+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.008393+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.007922+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.009682+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.008284+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.006793+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.008474+0.000000i
from fgmres : depth: 1, iter: 501, p->H(1,0) = +0.007746+0.000000i
from fgmres : depth: 1, iter: 501, p->H(1,0) = +0.009555+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.008972+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.009360+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.009275+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.007843+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.009389+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.008950+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.008600+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.009902+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.008647+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.009586+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.007606+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.009320+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.008604+0.000000i
+----------------------------------------------------------+
|       FGMRES iterations: 79     coarse average: 464.92   |
| exact relative residual: ||r||/||b|| = 9.434858e-09      |
| elapsed wall clock time: 1377.4097 seconds                |
|        coarse grid time: 1302.2975 seconds (94.5%)        |
|        coarsest grid time: 0.0000   seconds (00.0%)        |
| coarsest grid matmul time: 0.0000   seconds (00.0%)        |
|  consumed core minutes*: 7.35e+02 (solve only)           |
|    max used mem/MPIproc: 2.45e+00 GB                     |
+----------------------------------------------------------+
*: only correct if #MPIprocs*#threads == #CPUs

[40, trace: -111055.265842+0.312611, variance: 2161112315.422133] from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.009313+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.008502+0.000000i
from fgmres : depth: 1, iter: 251, p->H(1,0) = +0.009338+0.000000i
from fgmres : depth: 1, iter: 401, p->H(1,0) = +0.009649+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.008522+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.008472+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.007260+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.009236+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.009539+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.009026+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.008922+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.009250+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.009538+0.000000i
from fgmres : depth: 1, iter: 301, p->H(1,0) = +0.009307+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.008659+0.000000i
from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.009156+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.009954+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.009645+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.009798+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.009006+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.009566+0.000000i
+----------------------------------------------------------+
|       FGMRES iterations: 85     coarse average: 511.26   |
| exact relative residual: ||r||/||b|| = 6.248400e-09      |
| elapsed wall clock time: 1602.8432 seconds                |
|        coarse grid time: 1522.5205 seconds (95.0%)        |
|        coarsest grid time: 0.0000   seconds (00.0%)        |
| coarsest grid matmul time: 0.0000   seconds (00.0%)        |
|  consumed core minutes*: 8.55e+02 (solve only)           |
|    max used mem/MPIproc: 2.45e+00 GB                     |
+----------------------------------------------------------+
*: only correct if #MPIprocs*#threads == #CPUs

[41, trace: -111941.918000+2.185037, variance: 2124382382.550529] from fgmres : depth: 1, iter: 251, p->H(1,0) = +0.009176+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.008754+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.009555+0.000000i
from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.009323+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.008901+0.000000i
from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.009550+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.008342+0.000000i
from fgmres : depth: 1, iter: 501, p->H(1,0) = +0.007241+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.008254+0.000000i
from fgmres : depth: 1, iter: 351, p->H(1,0) = +0.007777+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.008510+0.000000i
from fgmres : depth: 1, iter: 201, p->H(1,0) = +0.009012+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.009842+0.000000i
from fgmres : depth: 1, iter: 501, p->H(1,0) = +0.007870+0.000000i
+----------------------------------------------------------+
|       FGMRES iterations: 70     coarse average: 505.21   |
| exact relative residual: ||r||/||b|| = 7.965282e-09      |
| elapsed wall clock time: 1290.0634 seconds                |
|        coarse grid time: 1224.3102 seconds (94.9%)        |
|        coarsest grid time: 0.0000   seconds (00.0%)        |
| coarsest grid matmul time: 0.0000   seconds (00.0%)        |
|  consumed core minutes*: 6.88e+02 (solve only)           |
|    max used mem/MPIproc: 2.45e+00 GB                     |
+----------------------------------------------------------+
*: only correct if #MPIprocs*#threads == #CPUs

[42, trace: -110754.866757+76.640236, variance: 2106681424.069376] from fgmres : depth: 1, iter: 401, p->H(1,0) = +0.007562+0.000000i
from fgmres : depth: 1, iter: 501, p->H(1,0) = +0.009449+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.008310+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.007173+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.009112+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.009475+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.009956+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.009376+0.000000i
from fgmres : depth: 1, iter: 501, p->H(1,0) = +0.008753+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.007691+0.000000i
from fgmres : depth: 1, iter: 401, p->H(1,0) = +0.009852+0.000000i
from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.007957+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.006957+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.009472+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.009668+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.009298+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.007912+0.000000i
from fgmres : depth: 1, iter: 401, p->H(1,0) = +0.009095+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.009101+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.005933+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.009962+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.008280+0.000000i
from fgmres : depth: 1, iter: 401, p->H(1,0) = +0.009884+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.008383+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.008046+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.009357+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.006579+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.006904+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.008233+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.009399+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.009510+0.000000i
from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.007666+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.007741+0.000000i
from fgmres : depth: 1, iter: 501, p->H(1,0) = +0.009646+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.007818+0.000000i
+----------------------------------------------------------+
|       FGMRES iterations: 121    coarse average: 486.89   |
| exact relative residual: ||r||/||b|| = 7.346461e-09      |
| elapsed wall clock time: 2148.3504 seconds                |
|        coarse grid time: 2034.4276 seconds (94.7%)        |
|        coarsest grid time: 0.0000   seconds (00.0%)        |
| coarsest grid matmul time: 0.0000   seconds (00.0%)        |
|  consumed core minutes*: 1.15e+03 (solve only)           |
|    max used mem/MPIproc: 2.45e+00 GB                     |
+----------------------------------------------------------+
*: only correct if #MPIprocs*#threads == #CPUs

[43, trace: -111330.234802+69.529581, variance: 2116052833.653422] from fgmres : depth: 1, iter: 401, p->H(1,0) = +0.008529+0.000000i
from fgmres : depth: 1, iter: 501, p->H(1,0) = +0.008269+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.009623+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.009206+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.008893+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.008665+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.009838+0.000000i
from fgmres : depth: 1, iter: 401, p->H(1,0) = +0.009167+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.009263+0.000000i
from fgmres : depth: 1, iter: 401, p->H(1,0) = +0.007394+0.000000i
from fgmres : depth: 1, iter: 501, p->H(1,0) = +0.008333+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.009765+0.000000i
from fgmres : depth: 1, iter: 301, p->H(1,0) = +0.007856+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.009269+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.009677+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.009910+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.009059+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.008431+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.008931+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.009689+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.009762+0.000000i
from fgmres : depth: 1, iter: 401, p->H(1,0) = +0.007518+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.008491+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.009165+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.008959+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.009923+0.000000i
+----------------------------------------------------------+
|       FGMRES iterations: 105    coarse average: 476.78   |
| exact relative residual: ||r||/||b|| = 8.083973e-09      |
| elapsed wall clock time: 1829.3475 seconds                |
|        coarse grid time: 1730.3250 seconds (94.6%)        |
|        coarsest grid time: 0.0000   seconds (00.0%)        |
| coarsest grid matmul time: 0.0000   seconds (00.0%)        |
|  consumed core minutes*: 9.76e+02 (solve only)           |
|    max used mem/MPIproc: 2.45e+00 GB                     |
+----------------------------------------------------------+
*: only correct if #MPIprocs*#threads == #CPUs

[44, trace: -111862.097977+73.523986, variance: 2082157298.996630] from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.008517+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.006155+0.000000i
from fgmres : depth: 1, iter: 401, p->H(1,0) = +0.009647+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.007585+0.000000i
from fgmres : depth: 1, iter: 501, p->H(1,0) = +0.009965+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.007734+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.009603+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.008827+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.009707+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.009158+0.000000i
from fgmres : depth: 1, iter: 301, p->H(1,0) = +0.009733+0.000000i
from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.008310+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.009880+0.000000i
from fgmres : depth: 1, iter: 501, p->H(1,0) = +0.009713+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.009363+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.007815+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.009864+0.000000i
from fgmres : depth: 1, iter: 401, p->H(1,0) = +0.008940+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.007833+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.009059+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.009618+0.000000i
from fgmres : depth: 1, iter: 401, p->H(1,0) = +0.008323+0.000000i
from fgmres : depth: 1, iter: 351, p->H(1,0) = +0.006836+0.000000i
from fgmres : depth: 1, iter: 501, p->H(1,0) = +0.008150+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.009670+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.007903+0.000000i
from fgmres : depth: 1, iter: 351, p->H(1,0) = +0.009200+0.000000i
+----------------------------------------------------------+
|       FGMRES iterations: 103    coarse average: 438.86   |
| exact relative residual: ||r||/||b|| = 9.996115e-09      |
| elapsed wall clock time: 1679.1185 seconds                |
|        coarse grid time: 1581.0314 seconds (94.2%)        |
|        coarsest grid time: 0.0000   seconds (00.0%)        |
| coarsest grid matmul time: 0.0000   seconds (00.0%)        |
|  consumed core minutes*: 8.96e+02 (solve only)           |
|    max used mem/MPIproc: 2.45e+00 GB                     |
+----------------------------------------------------------+
*: only correct if #MPIprocs*#threads == #CPUs

[45, trace: -112305.777727+128.496091, variance: 2048257755.827129] from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.007847+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.009922+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.009084+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.009899+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.006909+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.009616+0.000000i
from fgmres : depth: 1, iter: 401, p->H(1,0) = +0.008628+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.008003+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.008633+0.000000i
from fgmres : depth: 1, iter: 351, p->H(1,0) = +0.008542+0.000000i
+----------------------------------------------------------+
|       FGMRES iterations: 49     coarse average: 435.82   |
| exact relative residual: ||r||/||b|| = 4.097303e-09      |
| elapsed wall clock time: 784.4674 seconds                |
|        coarse grid time: 738.1844 seconds (94.1%)        |
|        coarsest grid time: 0.0000   seconds (00.0%)        |
| coarsest grid matmul time: 0.0000   seconds (00.0%)        |
|  consumed core minutes*: 4.18e+02 (solve only)           |
|    max used mem/MPIproc: 2.45e+00 GB                     |
+----------------------------------------------------------+
*: only correct if #MPIprocs*#threads == #CPUs

[46, trace: -111972.469366+-31.308919, variance: 2012665831.239727] from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.008949+0.000000i
from fgmres : depth: 1, iter: 351, p->H(1,0) = +0.008706+0.000000i
from fgmres : depth: 1, iter: 351, p->H(1,0) = +0.009888+0.000000i
from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.009575+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.009261+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.008173+0.000000i
from fgmres : depth: 1, iter: 501, p->H(1,0) = +0.009895+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.009492+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.007705+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.009618+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.009351+0.000000i
from fgmres : depth: 1, iter: 401, p->H(1,0) = +0.008961+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.009260+0.000000i
from fgmres : depth: 1, iter: 351, p->H(1,0) = +0.006679+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.009233+0.000000i
from fgmres : depth: 1, iter: 501, p->H(1,0) = +0.009057+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.009153+0.000000i
from fgmres : depth: 1, iter: 401, p->H(1,0) = +0.009909+0.000000i
from fgmres : depth: 1, iter: 151, p->H(1,0) = +0.009578+0.000000i
+----------------------------------------------------------+
|       FGMRES iterations: 80     coarse average: 455.39   |
| exact relative residual: ||r||/||b|| = 4.889824e-09      |
| elapsed wall clock time: 1339.4597 seconds                |
|        coarse grid time: 1263.9643 seconds (94.4%)        |
|        coarsest grid time: 0.0000   seconds (00.0%)        |
| coarsest grid matmul time: 0.0000   seconds (00.0%)        |
|  consumed core minutes*: 7.14e+02 (solve only)           |
|    max used mem/MPIproc: 2.45e+00 GB                     |
+----------------------------------------------------------+
*: only correct if #MPIprocs*#threads == #CPUs

[47, trace: -112463.191452+43.865519, variance: 1976240965.124369] from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.009552+0.000000i
from fgmres : depth: 1, iter: 301, p->H(1,0) = +0.009659+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.009635+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.008272+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.009490+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.008139+0.000000i
from fgmres : depth: 1, iter: 301, p->H(1,0) = +0.009894+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.009503+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.008509+0.000000i
from fgmres : depth: 1, iter: 351, p->H(1,0) = +0.008895+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.009072+0.000000i
from fgmres : depth: 1, iter: 351, p->H(1,0) = +0.008815+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.009078+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.008478+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.009174+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.008387+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.008994+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.007564+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.007424+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.008348+0.000000i
from fgmres : depth: 1, iter: 101, p->H(1,0) = +0.008663+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.009671+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.007318+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.006727+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.008869+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.009016+0.000000i
from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.009330+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.009861+0.000000i
from fgmres : depth: 1, iter: 501, p->H(1,0) = +0.009878+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.009858+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.008384+0.000000i
from fgmres : depth: 1, iter: 201, p->H(1,0) = +0.009177+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.009016+0.000000i
+----------------------------------------------------------+
|       FGMRES iterations: 125    coarse average: 450.22   |
| exact relative residual: ||r||/||b|| = 7.203682e-09      |
| elapsed wall clock time: 2072.4170 seconds                |
|        coarse grid time: 1954.0797 seconds (94.3%)        |
|        coarsest grid time: 0.0000   seconds (00.0%)        |
| coarsest grid matmul time: 0.0000   seconds (00.0%)        |
|  consumed core minutes*: 1.11e+03 (solve only)           |
|    max used mem/MPIproc: 2.45e+00 GB                     |
+----------------------------------------------------------+
*: only correct if #MPIprocs*#threads == #CPUs

[48, trace: -112563.585089+-84.708905, variance: 1946438153.850056] from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.008093+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.008865+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.007118+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.009787+0.000000i
from fgmres : depth: 1, iter: 301, p->H(1,0) = +0.009952+0.000000i
from fgmres : depth: 1, iter: 351, p->H(1,0) = +0.008945+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.009392+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.009197+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.009567+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.007802+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.009876+0.000000i
from fgmres : depth: 1, iter: 351, p->H(1,0) = +0.009569+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.008722+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.009798+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.007425+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.009463+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.008458+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.007655+0.000000i
from fgmres : depth: 1, iter: 101, p->H(1,0) = +0.009892+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.009398+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.009830+0.000000i
+----------------------------------------------------------+
|       FGMRES iterations: 91     coarse average: 517.09   |
| exact relative residual: ||r||/||b|| = 8.840201e-09      |
| elapsed wall clock time: 1728.3778 seconds                |
|        coarse grid time: 1642.0591 seconds (95.0%)        |
|        coarsest grid time: 0.0000   seconds (00.0%)        |
| coarsest grid matmul time: 0.0000   seconds (00.0%)        |
|  consumed core minutes*: 9.22e+02 (solve only)           |
|    max used mem/MPIproc: 2.45e+00 GB                     |
+----------------------------------------------------------+
*: only correct if #MPIprocs*#threads == #CPUs

[49, trace: -112596.492459+-120.281187, variance: 1907968500.017598] from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.008838+0.000000i
from fgmres : depth: 1, iter: 301, p->H(1,0) = +0.008647+0.000000i
from fgmres : depth: 1, iter: 251, p->H(1,0) = +0.009722+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.007949+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.008344+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.009824+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.008126+0.000000i
from fgmres : depth: 1, iter: 251, p->H(1,0) = +0.009726+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.009575+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.006484+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.009919+0.000000i
from fgmres : depth: 1, iter: 401, p->H(1,0) = +0.009284+0.000000i
from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.006321+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.009250+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.009813+0.000000i
from fgmres : depth: 1, iter: 501, p->H(1,0) = +0.009991+0.000000i
from fgmres : depth: 1, iter: 101, p->H(1,0) = +0.008099+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.008034+0.000000i
from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.009588+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.009889+0.000000i
from fgmres : depth: 1, iter: 351, p->H(1,0) = +0.009640+0.000000i
+----------------------------------------------------------+
|       FGMRES iterations: 89     coarse average: 542.31   |
| exact relative residual: ||r||/||b|| = 4.243461e-09      |
| elapsed wall clock time: 1771.8689 seconds                |
|        coarse grid time: 1687.5703 seconds (95.2%)        |
|        coarsest grid time: 0.0000   seconds (00.0%)        |
| coarsest grid matmul time: 0.0000   seconds (00.0%)        |
|  consumed core minutes*: 9.45e+02 (solve only)           |
|    max used mem/MPIproc: 2.45e+00 GB                     |
+----------------------------------------------------------+
*: only correct if #MPIprocs*#threads == #CPUs

[50, trace: -113109.742777+-176.277157, variance: 1870188455.970756] from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.008217+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.007403+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.009753+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.007250+0.000000i
from fgmres : depth: 1, iter: 351, p->H(1,0) = +0.009314+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.009610+0.000000i
from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.005874+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.008336+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.009849+0.000000i
from fgmres : depth: 1, iter: 251, p->H(1,0) = +0.007263+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.006179+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.008418+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.007401+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.006913+0.000000i
from fgmres : depth: 1, iter: 401, p->H(1,0) = +0.005921+0.000000i
from fgmres : depth: 1, iter: 501, p->H(1,0) = +0.009300+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.009633+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.006735+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.009093+0.000000i
from fgmres : depth: 1, iter: 501, p->H(1,0) = +0.009074+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.007290+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.009174+0.000000i
from fgmres : depth: 1, iter: 351, p->H(1,0) = +0.007162+0.000000i
from fgmres : depth: 1, iter: 501, p->H(1,0) = +0.008814+0.000000i
from fgmres : depth: 1, iter: 401, p->H(1,0) = +0.007093+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.006651+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.009512+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.009546+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.007846+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.006659+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.009514+0.000000i
from fgmres : depth: 1, iter: 501, p->H(1,0) = +0.007258+0.000000i
from fgmres : depth: 1, iter: 401, p->H(1,0) = +0.008769+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.006274+0.000000i
from fgmres : depth: 1, iter: 401, p->H(1,0) = +0.008542+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.007119+0.000000i
from fgmres : depth: 1, iter: 351, p->H(1,0) = +0.009583+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.009681+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.007843+0.000000i
from fgmres : depth: 1, iter: 351, p->H(1,0) = +0.009629+0.000000i
+----------------------------------------------------------+
|       FGMRES iterations: 147    coarse average: 481.88   |
| exact relative residual: ||r||/||b|| = 6.303616e-09      |
| elapsed wall clock time: 2659.2171 seconds                |
|        coarse grid time: 2518.7311 seconds (94.7%)        |
|        coarsest grid time: 0.0000   seconds (00.0%)        |
| coarsest grid matmul time: 0.0000   seconds (00.0%)        |
|  consumed core minutes*: 1.42e+03 (solve only)           |
|    max used mem/MPIproc: 2.45e+00 GB                     |
+----------------------------------------------------------+
*: only correct if #MPIprocs*#threads == #CPUs

[51, trace: -113299.386338+-124.707489, variance: 1846623455.318837] from fgmres : depth: 1, iter: 401, p->H(1,0) = +0.009261+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.009300+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.008434+0.000000i
from fgmres : depth: 1, iter: 351, p->H(1,0) = +0.009940+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.009734+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.009505+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.006907+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.009198+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.009607+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.009255+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.007224+0.000000i
from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.009621+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.009056+0.000000i
+----------------------------------------------------------+
|       FGMRES iterations: 66     coarse average: 547.47   |
| exact relative residual: ||r||/||b|| = 9.883504e-09      |
| elapsed wall clock time: 1346.9274 seconds                |
|        coarse grid time: 1284.1476 seconds (95.3%)        |
|        coarsest grid time: 0.0000   seconds (00.0%)        |
| coarsest grid matmul time: 0.0000   seconds (00.0%)        |
|  consumed core minutes*: 7.18e+02 (solve only)           |
|    max used mem/MPIproc: 2.45e+00 GB                     |
+----------------------------------------------------------+
*: only correct if #MPIprocs*#threads == #CPUs

[52, trace: -113758.604458+-117.358704, variance: 1813254349.392703] from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.008559+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.009811+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.009853+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.009289+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.008950+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.008982+0.000000i
from fgmres : depth: 1, iter: 501, p->H(1,0) = +0.007946+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.006558+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.009572+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.009818+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.009055+0.000000i
from fgmres : depth: 1, iter: 401, p->H(1,0) = +0.008807+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.008580+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.007945+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.009838+0.000000i
from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.006964+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.008288+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.009582+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.009330+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.007783+0.000000i
from fgmres : depth: 1, iter: 401, p->H(1,0) = +0.009357+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.008388+0.000000i
from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.007626+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.007506+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.009609+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.007289+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.009257+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.008306+0.000000i
+----------------------------------------------------------+
|       FGMRES iterations: 98     coarse average: 513.02   |
| exact relative residual: ||r||/||b|| = 9.170243e-09      |
| elapsed wall clock time: 1873.8698 seconds                |
|        coarse grid time: 1780.6372 seconds (95.0%)        |
|        coarsest grid time: 0.0000   seconds (00.0%)        |
| coarsest grid matmul time: 0.0000   seconds (00.0%)        |
|  consumed core minutes*: 9.99e+02 (solve only)           |
|    max used mem/MPIproc: 2.45e+00 GB                     |
+----------------------------------------------------------+
*: only correct if #MPIprocs*#threads == #CPUs

[53, trace: -113753.516010+-116.298048, variance: 1789803709.714422] from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.008544+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.008043+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.009816+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.006143+0.000000i
from fgmres : depth: 1, iter: 401, p->H(1,0) = +0.008222+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.009142+0.000000i
from fgmres : depth: 1, iter: 351, p->H(1,0) = +0.009925+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.008450+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.009642+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.008614+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.009302+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.008126+0.000000i
from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.008808+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.008188+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.009810+0.000000i
from fgmres : depth: 1, iter: 301, p->H(1,0) = +0.009960+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.007022+0.000000i
from fgmres : depth: 1, iter: 501, p->H(1,0) = +0.009692+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.009302+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.009745+0.000000i
+----------------------------------------------------------+
|       FGMRES iterations: 90     coarse average: 519.10   |
| exact relative residual: ||r||/||b|| = 5.717865e-09      |
| elapsed wall clock time: 1742.9833 seconds                |
|        coarse grid time: 1657.3862 seconds (95.1%)        |
|        coarsest grid time: 0.0000   seconds (00.0%)        |
| coarsest grid matmul time: 0.0000   seconds (00.0%)        |
|  consumed core minutes*: 9.30e+02 (solve only)           |
|    max used mem/MPIproc: 2.45e+00 GB                     |
+----------------------------------------------------------+
*: only correct if #MPIprocs*#threads == #CPUs

[54, trace: -114442.855361+-121.148382, variance: 1757135814.237912] from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.009886+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.009942+0.000000i
from fgmres : depth: 1, iter: 301, p->H(1,0) = +0.008943+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.008701+0.000000i
from fgmres : depth: 1, iter: 501, p->H(1,0) = +0.009689+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.008934+0.000000i
from fgmres : depth: 1, iter: 401, p->H(1,0) = +0.008496+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.008858+0.000000i
from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.008994+0.000000i
from fgmres : depth: 1, iter: 401, p->H(1,0) = +0.008418+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.009531+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.009890+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.009248+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.009866+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.009962+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.009662+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.006832+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.007177+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.009660+0.000000i
from fgmres : depth: 1, iter: 201, p->H(1,0) = +0.008221+0.000000i
from fgmres : depth: 1, iter: 51, p->H(1,0) = +0.008929+0.000000i
from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.008461+0.000000i
from fgmres : depth: 1, iter: 401, p->H(1,0) = +0.009099+0.000000i
+----------------------------------------------------------+
|       FGMRES iterations: 100    coarse average: 491.31   |
| exact relative residual: ||r||/||b|| = 9.055602e-09      |
| elapsed wall clock time: 1836.6669 seconds                |
|        coarse grid time: 1741.4960 seconds (94.8%)        |
|        coarsest grid time: 0.0000   seconds (00.0%)        |
| coarsest grid matmul time: 0.0000   seconds (00.0%)        |
|  consumed core minutes*: 9.80e+02 (solve only)           |
|    max used mem/MPIproc: 2.45e+00 GB                     |
+----------------------------------------------------------+
*: only correct if #MPIprocs*#threads == #CPUs

[55, trace: -114087.993991+-119.095988, variance: 1750508711.493680] from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.008965+0.000000i
from fgmres : depth: 1, iter: 301, p->H(1,0) = +0.006446+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.009505+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.009936+0.000000i
from fgmres : depth: 1, iter: 401, p->H(1,0) = +0.009165+0.000000i
from fgmres : depth: 1, iter: 351, p->H(1,0) = +0.008552+0.000000i
from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.008550+0.000000i
from fgmres : depth: 1, iter: 301, p->H(1,0) = +0.009674+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.006410+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.009746+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.008650+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.006831+0.000000i
+----------------------------------------------------------+
|       FGMRES iterations: 62     coarse average: 540.16   |
| exact relative residual: ||r||/||b|| = 9.908864e-09      |
| elapsed wall clock time: 1249.1355 seconds                |
|        coarse grid time: 1190.3386 seconds (95.3%)        |
|        coarsest grid time: 0.0000   seconds (00.0%)        |
| coarsest grid matmul time: 0.0000   seconds (00.0%)        |
|  consumed core minutes*: 6.66e+02 (solve only)           |
|    max used mem/MPIproc: 2.45e+00 GB                     |
+----------------------------------------------------------+
*: only correct if #MPIprocs*#threads == #CPUs

[56, trace: -114582.233710+-91.202446, variance: 1726297190.482087] from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.009477+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.007113+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.009554+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.009659+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.008303+0.000000i
from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.007464+0.000000i
from fgmres : depth: 1, iter: 401, p->H(1,0) = +0.008384+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.008413+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.009958+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.006966+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.009844+0.000000i
from fgmres : depth: 1, iter: 501, p->H(1,0) = +0.009085+0.000000i
from fgmres : depth: 1, iter: 401, p->H(1,0) = +0.009994+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.008540+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.007877+0.000000i
from fgmres : depth: 1, iter: 201, p->H(1,0) = +0.009748+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.008428+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.009985+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.008785+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.008145+0.000000i
from fgmres : depth: 1, iter: 351, p->H(1,0) = +0.009919+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.009475+0.000000i
from fgmres : depth: 1, iter: 401, p->H(1,0) = +0.006460+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.008972+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.008646+0.000000i
from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.009681+0.000000i
+----------------------------------------------------------+
|       FGMRES iterations: 98     coarse average: 456.74   |
| exact relative residual: ||r||/||b|| = 7.615563e-09      |
| elapsed wall clock time: 1675.9758 seconds                |
|        coarse grid time: 1583.1978 seconds (94.5%)        |
|        coarsest grid time: 0.0000   seconds (00.0%)        |
| coarsest grid matmul time: 0.0000   seconds (00.0%)        |
|  consumed core minutes*: 8.94e+02 (solve only)           |
|    max used mem/MPIproc: 2.45e+00 GB                     |
+----------------------------------------------------------+
*: only correct if #MPIprocs*#threads == #CPUs

[57, trace: -114983.320413+-92.626989, variance: 1709654248.788500] from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.009923+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.009349+0.000000i
from fgmres : depth: 1, iter: 351, p->H(1,0) = +0.007861+0.000000i
from fgmres : depth: 1, iter: 401, p->H(1,0) = +0.008891+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.009039+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.008101+0.000000i
from fgmres : depth: 1, iter: 401, p->H(1,0) = +0.008834+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.009772+0.000000i
+----------------------------------------------------------+
|       FGMRES iterations: 47     coarse average: 450.60   |
| exact relative residual: ||r||/||b|| = 9.762032e-09      |
| elapsed wall clock time: 791.7487 seconds                |
|        coarse grid time: 747.2506 seconds (94.4%)        |
|        coarsest grid time: 0.0000   seconds (00.0%)        |
| coarsest grid matmul time: 0.0000   seconds (00.0%)        |
|  consumed core minutes*: 4.22e+02 (solve only)           |
|    max used mem/MPIproc: 2.45e+00 GB                     |
+----------------------------------------------------------+
*: only correct if #MPIprocs*#threads == #CPUs

[58, trace: -115051.053690+-45.418155, variance: 1689195905.590488] from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.008352+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.009653+0.000000i
from fgmres : depth: 1, iter: 201, p->H(1,0) = +0.009602+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.007379+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.008331+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.006792+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.006943+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.007835+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.007588+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.009928+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.009392+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.008963+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.008800+0.000000i
from fgmres : depth: 1, iter: 301, p->H(1,0) = +0.009851+0.000000i
from fgmres : depth: 1, iter: 351, p->H(1,0) = +0.009979+0.000000i
+----------------------------------------------------------+
|       FGMRES iterations: 66     coarse average: 387.85   |
| exact relative residual: ||r||/||b|| = 8.703892e-09      |
| elapsed wall clock time: 968.7925 seconds                |
|        coarse grid time: 905.9102 seconds (93.5%)        |
|        coarsest grid time: 0.0000   seconds (00.0%)        |
| coarsest grid matmul time: 0.0000   seconds (00.0%)        |
|  consumed core minutes*: 5.17e+02 (solve only)           |
|    max used mem/MPIproc: 2.45e+00 GB                     |
+----------------------------------------------------------+
*: only correct if #MPIprocs*#threads == #CPUs

[59, trace: -114537.681731+-98.763484, variance: 1661220517.376120] from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.008403+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.009946+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.008224+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.009237+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.008348+0.000000i
from fgmres : depth: 1, iter: 401, p->H(1,0) = +0.009686+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.009538+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.008100+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.007283+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.008745+0.000000i
from fgmres : depth: 1, iter: 501, p->H(1,0) = +0.009179+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.009021+0.000000i
from fgmres : depth: 1, iter: 501, p->H(1,0) = +0.007832+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.009535+0.000000i
from fgmres : depth: 1, iter: 201, p->H(1,0) = +0.009487+0.000000i
from fgmres : depth: 1, iter: 301, p->H(1,0) = +0.006730+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.008867+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.009962+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.006289+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.009978+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.008337+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.007027+0.000000i
from fgmres : depth: 1, iter: 251, p->H(1,0) = +0.007243+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.008523+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.008246+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.008861+0.000000i
from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.009517+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.009839+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.009246+0.000000i
from fgmres : depth: 1, iter: 151, p->H(1,0) = +0.009968+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.007875+0.000000i
from fgmres : depth: 1, iter: 401, p->H(1,0) = +0.006927+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.007857+0.000000i
+----------------------------------------------------------+
|       FGMRES iterations: 118    coarse average: 435.74   |
| exact relative residual: ||r||/||b|| = 7.164107e-09      |
| elapsed wall clock time: 1931.2382 seconds                |
|        coarse grid time: 1819.3643 seconds (94.2%)        |
|        coarsest grid time: 0.0000   seconds (00.0%)        |
| coarsest grid matmul time: 0.0000   seconds (00.0%)        |
|  consumed core minutes*: 1.03e+03 (solve only)           |
|    max used mem/MPIproc: 2.45e+00 GB                     |
+----------------------------------------------------------+
*: only correct if #MPIprocs*#threads == #CPUs

[60, trace: -114408.965859+-114.467100, variance: 1649005759.648160] from fgmres : depth: 1, iter: 401, p->H(1,0) = +0.006361+0.000000i
from fgmres : depth: 1, iter: 351, p->H(1,0) = +0.009001+0.000000i
from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.008972+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.009898+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.009647+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.009044+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.007901+0.000000i
+----------------------------------------------------------+
|       FGMRES iterations: 42     coarse average: 567.36   |
| exact relative residual: ||r||/||b|| = 6.038358e-09      |
| elapsed wall clock time: 881.9339 seconds                |
|        coarse grid time: 842.0823 seconds (95.5%)        |
|        coarsest grid time: 0.0000   seconds (00.0%)        |
| coarsest grid matmul time: 0.0000   seconds (00.0%)        |
|  consumed core minutes*: 4.70e+02 (solve only)           |
|    max used mem/MPIproc: 2.45e+00 GB                     |
+----------------------------------------------------------+
*: only correct if #MPIprocs*#threads == #CPUs

[61, trace: -115584.428319+-168.892096, variance: 1624349876.432336] from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.008915+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.009692+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.007483+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.009871+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.009043+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.008810+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.007198+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.009726+0.000000i
from fgmres : depth: 1, iter: 401, p->H(1,0) = +0.007510+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.009983+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.009221+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.009279+0.000000i
from fgmres : depth: 1, iter: 251, p->H(1,0) = +0.008533+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.006505+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.009957+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.009400+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.009847+0.000000i
from fgmres : depth: 1, iter: 501, p->H(1,0) = +0.007098+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.009935+0.000000i
+----------------------------------------------------------+
|       FGMRES iterations: 74     coarse average: 541.43   |
| exact relative residual: ||r||/||b|| = 8.328521e-09      |
| elapsed wall clock time: 1484.6034 seconds                |
|        coarse grid time: 1414.4204 seconds (95.3%)        |
|        coarsest grid time: 0.0000   seconds (00.0%)        |
| coarsest grid matmul time: 0.0000   seconds (00.0%)        |
|  consumed core minutes*: 7.92e+02 (solve only)           |
|    max used mem/MPIproc: 2.45e+00 GB                     |
+----------------------------------------------------------+
*: only correct if #MPIprocs*#threads == #CPUs

[62, trace: -115682.912390+-214.323958, variance: 1681265225.977423] from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.009258+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.009352+0.000000i
from fgmres : depth: 1, iter: 301, p->H(1,0) = +0.008783+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.008522+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.008414+0.000000i
from fgmres : depth: 1, iter: 401, p->H(1,0) = +0.006993+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.009798+0.000000i
from fgmres : depth: 1, iter: 301, p->H(1,0) = +0.006380+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.008035+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.006429+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.009022+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.008740+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.008595+0.000000i
from fgmres : depth: 1, iter: 351, p->H(1,0) = +0.009711+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.009223+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.007143+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.007187+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.006170+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.009645+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.007503+0.000000i
from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.008875+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.009632+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.009632+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.009845+0.000000i
from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.008554+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.007875+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.006649+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.009446+0.000000i
from fgmres : depth: 1, iter: 501, p->H(1,0) = +0.006679+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.009927+0.000000i
from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.009925+0.000000i
from fgmres : depth: 1, iter: 351, p->H(1,0) = +0.008254+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.006657+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.009871+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.009810+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.007039+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.007631+0.000000i
from fgmres : depth: 1, iter: 501, p->H(1,0) = +0.009526+0.000000i
from fgmres : depth: 1, iter: 501, p->H(1,0) = +0.007408+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.007990+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.008494+0.000000i
+----------------------------------------------------------+
|       FGMRES iterations: 138    coarse average: 459.62   |
| exact relative residual: ||r||/||b|| = 9.629220e-09      |
| elapsed wall clock time: 2368.1865 seconds                |
|        coarse grid time: 2237.0463 seconds (94.5%)        |
|        coarsest grid time: 0.0000   seconds (00.0%)        |
| coarsest grid matmul time: 0.0000   seconds (00.0%)        |
|  consumed core minutes*: 1.26e+03 (solve only)           |
|    max used mem/MPIproc: 2.45e+00 GB                     |
+----------------------------------------------------------+
*: only correct if #MPIprocs*#threads == #CPUs

[63, trace: -115978.109481+-203.584440, variance: 1655383472.878586] from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.008177+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.005626+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.009271+0.000000i
from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.008370+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.009167+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.007029+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.009526+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.008382+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.007040+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.009577+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.008423+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.008718+0.000000i
from fgmres : depth: 1, iter: 501, p->H(1,0) = +0.008526+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.009555+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.009547+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.008329+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.009112+0.000000i
from fgmres : depth: 1, iter: 501, p->H(1,0) = +0.007388+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.009316+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.008101+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.006598+0.000000i
from fgmres : depth: 1, iter: 501, p->H(1,0) = +0.009137+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.009427+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.005991+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.008951+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.007391+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.008628+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.009331+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.009685+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.009465+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.008538+0.000000i
from fgmres : depth: 1, iter: 401, p->H(1,0) = +0.009440+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.007472+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.007508+0.000000i
+----------------------------------------------------------+
|       FGMRES iterations: 117    coarse average: 526.68   |
| exact relative residual: ||r||/||b|| = 4.749948e-09      |
| elapsed wall clock time: 2287.2810 seconds                |
|        coarse grid time: 2176.2002 seconds (95.1%)        |
|        coarsest grid time: 0.0000   seconds (00.0%)        |
| coarsest grid matmul time: 0.0000   seconds (00.0%)        |
|  consumed core minutes*: 1.22e+03 (solve only)           |
|    max used mem/MPIproc: 2.45e+00 GB                     |
+----------------------------------------------------------+
*: only correct if #MPIprocs*#threads == #CPUs

[64, trace: -116547.913078+-216.247002, variance: 1635254218.899327] from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.009849+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.007809+0.000000i
from fgmres : depth: 1, iter: 401, p->H(1,0) = +0.006339+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.007290+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.008788+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.009599+0.000000i
from fgmres : depth: 1, iter: 501, p->H(1,0) = +0.007869+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.009464+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.008710+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.007945+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.009432+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.009726+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.008921+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.005640+0.000000i
from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.009747+0.000000i
from fgmres : depth: 1, iter: 401, p->H(1,0) = +0.008036+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.009432+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.008631+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.008690+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.007680+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.009835+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.008174+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.006371+0.000000i
from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.009303+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.009287+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.007561+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.009586+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.009293+0.000000i
+----------------------------------------------------------+
|       FGMRES iterations: 101    coarse average: 439.34   |
| exact relative residual: ||r||/||b|| = 5.770072e-09      |
| elapsed wall clock time: 1664.6562 seconds                |
|        coarse grid time: 1568.3330 seconds (94.2%)        |
|        coarsest grid time: 0.0000   seconds (00.0%)        |
| coarsest grid matmul time: 0.0000   seconds (00.0%)        |
|  consumed core minutes*: 8.88e+02 (solve only)           |
|    max used mem/MPIproc: 2.45e+00 GB                     |
+----------------------------------------------------------+
*: only correct if #MPIprocs*#threads == #CPUs

[65, trace: -116616.952012+-275.829822, variance: 1630574473.909993] from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.009693+0.000000i
from fgmres : depth: 1, iter: 351, p->H(1,0) = +0.009561+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.007519+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.009986+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.009796+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.009454+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.008364+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.008774+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.009647+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.007056+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.009823+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.006657+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.009895+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.008187+0.000000i
from fgmres : depth: 1, iter: 501, p->H(1,0) = +0.007843+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.009215+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.007472+0.000000i
from fgmres : depth: 1, iter: 401, p->H(1,0) = +0.007858+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.007179+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.009540+0.000000i
+----------------------------------------------------------+
|       FGMRES iterations: 80     coarse average: 498.45   |
| exact relative residual: ||r||/||b|| = 8.604308e-09      |
| elapsed wall clock time: 1489.1056 seconds                |
|        coarse grid time: 1412.8902 seconds (94.9%)        |
|        coarsest grid time: 0.0000   seconds (00.0%)        |
| coarsest grid matmul time: 0.0000   seconds (00.0%)        |
|  consumed core minutes*: 7.94e+02 (solve only)           |
|    max used mem/MPIproc: 2.45e+00 GB                     |
+----------------------------------------------------------+
*: only correct if #MPIprocs*#threads == #CPUs

[66, trace: -117460.921142+-291.697881, variance: 1607113716.911454] from fgmres : depth: 1, iter: 401, p->H(1,0) = +0.009974+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.006913+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.009715+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.008575+0.000000i
from fgmres : depth: 1, iter: 301, p->H(1,0) = +0.009938+0.000000i
from fgmres : depth: 1, iter: 501, p->H(1,0) = +0.009513+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.009821+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.008515+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.008557+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.005358+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.006969+0.000000i
from fgmres : depth: 1, iter: 351, p->H(1,0) = +0.007350+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.009123+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.009062+0.000000i
from fgmres : depth: 1, iter: 251, p->H(1,0) = +0.008820+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.009128+0.000000i
from fgmres : depth: 1, iter: 151, p->H(1,0) = +0.009593+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.006940+0.000000i
from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.009880+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.006899+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.008804+0.000000i
from fgmres : depth: 1, iter: 101, p->H(1,0) = +0.007794+0.000000i
from fgmres : depth: 1, iter: 401, p->H(1,0) = +0.009365+0.000000i
from fgmres : depth: 1, iter: 351, p->H(1,0) = +0.009199+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.009189+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.008657+0.000000i
from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.008988+0.000000i
+----------------------------------------------------------+
|       FGMRES iterations: 110    coarse average: 448.09   |
| exact relative residual: ||r||/||b|| = 5.647548e-09      |
| elapsed wall clock time: 1841.4818 seconds                |
|        coarse grid time: 1737.3093 seconds (94.3%)        |
|        coarsest grid time: 0.0000   seconds (00.0%)        |
| coarsest grid matmul time: 0.0000   seconds (00.0%)        |
|  consumed core minutes*: 9.82e+02 (solve only)           |
|    max used mem/MPIproc: 2.45e+00 GB                     |
+----------------------------------------------------------+
*: only correct if #MPIprocs*#threads == #CPUs

[67, trace: -117929.449435+-271.279827, variance: 1629672335.267075] from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.009589+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.009299+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.009337+0.000000i
from fgmres : depth: 1, iter: 501, p->H(1,0) = +0.009700+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.009388+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.008092+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.009515+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.009844+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.009752+0.000000i
+----------------------------------------------------------+
|       FGMRES iterations: 57     coarse average: 525.04   |
| exact relative residual: ||r||/||b|| = 7.295435e-09      |
| elapsed wall clock time: 1109.1597 seconds                |
|        coarse grid time: 1055.1897 seconds (95.1%)        |
|        coarsest grid time: 0.0000   seconds (00.0%)        |
| coarsest grid matmul time: 0.0000   seconds (00.0%)        |
|  consumed core minutes*: 5.92e+02 (solve only)           |
|    max used mem/MPIproc: 2.45e+00 GB                     |
+----------------------------------------------------------+
*: only correct if #MPIprocs*#threads == #CPUs

[68, trace: -118098.404687+-265.050882, variance: 1620254138.114153] from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.007148+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.008415+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.008112+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.009457+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.009694+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.009872+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.007651+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.009483+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.009678+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.008633+0.000000i
from fgmres : depth: 1, iter: 351, p->H(1,0) = +0.009541+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.009765+0.000000i
from fgmres : depth: 1, iter: 251, p->H(1,0) = +0.009434+0.000000i
from fgmres : depth: 1, iter: 251, p->H(1,0) = +0.009025+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.009576+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.008335+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.007478+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.007503+0.000000i
from fgmres : depth: 1, iter: 351, p->H(1,0) = +0.009329+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.009549+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.007728+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.007962+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.007539+0.000000i
from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.006662+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.009466+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.006313+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.007196+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.009486+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.008903+0.000000i
from fgmres : depth: 1, iter: 301, p->H(1,0) = +0.009697+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.009399+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.007933+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.009010+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.009561+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.008252+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.007815+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.008297+0.000000i
from fgmres : depth: 1, iter: 501, p->H(1,0) = +0.008296+0.000000i
+----------------------------------------------------------+
|       FGMRES iterations: 129    coarse average: 473.72   |
| exact relative residual: ||r||/||b|| = 9.955796e-09      |
| elapsed wall clock time: 2280.5073 seconds                |
|        coarse grid time: 2158.0070 seconds (94.6%)        |
|        coarsest grid time: 0.0000   seconds (00.0%)        |
| coarsest grid matmul time: 0.0000   seconds (00.0%)        |
|  consumed core minutes*: 1.22e+03 (solve only)           |
|    max used mem/MPIproc: 2.45e+00 GB                     |
+----------------------------------------------------------+
*: only correct if #MPIprocs*#threads == #CPUs

[69, trace: -118376.724086+-268.653984, variance: 1598765256.371941] from fgmres : depth: 1, iter: 401, p->H(1,0) = +0.009872+0.000000i
from fgmres : depth: 1, iter: 351, p->H(1,0) = +0.009416+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.008776+0.000000i
from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.005815+0.000000i
from fgmres : depth: 1, iter: 501, p->H(1,0) = +0.009756+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.009456+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.007017+0.000000i
from fgmres : depth: 1, iter: 201, p->H(1,0) = +0.007273+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.007730+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.008477+0.000000i
from fgmres : depth: 1, iter: 501, p->H(1,0) = +0.009792+0.000000i
from fgmres : depth: 1, iter: 401, p->H(1,0) = +0.009190+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.009484+0.000000i
from fgmres : depth: 1, iter: 501, p->H(1,0) = +0.009397+0.000000i
from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.009915+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.008155+0.000000i
from fgmres : depth: 1, iter: 401, p->H(1,0) = +0.007154+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.009306+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.009027+0.000000i
from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.008681+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.009057+0.000000i
from fgmres : depth: 1, iter: 301, p->H(1,0) = +0.009780+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.007619+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.009787+0.000000i
from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.009568+0.000000i
from fgmres : depth: 1, iter: 501, p->H(1,0) = +0.009096+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.007937+0.000000i
+----------------------------------------------------------+
|       FGMRES iterations: 97     coarse average: 437.06   |
| exact relative residual: ||r||/||b|| = 9.118214e-09      |
| elapsed wall clock time: 1592.4847 seconds                |
|        coarse grid time: 1500.1625 seconds (94.2%)        |
|        coarsest grid time: 0.0000   seconds (00.0%)        |
| coarsest grid matmul time: 0.0000   seconds (00.0%)        |
|  consumed core minutes*: 8.49e+02 (solve only)           |
|    max used mem/MPIproc: 2.45e+00 GB                     |
+----------------------------------------------------------+
*: only correct if #MPIprocs*#threads == #CPUs

[70, trace: -118639.824709+-228.620653, variance: 1581265961.683884] from fgmres : depth: 1, iter: 301, p->H(1,0) = +0.008897+0.000000i
from fgmres : depth: 1, iter: 351, p->H(1,0) = +0.009258+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.009628+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.007851+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.007070+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.009576+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.007176+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.008673+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.008698+0.000000i
from fgmres : depth: 1, iter: 401, p->H(1,0) = +0.009449+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.009100+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.008953+0.000000i
from fgmres : depth: 1, iter: 401, p->H(1,0) = +0.007657+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.009749+0.000000i
+----------------------------------------------------------+
|       FGMRES iterations: 66     coarse average: 540.79   |
| exact relative residual: ||r||/||b|| = 7.304909e-09      |
| elapsed wall clock time: 1327.5083 seconds                |
|        coarse grid time: 1264.9584 seconds (95.3%)        |
|        coarsest grid time: 0.0000   seconds (00.0%)        |
| coarsest grid matmul time: 0.0000   seconds (00.0%)        |
|  consumed core minutes*: 7.08e+02 (solve only)           |
|    max used mem/MPIproc: 2.45e+00 GB                     |
+----------------------------------------------------------+
*: only correct if #MPIprocs*#threads == #CPUs

[71, trace: -119089.672488+-212.865185, variance: 1564085116.665805] from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.009818+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.008315+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.007277+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.009202+0.000000i
from fgmres : depth: 1, iter: 401, p->H(1,0) = +0.007548+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.009998+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.009651+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.009812+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.009629+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.007797+0.000000i
from fgmres : depth: 1, iter: 201, p->H(1,0) = +0.007454+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.009948+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.009925+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.009455+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.008559+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.007375+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.008135+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.008672+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.009734+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.009664+0.000000i
from fgmres : depth: 1, iter: 351, p->H(1,0) = +0.009507+0.000000i
from fgmres : depth: 1, iter: 401, p->H(1,0) = +0.008563+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.007599+0.000000i
from fgmres : depth: 1, iter: 401, p->H(1,0) = +0.009807+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.009466+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.009214+0.000000i
from fgmres : depth: 1, iter: 401, p->H(1,0) = +0.007835+0.000000i
+----------------------------------------------------------+
|       FGMRES iterations: 114    coarse average: 486.28   |
| exact relative residual: ||r||/||b|| = 8.499256e-09      |
| elapsed wall clock time: 2073.0842 seconds                |
|        coarse grid time: 1964.8270 seconds (94.8%)        |
|        coarsest grid time: 0.0000   seconds (00.0%)        |
| coarsest grid matmul time: 0.0000   seconds (00.0%)        |
|  consumed core minutes*: 1.11e+03 (solve only)           |
|    max used mem/MPIproc: 2.45e+00 GB                     |
+----------------------------------------------------------+
*: only correct if #MPIprocs*#threads == #CPUs

[72, trace: -119162.151059+-244.090298, variance: 1556553542.589817] from fgmres : depth: 1, iter: 351, p->H(1,0) = +0.009466+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.007722+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.009505+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.009774+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.009317+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.008915+0.000000i
from fgmres : depth: 1, iter: 251, p->H(1,0) = +0.006601+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.009119+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.008854+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.009317+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.009594+0.000000i
+----------------------------------------------------------+
|       FGMRES iterations: 60     coarse average: 561.08   |
| exact relative residual: ||r||/||b|| = 4.996729e-09      |
| elapsed wall clock time: 1248.3678 seconds                |
|        coarse grid time: 1191.3533 seconds (95.4%)        |
|        coarsest grid time: 0.0000   seconds (00.0%)        |
| coarsest grid matmul time: 0.0000   seconds (00.0%)        |
|  consumed core minutes*: 6.66e+02 (solve only)           |
|    max used mem/MPIproc: 2.45e+00 GB                     |
+----------------------------------------------------------+
*: only correct if #MPIprocs*#threads == #CPUs

[73, trace: -119285.789694+-202.532564, variance: 1535690188.914391] from fgmres : depth: 1, iter: 501, p->H(1,0) = +0.009291+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.007413+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.009410+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.007443+0.000000i
from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.008189+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.007325+0.000000i
from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.007979+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.009436+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.006300+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.008640+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.009238+0.000000i
from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.009595+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.009004+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.008084+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.009188+0.000000i
from fgmres : depth: 1, iter: 351, p->H(1,0) = +0.009816+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.007439+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.009459+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.009577+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.008585+0.000000i
from fgmres : depth: 1, iter: 301, p->H(1,0) = +0.009174+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.007315+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.009870+0.000000i
from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.008590+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.007973+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.008818+0.000000i
from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.009100+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.009343+0.000000i
from fgmres : depth: 1, iter: 351, p->H(1,0) = +0.006741+0.000000i
+----------------------------------------------------------+
|       FGMRES iterations: 100    coarse average: 532.36   |
| exact relative residual: ||r||/||b|| = 5.947734e-09      |
| elapsed wall clock time: 1980.5268 seconds                |
|        coarse grid time: 1885.1824 seconds (95.2%)        |
|        coarsest grid time: 0.0000   seconds (00.0%)        |
| coarsest grid matmul time: 0.0000   seconds (00.0%)        |
|  consumed core minutes*: 1.06e+03 (solve only)           |
|    max used mem/MPIproc: 2.45e+00 GB                     |
+----------------------------------------------------------+
*: only correct if #MPIprocs*#threads == #CPUs

[74, trace: -119487.024094+-213.808398, variance: 1516203447.257286] from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.008954+0.000000i
from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.008781+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.009270+0.000000i
from fgmres : depth: 1, iter: 401, p->H(1,0) = +0.008797+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.008127+0.000000i
from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.009653+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.007517+0.000000i
from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.007270+0.000000i
from fgmres : depth: 1, iter: 201, p->H(1,0) = +0.007080+0.000000i
from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.008988+0.000000i
from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.007407+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.008455+0.000000i
from fgmres : depth: 1, iter: 251, p->H(1,0) = +0.009177+0.000000i
from fgmres : depth: 1, iter: 401, p->H(1,0) = +0.009714+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.009066+0.000000i
from fgmres : depth: 1, iter: 251, p->H(1,0) = +0.009752+0.000000i
from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.009738+0.000000i
from fgmres : depth: 1, iter: 501, p->H(1,0) = +0.009028+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.009520+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.007941+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.009558+0.000000i
from fgmres : depth: 1, iter: 401, p->H(1,0) = +0.008695+0.000000i
from fgmres : depth: 1, iter: 351, p->H(1,0) = +0.009768+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.005323+0.000000i
from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.009356+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.009074+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.008920+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.006710+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.009318+0.000000i
from fgmres : depth: 1, iter: 401, p->H(1,0) = +0.008194+0.000000i
from fgmres : depth: 1, iter: 501, p->H(1,0) = +0.007769+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.009931+0.000000i
from fgmres : depth: 1, iter: 501, p->H(1,0) = +0.007663+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.005869+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.008599+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.009678+0.000000i
from fgmres : depth: 1, iter: 501, p->H(1,0) = +0.009595+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.007334+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.008918+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.006146+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.009447+0.000000i
+----------------------------------------------------------+
|       FGMRES iterations: 142    coarse average: 484.33   |
| exact relative residual: ||r||/||b|| = 8.706274e-09      |
| elapsed wall clock time: 2567.0235 seconds                |
|        coarse grid time: 2431.9687 seconds (94.7%)        |
|        coarsest grid time: 0.0000   seconds (00.0%)        |
| coarsest grid matmul time: 0.0000   seconds (00.0%)        |
|  consumed core minutes*: 1.37e+03 (solve only)           |
|    max used mem/MPIproc: 2.45e+00 GB                     |
+----------------------------------------------------------+
*: only correct if #MPIprocs*#threads == #CPUs

[75, trace: -119815.681529+-192.632858, variance: 1499061844.291962] from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.009118+0.000000i
from fgmres : depth: 1, iter: 301, p->H(1,0) = +0.007948+0.000000i
from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.007881+0.000000i
from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.009747+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.009788+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.009116+0.000000i
+----------------------------------------------------------+
|       FGMRES iterations: 38     coarse average: 493.95   |
| exact relative residual: ||r||/||b|| = 7.112817e-09      |
| elapsed wall clock time: 699.6785 seconds                |
|        coarse grid time: 663.7628 seconds (94.9%)        |
|        coarsest grid time: 0.0000   seconds (00.0%)        |
| coarsest grid matmul time: 0.0000   seconds (00.0%)        |
|  consumed core minutes*: 3.73e+02 (solve only)           |
|    max used mem/MPIproc: 2.45e+00 GB                     |
+----------------------------------------------------------+
*: only correct if #MPIprocs*#threads == #CPUs

[76, trace: -120044.509471+-188.758767, variance: 1487417495.090321] from fgmres : depth: 1, iter: 351, p->H(1,0) = +0.007711+0.000000i
from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.006867+0.000000i
from fgmres : depth: 1, iter: 501, p->H(1,0) = +0.009170+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.007827+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.006865+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.009111+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.008300+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.009068+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.007199+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.009767+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.008409+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.006371+0.000000i
from fgmres : depth: 1, iter: 351, p->H(1,0) = +0.008585+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.009959+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.009820+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.009732+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.007081+0.000000i
from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.009624+0.000000i
from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.007942+0.000000i
from fgmres : depth: 1, iter: 401, p->H(1,0) = +0.009575+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.008891+0.000000i
from fgmres : depth: 1, iter: 401, p->H(1,0) = +0.009022+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.009791+0.000000i
from fgmres : depth: 1, iter: 501, p->H(1,0) = +0.009881+0.000000i
+----------------------------------------------------------+
|       FGMRES iterations: 97     coarse average: 512.87   |
| exact relative residual: ||r||/||b|| = 5.770544e-09      |
| elapsed wall clock time: 1851.2845 seconds                |
|        coarse grid time: 1758.8386 seconds (95.0%)        |
|        coarsest grid time: 0.0000   seconds (00.0%)        |
| coarsest grid matmul time: 0.0000   seconds (00.0%)        |
|  consumed core minutes*: 9.87e+02 (solve only)           |
|    max used mem/MPIproc: 2.45e+00 GB                     |
+----------------------------------------------------------+
*: only correct if #MPIprocs*#threads == #CPUs

[77, trace: -120065.962301+-201.223935, variance: 1472029973.275448] from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.009928+0.000000i
from fgmres : depth: 1, iter: 501, p->H(1,0) = +0.009616+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.009511+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.008386+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.009555+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.008566+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.008074+0.000000i
from fgmres : depth: 1, iter: 101, p->H(1,0) = +0.009842+0.000000i
from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.007988+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.009816+0.000000i
from fgmres : depth: 1, iter: 351, p->H(1,0) = +0.009971+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.009966+0.000000i
from fgmres : depth: 1, iter: 351, p->H(1,0) = +0.008152+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.009435+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.009066+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.007532+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.009535+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.007963+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.009473+0.000000i
from fgmres : depth: 1, iter: 251, p->H(1,0) = +0.006977+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.006954+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.009429+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.007008+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.007353+0.000000i
from fgmres : depth: 1, iter: 101, p->H(1,0) = +0.008814+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.009667+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.008591+0.000000i
from fgmres : depth: 1, iter: 501, p->H(1,0) = +0.008505+0.000000i
from fgmres : depth: 1, iter: 351, p->H(1,0) = +0.009059+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.009578+0.000000i
from fgmres : depth: 1, iter: 101, p->H(1,0) = +0.009551+0.000000i
+----------------------------------------------------------+
|       FGMRES iterations: 108    coarse average: 413.61   |
| exact relative residual: ||r||/||b|| = 9.156287e-09      |
| elapsed wall clock time: 1681.4603 seconds                |
|        coarse grid time: 1578.5775 seconds (93.9%)        |
|        coarsest grid time: 0.0000   seconds (00.0%)        |
| coarsest grid matmul time: 0.0000   seconds (00.0%)        |
|  consumed core minutes*: 8.97e+02 (solve only)           |
|    max used mem/MPIproc: 2.45e+00 GB                     |
+----------------------------------------------------------+
*: only correct if #MPIprocs*#threads == #CPUs

[78, trace: -119361.699207+-169.471354, variance: 1453701582.682394] from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.009852+0.000000i
from fgmres : depth: 1, iter: 501, p->H(1,0) = +0.009192+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.009244+0.000000i
+----------------------------------------------------------+
|       FGMRES iterations: 35     coarse average: 486.34   |
| exact relative residual: ||r||/||b|| = 7.535823e-09      |
| elapsed wall clock time: 633.6788 seconds                |
|        coarse grid time: 600.6503 seconds (94.8%)        |
|        coarsest grid time: 0.0000   seconds (00.0%)        |
| coarsest grid matmul time: 0.0000   seconds (00.0%)        |
|  consumed core minutes*: 3.38e+02 (solve only)           |
|    max used mem/MPIproc: 2.45e+00 GB                     |
+----------------------------------------------------------+
*: only correct if #MPIprocs*#threads == #CPUs

[79, trace: -119631.713908+-162.450656, variance: 1473648139.521568] from fgmres : depth: 1, iter: 501, p->H(1,0) = +0.007213+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.009461+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.008692+0.000000i
from fgmres : depth: 1, iter: 351, p->H(1,0) = +0.008731+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.009087+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.009800+0.000000i
from fgmres : depth: 1, iter: 401, p->H(1,0) = +0.009704+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.007521+0.000000i
from fgmres : depth: 1, iter: 251, p->H(1,0) = +0.009979+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.009215+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.007288+0.000000i
from fgmres : depth: 1, iter: 301, p->H(1,0) = +0.009625+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.009695+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.009133+0.000000i
from fgmres : depth: 1, iter: 401, p->H(1,0) = +0.009707+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.006880+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.009569+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.009576+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.009903+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.006833+0.000000i
from fgmres : depth: 1, iter: 501, p->H(1,0) = +0.009306+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.008412+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.008347+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.008872+0.000000i
+----------------------------------------------------------+
|       FGMRES iterations: 101    coarse average: 501.40   |
| exact relative residual: ||r||/||b|| = 7.537985e-09      |
| elapsed wall clock time: 1890.1446 seconds                |
|        coarse grid time: 1793.8735 seconds (94.9%)        |
|        coarsest grid time: 0.0000   seconds (00.0%)        |
| coarsest grid matmul time: 0.0000   seconds (00.0%)        |
|  consumed core minutes*: 1.01e+03 (solve only)           |
|    max used mem/MPIproc: 2.45e+00 GB                     |
+----------------------------------------------------------+
*: only correct if #MPIprocs*#threads == #CPUs

[80, trace: -118471.907760+-139.651773, variance: 1462264783.709876] from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.008103+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.009888+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.008729+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.009148+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.006103+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.009171+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.009842+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.007394+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.008920+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.009959+0.000000i
from fgmres : depth: 1, iter: 401, p->H(1,0) = +0.008877+0.000000i
from fgmres : depth: 1, iter: 301, p->H(1,0) = +0.009313+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.007733+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.009432+0.000000i
from fgmres : depth: 1, iter: 251, p->H(1,0) = +0.009996+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.007416+0.000000i
from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.005913+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.009559+0.000000i
from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.008419+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.007884+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.009791+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.008660+0.000000i
+----------------------------------------------------------+
|       FGMRES iterations: 85     coarse average: 473.49   |
| exact relative residual: ||r||/||b|| = 7.725095e-09      |
| elapsed wall clock time: 1504.4763 seconds                |
|        coarse grid time: 1423.8517 seconds (94.6%)        |
|        coarsest grid time: 0.0000   seconds (00.0%)        |
| coarsest grid matmul time: 0.0000   seconds (00.0%)        |
|  consumed core minutes*: 8.02e+02 (solve only)           |
|    max used mem/MPIproc: 2.45e+00 GB                     |
+----------------------------------------------------------+
*: only correct if #MPIprocs*#threads == #CPUs

[81, trace: -118750.350051+-130.492328, variance: 1550614296.310461] from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.009693+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.009993+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.008948+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.009180+0.000000i
from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.008193+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.009375+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.009200+0.000000i
from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.008819+0.000000i
from fgmres : depth: 1, iter: 301, p->H(1,0) = +0.009891+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.007979+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.007872+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.008223+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.007713+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.007288+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.009920+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.009199+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.009727+0.000000i
+----------------------------------------------------------+
|       FGMRES iterations: 69     coarse average: 504.10   |
| exact relative residual: ||r||/||b|| = 5.969301e-09      |
| elapsed wall clock time: 1294.2666 seconds                |
|        coarse grid time: 1228.8270 seconds (94.9%)        |
|        coarsest grid time: 0.0000   seconds (00.0%)        |
| coarsest grid matmul time: 0.0000   seconds (00.0%)        |
|  consumed core minutes*: 6.90e+02 (solve only)           |
|    max used mem/MPIproc: 2.45e+00 GB                     |
+----------------------------------------------------------+
*: only correct if #MPIprocs*#threads == #CPUs

[82, trace: -118915.167266+-126.754796, variance: 1537941611.406402] from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.008406+0.000000i
from fgmres : depth: 1, iter: 501, p->H(1,0) = +0.009675+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.009365+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.009172+0.000000i
from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.008812+0.000000i
from fgmres : depth: 1, iter: 351, p->H(1,0) = +0.007977+0.000000i
from fgmres : depth: 1, iter: 501, p->H(1,0) = +0.009514+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.008134+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.006377+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.009935+0.000000i
from fgmres : depth: 1, iter: 401, p->H(1,0) = +0.009143+0.000000i
from fgmres : depth: 1, iter: 401, p->H(1,0) = +0.009715+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.009066+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.009223+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.008972+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.006263+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.009052+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.006720+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.008133+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.005822+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.006597+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.007944+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.005802+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.008681+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.009874+0.000000i
from fgmres : depth: 1, iter: 501, p->H(1,0) = +0.009532+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.009022+0.000000i
from fgmres : depth: 1, iter: 501, p->H(1,0) = +0.009727+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.008369+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.008831+0.000000i
from fgmres : depth: 1, iter: 401, p->H(1,0) = +0.008396+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.006992+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.008251+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.008063+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.009956+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.009391+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.007591+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.007358+0.000000i
from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.008412+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.009326+0.000000i
from fgmres : depth: 1, iter: 101, p->H(1,0) = +0.009690+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.008037+0.000000i
from fgmres : depth: 1, iter: 401, p->H(1,0) = +0.008159+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.008274+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.007777+0.000000i
+----------------------------------------------------------+
|       FGMRES iterations: 159    coarse average: 447.70   |
| exact relative residual: ||r||/||b|| = 7.269952e-09      |
| elapsed wall clock time: 2672.0864 seconds                |
|        coarse grid time: 2520.7789 seconds (94.3%)        |
|        coarsest grid time: 0.0000   seconds (00.0%)        |
| coarsest grid matmul time: 0.0000   seconds (00.0%)        |
|  consumed core minutes*: 1.43e+03 (solve only)           |
|    max used mem/MPIproc: 2.45e+00 GB                     |
+----------------------------------------------------------+
*: only correct if #MPIprocs*#threads == #CPUs

[83, trace: -118262.620265+-114.847982, variance: 1522039954.590006] from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.009394+0.000000i
from fgmres : depth: 1, iter: 401, p->H(1,0) = +0.009788+0.000000i
from fgmres : depth: 1, iter: 401, p->H(1,0) = +0.009991+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.008594+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.008142+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.009892+0.000000i
from fgmres : depth: 1, iter: 501, p->H(1,0) = +0.008757+0.000000i
from fgmres : depth: 1, iter: 251, p->H(1,0) = +0.008608+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.009811+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.008572+0.000000i
from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.009675+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.008257+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.007734+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.008416+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.009822+0.000000i
+----------------------------------------------------------+
|       FGMRES iterations: 71     coarse average: 547.11   |
| exact relative residual: ||r||/||b|| = 6.729882e-09      |
| elapsed wall clock time: 1445.3207 seconds                |
|        coarse grid time: 1377.9578 seconds (95.3%)        |
|        coarsest grid time: 0.0000   seconds (00.0%)        |
| coarsest grid matmul time: 0.0000   seconds (00.0%)        |
|  consumed core minutes*: 7.71e+02 (solve only)           |
|    max used mem/MPIproc: 2.45e+00 GB                     |
+----------------------------------------------------------+
*: only correct if #MPIprocs*#threads == #CPUs

[84, trace: -118263.169027+-71.297670, variance: 1538856066.738644] from fgmres : depth: 1, iter: 401, p->H(1,0) = +0.009600+0.000000i
from fgmres : depth: 1, iter: 501, p->H(1,0) = +0.009818+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.005906+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.009755+0.000000i
from fgmres : depth: 1, iter: 501, p->H(1,0) = +0.009721+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.008319+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.009231+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.008038+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.007064+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.009642+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.009987+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.008850+0.000000i
from fgmres : depth: 1, iter: 351, p->H(1,0) = +0.007037+0.000000i
from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.009279+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.008582+0.000000i
from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.006284+0.000000i
from fgmres : depth: 1, iter: 501, p->H(1,0) = +0.008616+0.000000i
from fgmres : depth: 1, iter: 301, p->H(1,0) = +0.009580+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.009778+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.007896+0.000000i
from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.009300+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.009982+0.000000i
+----------------------------------------------------------+
|       FGMRES iterations: 88     coarse average: 489.72   |
| exact relative residual: ||r||/||b|| = 5.661481e-09      |
| elapsed wall clock time: 1611.0378 seconds                |
|        coarse grid time: 1527.6549 seconds (94.8%)        |
|        coarsest grid time: 0.0000   seconds (00.0%)        |
| coarsest grid matmul time: 0.0000   seconds (00.0%)        |
|  consumed core minutes*: 8.59e+02 (solve only)           |
|    max used mem/MPIproc: 2.45e+00 GB                     |
+----------------------------------------------------------+
*: only correct if #MPIprocs*#threads == #CPUs

[85, trace: -117823.798249+-47.783611, variance: 1521102944.878897] from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.009095+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.009028+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.008622+0.000000i
from fgmres : depth: 1, iter: 201, p->H(1,0) = +0.009306+0.000000i
from fgmres : depth: 1, iter: 401, p->H(1,0) = +0.009237+0.000000i
from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.008774+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.009788+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.009983+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.008278+0.000000i
from fgmres : depth: 1, iter: 351, p->H(1,0) = +0.009140+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.009222+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.008570+0.000000i
from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.009468+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.006953+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.006823+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.007488+0.000000i
from fgmres : depth: 1, iter: 351, p->H(1,0) = +0.009480+0.000000i
from fgmres : depth: 1, iter: 501, p->H(1,0) = +0.009978+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.009411+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.009886+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.008097+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.009970+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.008608+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.009419+0.000000i
+----------------------------------------------------------+
|       FGMRES iterations: 99     coarse average: 496.15   |
| exact relative residual: ||r||/||b|| = 4.538406e-09      |
| elapsed wall clock time: 1832.4607 seconds                |
|        coarse grid time: 1738.1959 seconds (94.9%)        |
|        coarsest grid time: 0.0000   seconds (00.0%)        |
| coarsest grid matmul time: 0.0000   seconds (00.0%)        |
|  consumed core minutes*: 9.77e+02 (solve only)           |
|    max used mem/MPIproc: 2.45e+00 GB                     |
+----------------------------------------------------------+
*: only correct if #MPIprocs*#threads == #CPUs

[86, trace: -118033.160250+-28.709288, variance: 1519724514.446386] from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.008866+0.000000i
from fgmres : depth: 1, iter: 401, p->H(1,0) = +0.009169+0.000000i
from fgmres : depth: 1, iter: 251, p->H(1,0) = +0.009384+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.009729+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.008830+0.000000i
from fgmres : depth: 1, iter: 401, p->H(1,0) = +0.008898+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.008667+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.009432+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.009997+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.009761+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.006721+0.000000i
from fgmres : depth: 1, iter: 351, p->H(1,0) = +0.005362+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.007371+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.008566+0.000000i
from fgmres : depth: 1, iter: 401, p->H(1,0) = +0.009161+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.007106+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.008544+0.000000i
from fgmres : depth: 1, iter: 351, p->H(1,0) = +0.009905+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.008124+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.007918+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.006348+0.000000i
from fgmres : depth: 1, iter: 401, p->H(1,0) = +0.009534+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.008299+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.008007+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.009998+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.007746+0.000000i
from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.008407+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.009227+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.009576+0.000000i
+----------------------------------------------------------+
|       FGMRES iterations: 110    coarse average: 454.95   |
| exact relative residual: ||r||/||b|| = 5.005813e-09      |
| elapsed wall clock time: 1875.7306 seconds                |
|        coarse grid time: 1770.9924 seconds (94.4%)        |
|        coarsest grid time: 0.0000   seconds (00.0%)        |
| coarsest grid matmul time: 0.0000   seconds (00.0%)        |
|  consumed core minutes*: 1.00e+03 (solve only)           |
|    max used mem/MPIproc: 2.45e+00 GB                     |
+----------------------------------------------------------+
*: only correct if #MPIprocs*#threads == #CPUs

[87, trace: -118338.273337+-22.716644, variance: 1506106738.036683] from fgmres : depth: 1, iter: 401, p->H(1,0) = +0.007958+0.000000i
from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.008835+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.007388+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.009650+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.008181+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.007055+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.009828+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.007922+0.000000i
from fgmres : depth: 1, iter: 401, p->H(1,0) = +0.009792+0.000000i
from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.007661+0.000000i
from fgmres : depth: 1, iter: 401, p->H(1,0) = +0.007101+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.009418+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.007960+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.009832+0.000000i
from fgmres : depth: 1, iter: 351, p->H(1,0) = +0.007759+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.007255+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.009929+0.000000i
from fgmres : depth: 1, iter: 401, p->H(1,0) = +0.008102+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.009292+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.006292+0.000000i
from fgmres : depth: 1, iter: 501, p->H(1,0) = +0.009694+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.008900+0.000000i
from fgmres : depth: 1, iter: 301, p->H(1,0) = +0.006468+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.007028+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.006093+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.008441+0.000000i
from fgmres : depth: 1, iter: 401, p->H(1,0) = +0.008408+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.009963+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.008905+0.000000i
+----------------------------------------------------------+
|       FGMRES iterations: 103    coarse average: 445.77   |
| exact relative residual: ||r||/||b|| = 9.278296e-09      |
| elapsed wall clock time: 1718.6751 seconds                |
|        coarse grid time: 1621.1229 seconds (94.3%)        |
|        coarsest grid time: 0.0000   seconds (00.0%)        |
| coarsest grid matmul time: 0.0000   seconds (00.0%)        |
|  consumed core minutes*: 9.17e+02 (solve only)           |
|    max used mem/MPIproc: 2.45e+00 GB                     |
+----------------------------------------------------------+
*: only correct if #MPIprocs*#threads == #CPUs

[88, trace: -118732.619281+-38.647210, variance: 1497157881.625374] from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.009016+0.000000i
from fgmres : depth: 1, iter: 351, p->H(1,0) = +0.008789+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.007013+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.007012+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.008524+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.006432+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.008195+0.000000i
from fgmres : depth: 1, iter: 151, p->H(1,0) = +0.009290+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.009819+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.009836+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.009844+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.009724+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.009373+0.000000i
from fgmres : depth: 1, iter: 501, p->H(1,0) = +0.009495+0.000000i
from fgmres : depth: 1, iter: 401, p->H(1,0) = +0.008822+0.000000i
from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.009549+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.009658+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.008409+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.009009+0.000000i
from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.009383+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.009464+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.008270+0.000000i
from fgmres : depth: 1, iter: 401, p->H(1,0) = +0.009475+0.000000i
+----------------------------------------------------------+
|       FGMRES iterations: 87     coarse average: 421.23   |
| exact relative residual: ||r||/||b|| = 5.839357e-09      |
| elapsed wall clock time: 1376.9806 seconds                |
|        coarse grid time: 1294.3697 seconds (94.0%)        |
|        coarsest grid time: 0.0000   seconds (00.0%)        |
| coarsest grid matmul time: 0.0000   seconds (00.0%)        |
|  consumed core minutes*: 7.34e+02 (solve only)           |
|    max used mem/MPIproc: 2.45e+00 GB                     |
+----------------------------------------------------------+
*: only correct if #MPIprocs*#threads == #CPUs

[89, trace: -118970.564037+-40.739955, variance: 1493945593.240732] from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.007750+0.000000i
from fgmres : depth: 1, iter: 251, p->H(1,0) = +0.009713+0.000000i
from fgmres : depth: 1, iter: 301, p->H(1,0) = +0.007727+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.008470+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.009628+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.006236+0.000000i
from fgmres : depth: 1, iter: 301, p->H(1,0) = +0.008773+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.008866+0.000000i
from fgmres : depth: 1, iter: 251, p->H(1,0) = +0.009273+0.000000i
+----------------------------------------------------------+
|       FGMRES iterations: 49     coarse average: 451.69   |
| exact relative residual: ||r||/||b|| = 8.590562e-09      |
| elapsed wall clock time: 827.4627 seconds                |
|        coarse grid time: 780.9672 seconds (94.4%)        |
|        coarsest grid time: 0.0000   seconds (00.0%)        |
| coarsest grid matmul time: 0.0000   seconds (00.0%)        |
|  consumed core minutes*: 4.41e+02 (solve only)           |
|    max used mem/MPIproc: 2.45e+00 GB                     |
+----------------------------------------------------------+
*: only correct if #MPIprocs*#threads == #CPUs

[90, trace: -119177.534550+-44.686473, variance: 1482372422.885531] from fgmres : depth: 1, iter: 251, p->H(1,0) = +0.009891+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.009713+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.009702+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.009486+0.000000i
from fgmres : depth: 1, iter: 401, p->H(1,0) = +0.009860+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.008612+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.009792+0.000000i
from fgmres : depth: 1, iter: 401, p->H(1,0) = +0.009114+0.000000i
from fgmres : depth: 1, iter: 251, p->H(1,0) = +0.006968+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.006129+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.009812+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.009168+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.009090+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.006095+0.000000i
from fgmres : depth: 1, iter: 351, p->H(1,0) = +0.009937+0.000000i
from fgmres : depth: 1, iter: 201, p->H(1,0) = +0.008609+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.007777+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.008515+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.008048+0.000000i
from fgmres : depth: 1, iter: 401, p->H(1,0) = +0.008581+0.000000i
+----------------------------------------------------------+
|       FGMRES iterations: 87     coarse average: 539.32   |
| exact relative residual: ||r||/||b|| = 4.784608e-09      |
| elapsed wall clock time: 1740.6786 seconds                |
|        coarse grid time: 1658.1991 seconds (95.3%)        |
|        coarsest grid time: 0.0000   seconds (00.0%)        |
| coarsest grid matmul time: 0.0000   seconds (00.0%)        |
|  consumed core minutes*: 9.28e+02 (solve only)           |
|    max used mem/MPIproc: 2.45e+00 GB                     |
+----------------------------------------------------------+
*: only correct if #MPIprocs*#threads == #CPUs

[91, trace: -119210.475002+-52.906148, variance: 1469898100.341775] from fgmres : depth: 1, iter: 401, p->H(1,0) = +0.008912+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.009479+0.000000i
from fgmres : depth: 1, iter: 51, p->H(1,0) = +0.009441+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.009504+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.007687+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.008171+0.000000i
from fgmres : depth: 1, iter: 351, p->H(1,0) = +0.007405+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.009004+0.000000i
from fgmres : depth: 1, iter: 401, p->H(1,0) = +0.007406+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.008961+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.007809+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.008864+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.006383+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.009044+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.008279+0.000000i
from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.005898+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.009260+0.000000i
from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.008268+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.009613+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.008899+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.009752+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.008092+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.009431+0.000000i
from fgmres : depth: 1, iter: 351, p->H(1,0) = +0.008923+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.006573+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.007124+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.009608+0.000000i
from fgmres : depth: 1, iter: 501, p->H(1,0) = +0.007994+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.008726+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.007642+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.009430+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.007525+0.000000i
from fgmres : depth: 1, iter: 501, p->H(1,0) = +0.007772+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.009454+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.008429+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.009445+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.009730+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.009473+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.009529+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.007042+0.000000i
+----------------------------------------------------------+
|       FGMRES iterations: 146    coarse average: 475.45   |
| exact relative residual: ||r||/||b|| = 6.776449e-09      |
| elapsed wall clock time: 2589.2532 seconds                |
|        coarse grid time: 2450.8935 seconds (94.7%)        |
|        coarsest grid time: 0.0000   seconds (00.0%)        |
| coarsest grid matmul time: 0.0000   seconds (00.0%)        |
|  consumed core minutes*: 1.38e+03 (solve only)           |
|    max used mem/MPIproc: 2.45e+00 GB                     |
+----------------------------------------------------------+
*: only correct if #MPIprocs*#threads == #CPUs

[92, trace: -119193.795130+-60.765258, variance: 1454025036.866001] from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.007953+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.005542+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.008151+0.000000i
from fgmres : depth: 1, iter: 101, p->H(1,0) = +0.009362+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.007401+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.009095+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.008225+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.007570+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.009119+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.009398+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.007505+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.009494+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.007448+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.009971+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.009503+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.009263+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.009132+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.009820+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.009792+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.007214+0.000000i
from fgmres : depth: 1, iter: 501, p->H(1,0) = +0.009417+0.000000i
from fgmres : depth: 1, iter: 501, p->H(1,0) = +0.009566+0.000000i
from fgmres : depth: 1, iter: 351, p->H(1,0) = +0.006384+0.000000i
from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.009985+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.009685+0.000000i
from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.006235+0.000000i
from fgmres : depth: 1, iter: 351, p->H(1,0) = +0.009757+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.008860+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.009827+0.000000i
from fgmres : depth: 1, iter: 501, p->H(1,0) = +0.009429+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.007680+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.008539+0.000000i
from fgmres : depth: 1, iter: 501, p->H(1,0) = +0.009749+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.008098+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.006551+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.009839+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.006562+0.000000i
+----------------------------------------------------------+
|       FGMRES iterations: 121    coarse average: 438.26   |
| exact relative residual: ||r||/||b|| = 4.937014e-09      |
| elapsed wall clock time: 1985.9858 seconds                |
|        coarse grid time: 1870.8862 seconds (94.2%)        |
|        coarsest grid time: 0.0000   seconds (00.0%)        |
| coarsest grid matmul time: 0.0000   seconds (00.0%)        |
|  consumed core minutes*: 1.06e+03 (solve only)           |
|    max used mem/MPIproc: 2.45e+00 GB                     |
+----------------------------------------------------------+
*: only correct if #MPIprocs*#threads == #CPUs

[93, trace: -119272.728091+-63.543331, variance: 1438427539.356050] from fgmres : depth: 1, iter: 401, p->H(1,0) = +0.009184+0.000000i
from fgmres : depth: 1, iter: 501, p->H(1,0) = +0.007080+0.000000i
from fgmres : depth: 1, iter: 401, p->H(1,0) = +0.006741+0.000000i
from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.009544+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.009108+0.000000i
from fgmres : depth: 1, iter: 351, p->H(1,0) = +0.008207+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.009103+0.000000i
from fgmres : depth: 1, iter: 651, p->H(1,0) = +0.005917+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.008390+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.009933+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.009832+0.000000i
from fgmres : depth: 1, iter: 351, p->H(1,0) = +0.009938+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.008648+0.000000i
from fgmres : depth: 1, iter: 351, p->H(1,0) = +0.007478+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.007523+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.008176+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.007889+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.009416+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.009412+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.009843+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.009950+0.000000i
from fgmres : depth: 1, iter: 601, p->H(1,0) = +0.009098+0.000000i
from fgmres : depth: 1, iter: 501, p->H(1,0) = +0.009990+0.000000i
from fgmres : depth: 1, iter: 351, p->H(1,0) = +0.008979+0.000000i
from fgmres : depth: 1, iter: 501, p->H(1,0) = +0.008892+0.000000i
+----------------------------------------------------------+
|       FGMRES iterations: 98     coarse average: 482.38   |
| exact relative residual: ||r||/||b|| = 3.949960e-09      |
| elapsed wall clock time: 1759.1559 seconds                |
|        coarse grid time: 1666.4227 seconds (94.7%)        |
|        coarsest grid time: 0.0000   seconds (00.0%)        |
| coarsest grid matmul time: 0.0000   seconds (00.0%)        |
|  consumed core minutes*: 9.38e+02 (solve only)           |
|    max used mem/MPIproc: 2.45e+00 GB                     |
+----------------------------------------------------------+
*: only correct if #MPIprocs*#threads == #CPUs

[94, trace: -119043.341294+-53.596103, variance: 1423751810.297279] from fgmres : depth: 1, iter: 401, p->H(1,0) = +0.009400+0.000000i
from fgmres : depth: 1, iter: 951, p->H(1,0) = +0.006928+0.000000i
from fgmres : depth: 1, iter: 401, p->H(1,0) = +0.008644+0.000000i
from fgmres : depth: 1, iter: 751, p->H(1,0) = +0.007253+0.000000i
from fgmres : depth: 1, iter: 451, p->H(1,0) = +0.007000+0.000000i
from fgmres : depth: 1, iter: 801, p->H(1,0) = +0.008027+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.009792+0.000000i
from fgmres : depth: 1, iter: 851, p->H(1,0) = +0.009689+0.000000i
from fgmres : depth: 1, iter: 551, p->H(1,0) = +0.008197+0.000000i
from fgmres : depth: 1, iter: 901, p->H(1,0) = +0.009415+0.000000i
from fgmres : depth: 1, iter: 701, p->H(1,0) = +0.009456+0.000000i
